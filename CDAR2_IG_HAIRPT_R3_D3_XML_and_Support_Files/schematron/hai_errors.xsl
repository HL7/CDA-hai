<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:voc="http://www.lantanagroup.com/voc"
                xmlns:svs="urn:ihe:iti:svs:2008"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:sdtc="urn:hl7-org:sdtc"
                xmlns:cda="urn:hl7-org:v3"
                version="1.0"
                voc:dummy-for-xmlns=""
                svs:dummy-for-xmlns=""
                xsi:dummy-for-xmlns=""
                sdtc:dummy-for-xmlns=""
                cda:dummy-for-xmlns="">
   <xsl:output method="xml" omit-xml-declaration="no" standalone="yes" indent="yes"/>
   <xsl:template match="*|@*" mode="schematron-get-full-path">
      <xsl:apply-templates select="parent::*" mode="schematron-get-full-path"/>
      <xsl:text>/</xsl:text>
      <xsl:if test="count(. | ../@*) = count(../@*)">@</xsl:if>
      <xsl:value-of select="name()"/>
      <xsl:text>[</xsl:text>
      <xsl:value-of select="1+count(preceding-sibling::*[name()=name(current())])"/>
      <xsl:text>]</xsl:text>
   </xsl:template>
   <xsl:template match="/">
      <schematron-output title="" schemaVersion="" phase="errors">
         <ns uri="http://www.lantanagroup.com/voc" prefix="voc"/>
         <ns uri="urn:ihe:iti:svs:2008" prefix="svs"/>
         <ns uri="http://www.w3.org/2001/XMLSchema-instance" prefix="xsi"/>
         <ns uri="urn:hl7-org:sdtc" prefix="sdtc"/>
         <ns uri="urn:hl7-org:v3" prefix="cda"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M7"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M8"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M9"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M10"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M11"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M12"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M13"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M14"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M15"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M16"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M17"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M18"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M19"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M20"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M21"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M22"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M23"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M24"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M25"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M26"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M27"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M28"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M29"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M30"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M31"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M32"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M33"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M34"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M35"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M36"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M37"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M38"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M39"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M40"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M41"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M42"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M43"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M44"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M45"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M46"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M47"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M48"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M49"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M50"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M51"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M52"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M53"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M54"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M55"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M56"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M57"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M58"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M59"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M60"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M61"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M62"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M63"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M64"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M65"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M66"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M67"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M68"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M69"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M70"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M71"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M72"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M73"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M74"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M75"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M76"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M77"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M78"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M79"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M80"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M81"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M82"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M83"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M84"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M85"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M86"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M87"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M88"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M89"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M90"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M91"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M92"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M93"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M94"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M95"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M96"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M97"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M98"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M99"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M100"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M101"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M102"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M103"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M104"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M105"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M106"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M107"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M108"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M109"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M110"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M111"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M112"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M113"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M114"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M115"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M116"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M117"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M118"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M119"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M120"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M121"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M122"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M123"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M124"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M125"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M126"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M127"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M128"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M129"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M130"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M131"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M132"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M133"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M134"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M135"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M136"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M137"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M138"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M139"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M140"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M141"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M142"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M143"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M144"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M145"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M146"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M147"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M148"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M149"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M150"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M151"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M152"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M153"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M154"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M155"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M156"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M157"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M158"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M159"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M160"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M161"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M162"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M163"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M164"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M165"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M166"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M167"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M168"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M169"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M170"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M171"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M172"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M173"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M174"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M175"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M176"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M177"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M178"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M179"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M180"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M181"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M182"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M183"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M184"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M185"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M186"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M187"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M188"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M189"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M190"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M191"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M192"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M193"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M194"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M195"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M196"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M197"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M198"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M199"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M200"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M201"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M202"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M203"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M204"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M205"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M206"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M207"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M208"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M209"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M210"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M211"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M212"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M213"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M214"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M215"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M216"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M217"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M218"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M219"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M220"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M221"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M222"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M223"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M224"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M225"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M226"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M227"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M228"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M229"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M230"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M231"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M232"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M233"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M234"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M235"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M236"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M237"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M238"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M239"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M240"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M241"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M242"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M243"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M244"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M245"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M246"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M247"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M248"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M249"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M250"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M251"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M252"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M253"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M254"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M255"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M256"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M257"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M258"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M259"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M260"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M261"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M262"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M263"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M264"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M265"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M266"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M267"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M268"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M269"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M270"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M271"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M272"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M273"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M274"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M275"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M276"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M277"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M278"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M279"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M280"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M281"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M282"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M283"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M284"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M285"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M286"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M287"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M288"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M289"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M290"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M291"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M292"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M293"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M294"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M295"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M296"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M297"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M298"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M299"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M300"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M301"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M302"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M303"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M304"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M305"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M306"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M307"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M308"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M309"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M310"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M311"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M312"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M313"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M314"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M315"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M316"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M317"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M318"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M319"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M320"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M321"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M322"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M323"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M324"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M325"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M326"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M327"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M328"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M329"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M330"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M331"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M332"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M333"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M334"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M335"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M336"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M337"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M338"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M339"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M340"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M341"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M342"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M343"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M344"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M345"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M346"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M347"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M348"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M349"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M350"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M351"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M352"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M353"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M354"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M355"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M356"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M357"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M358"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M359"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M360"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M361"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M362"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M363"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M364"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M365"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M366"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M367"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M368"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M369"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M370"/>
         <active-pattern name="">
            <xsl:apply-templates/>
         </active-pattern>
         <xsl:apply-templates select="/" mode="M371"/>
      </schematron-output>
   </xsl:template>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25']]"
                 priority="3999"
                 mode="M7">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.4.25-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M7"/>
   </xsl:template>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25']]/cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25']"
                 priority="3997"
                 mode="M7">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.4.25-18460-branch-18460-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25']]/cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25']"
                  role=""/>
      <xsl:choose>
         <xsl:when test="not(@extension)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18462-branch-18460" test="not(@extension)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL NOT contain [0..0] @extension (CONF:86-18462).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M7"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M7"/>
   <xsl:template match="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.112']]"
                 priority="3999"
                 mode="M8">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.112-errors"
                  context="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.112']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='SBADM'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19560" test="@classCode='SBADM'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="SBADM" Substance administration (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19560).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19561" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19561).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19562" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-19562).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:consumable)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19563" test="count(cda:consumable)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] consumable (CONF:86-19563).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19572" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19572).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19573" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19573).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19574" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:86-19574).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable[count(cda:manufacturedProduct)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19578" test="cda:consumable[count(cda:manufacturedProduct)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This consumable SHALL contain exactly one [1..1] manufacturedProduct (CONF:86-19578).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct[count(cda:manufacturedMaterial)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19579"
                           test="cda:consumable/cda:manufacturedProduct[count(cda:manufacturedMaterial)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedProduct SHALL contain exactly one [1..1] manufacturedMaterial (CONF:86-19579).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19580"
                           test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedMaterial SHALL contain exactly one [1..1] code (CONF:86-19580).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial/cda:code[@code='84451006']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19581"
                           test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial/cda:code[@code='84451006']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="84451006" General Anesthesia (CONF:86-19581).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial/cda:code[@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19582"
                           test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial/cda:code[@codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CONF:86-19582).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22720" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22720).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.16'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28201"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.16'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28201) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.16" (CONF:86-28202).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.112'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19570"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.112'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19570) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.112" (CONF:86-19571).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime[@xsi:type='IVL_TS'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28331" test="count(cda:effectiveTime[@xsi:type='IVL_TS'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-28331).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28332" test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-28332).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28333" test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:86-28333).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct[count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.23'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28334"
                           test="cda:consumable/cda:manufacturedProduct[count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.23'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedProduct SHALL contain exactly one [1..1] templateId (CONF:86-28334) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.23" (CONF:86-28337).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS']/cda:low[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28335"
                           test="cda:effectiveTime[@xsi:type='IVL_TS']/cda:low[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @nullFlavor="NA" (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008) (CONF:86-28335).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS']/cda:high[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28336"
                           test="cda:effectiveTime[@xsi:type='IVL_TS']/cda:high[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This high SHALL contain exactly one [1..1] @nullFlavor="NA" (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008) (CONF:86-28336).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct[@classCode='MANU']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28349"
                           test="cda:consumable/cda:manufacturedProduct[@classCode='MANU']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedProduct SHALL contain exactly one [1..1] @classCode="MANU" (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110) (CONF:86-28349).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M8"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M8"/>
   <xsl:template match="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.112']]"
                 priority="3999"
                 mode="M9">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.112-errors-CL"
                  context="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.112']]"
                  role=""/>
      <xsl:apply-templates mode="M9"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M9"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.113']]"
                 priority="3999"
                 mode="M10">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.113-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.113']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19583" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19583).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19584" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19584).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'        or /cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:code[@code='AMB']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19585-c"
                           test="@negationInd='false' or /cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:code[@code='AMB']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:86-19585).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19586" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19586).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19587" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-19587).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19588" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19588).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19589" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19589).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD' and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.10']/voc:code/@value or @nullFlavor])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19590"
                           test="count(cda:value[@xsi:type='CD' and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.10']/voc:code/@value or @nullFlavor])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHALL be selected from ValueSet NHSNASAClassCode urn:oid:2.16.840.1.113883.13.10 STATIC 2008-01-30 (CONF:86-19590).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28213"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28213) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28214).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19596" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19596).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22724" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22724).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.113'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19594"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.113'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19594) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.113" (CONF:86-19595).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28370" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28370).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M10"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M10"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.113']]"
                 priority="3999"
                 mode="M11">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.113-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.113']]"
                  role=""/>
      <xsl:apply-templates mode="M11"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M11"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.114']]"
                 priority="3999"
                 mode="M12">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.114-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.114']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19597" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19597).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19598" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19598).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19599" test="@negationInd='false'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:86-19599).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19600" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19600).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19601" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-19601).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19602" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19602).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19603" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19603).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19604" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHALL be selected from ValueSet NHSNBloodStreamInfectionEvidenceTypeCode urn:oid:2.16.840.1.113883.13.7 DYNAMIC (CONF:86-19604).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28215"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28215) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28216).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19610" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19610).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22725" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22725).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.114'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19608"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.114'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19608) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.114" (CONF:86-19609).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28371" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28371).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M12"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M12"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.114']]"
                 priority="3999"
                 mode="M13">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.114-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.114']]"
                  role=""/>
      <xsl:apply-templates mode="M13"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M13"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.120']]"
                 priority="3999"
                 mode="M14">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.120-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.120']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19611" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19611).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19612" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19612).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19613" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-19613).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19614" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19614).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19615" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-19615).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19616" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19616).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19617" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19617).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19618" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-19618).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='419099009']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19619" test="cda:value[@xsi:type='CD'][@code='419099009']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="419099009" Dead (CONF:86-19619).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.79'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28223"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.79'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28223) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.79" (CONF:86-28224).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19625" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19625).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19626" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-19626).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19627" test="cda:effectiveTime[count(cda:low)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-19627).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22739" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22739).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime/cda:low[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22740" test="cda:effectiveTime/cda:low[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22740).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='CAUS']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23064"
                           test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='CAUS']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] @typeCode="CAUS" is etiology for (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002) (CONF:86-23064).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[@inversionInd='true']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23065"
                           test="not(cda:entryRelationship) or cda:entryRelationship[@inversionInd='true']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] @inversionInd="true" (CONF:86-23065).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[@negationInd]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23066"
                           test="not(cda:entryRelationship) or cda:entryRelationship[@negationInd]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] @negationInd (CONF:86-23066).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23067-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the infection contributed to death, set the value of @negationInd to false. If the infection did not contribute to the death, set the value of @negationInd to true (CONF:86-23067).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.136']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23068"
                           test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.136']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] Infection Contributed to Death Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.136) (CONF:86-23068).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23069-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the patient died, an entryRelationship element SHALL be present and SHALL contain an Infection Contributed to Death Observation (CONF:86-23069).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.120'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19623"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.120'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19623) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.120" (CONF:86-19624).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28353"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:86-28353).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28374" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28374).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M14"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M14"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.120']]"
                 priority="3999"
                 mode="M15">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.120-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.120']]"
                  role=""/>
      <xsl:apply-templates mode="M15"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M15"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.121']]"
                 priority="3999"
                 mode="M16">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.121-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.121']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19628" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19628).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19629" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19629).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19630" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19630).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19631" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-19631).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19632" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19632).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19633" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19633).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19634" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-19634).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='419099009']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19635" test="cda:value[@xsi:type='CD'][@code='419099009']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="419099009" Dead (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-19635).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.79'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28225"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.79'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28225) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.79" (CONF:86-28226).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19641" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19641).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19642" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-19642).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19643" test="cda:effectiveTime[count(cda:low)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-19643).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19646-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If @negationInd is present then @nullFlavor SHALL NOT contain a value (CONF:86-19646).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19647-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If @nullFlavor is present then @negationInd SHALL NOT contain a value (CONF:86-19647).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19648-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>*SHALL* contain either @nullFlavor or @negationInd, but SHALL NOT contain both (CONF:86-19648).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22742" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22742).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime/cda:low[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22743" test="cda:effectiveTime/cda:low[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22743).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.121'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19639"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.121'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19639) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.121" (CONF:86-19640).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M16"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M16"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.121']]"
                 priority="3999"
                 mode="M17">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.121-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.121']]"
                  role=""/>
      <xsl:apply-templates mode="M17"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M17"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.174']]"
                 priority="3999"
                 mode="M18">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.174-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.174']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19679" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19679).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19680" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19680).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19681" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19681).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='420089007' and @codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19682"
                           test="cda:code[@code='420089007' and @codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="420089007" CDC Wound Classification Category (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-19682).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19683" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19683).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19684" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19684).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD' and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.9']/voc:code/@value or @nullFlavor])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19685"
                           test="count(cda:value[@xsi:type='CD' and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.9']/voc:code/@value or @nullFlavor])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHALL be selected from ValueSet NHSNWoundClassCode urn:oid:2.16.840.1.113883.13.9 STATIC 2008-01-30 (CONF:86-19685).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28299"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28299) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28300).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19691" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19691).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22717" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22717).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.174'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19689"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.174'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19689) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.174" (CONF:86-19690).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M18"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M18"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.174']]"
                 priority="3999"
                 mode="M19">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.174-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.174']]"
                  role=""/>
      <xsl:apply-templates mode="M19"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M19"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.173']]"
                 priority="3999"
                 mode="M20">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.173-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.173']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19702" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19702).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19703" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19703).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19704" test="@negationInd='false'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:86-19704).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19705" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19705).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='27113001' and @codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19706"
                           test="cda:code[@code='27113001' and @codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="27113001" Body weight (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-19706).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19707" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19707).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19708" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19708).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value/@xsi:type='PQ' and (cda:value/@value &gt;= 0)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19709-c" test="cda:value/@xsi:type='PQ' and (cda:value/@value &gt;= 0)"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="PQ" (CONF:86-19709).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28297"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28297) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.27" (CONF:86-28298).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19897" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19897).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19898" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-19898).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22718" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22718).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22719" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22719).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.173'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19712"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.173'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19712) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.173" (CONF:86-19714).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='PQ'][@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19710" test="cda:value[@xsi:type='PQ'][@value]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @value (CONF:86-19710).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='PQ'][@unit]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28399" test="cda:value[@xsi:type='PQ'][@unit]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @unit (CONF:86-28399).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28400-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of @value SHALL be a non-negative real number representing the body weight in terms of the units specified in @unit (CONF:86-28400).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M20"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M20"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.173']]"
                 priority="3999"
                 mode="M21">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.173-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.173']]"
                  role=""/>
      <xsl:apply-templates mode="M21"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M21"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.150']]"
                 priority="3999"
                 mode="M22">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.150-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.150']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19715" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19715).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19716" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19716).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19717" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-19717).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19719" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19719).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19720" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-19720).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19721" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19721).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19722" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19722).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='REFR']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19726"
                           test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='REFR']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] @typeCode="REFR" (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-19726).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.154']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19727"
                           test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.154']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] Procedure Details Clinical Statement in an Infection-Type Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.154) (CONF:86-19727).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='true' or (@negationInd='false' and count(cda:entryRelationship)=1)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19728-c"
                           test="@negationInd='true' or (@negationInd='false' and count(cda:entryRelationship)=1)"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the value of @negationInd is false this entryRelationship SHALL be present (CONF:86-19728).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28265"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28265) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28266).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19784" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-19784).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='3188-0']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19785" test="cda:value[@xsi:type='CD'][@code='3188-0']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="3188-0" Infection occurred post-procedure (CONF:86-19785).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19786"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:86-19786).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19882" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19882).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22782" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22782).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.150'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19742"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.150'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19742) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.150" (CONF:86-19743).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28397" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28397).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M22"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M22"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.150']]"
                 priority="3999"
                 mode="M23">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.150-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.150']]"
                  role=""/>
      <xsl:apply-templates mode="M23"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M23"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.131']]"
                 priority="3999"
                 mode="M24">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.131-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.131']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19729" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19729).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19730" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19730).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19731" test="@negationInd='false'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:86-19731).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19732" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19732).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='50373000']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19733" test="cda:code[@code='50373000']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="50373000" Body height (CONF:86-19733).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19734" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19734).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19735" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19735).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='PQ'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19736" test="count(cda:value[@xsi:type='PQ'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="PQ" (CONF:86-19736).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28241"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28241) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.27" (CONF:86-28242).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19748" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19748).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19749" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-19749).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='PQ'][@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19750" test="cda:value[@xsi:type='PQ'][@value]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @value (CONF:86-19750).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value/@value &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19751-c" test="cda:value/@value &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of @value SHALL be a non-negative real number representing the body height in terms of the units specified in @unit (CONF:86-19751).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='PQ'][@unit]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19752" test="cda:value[@xsi:type='PQ'][@unit]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @unit (CONF:86-19752).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22753" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22753).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22754" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22754).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.131'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19746"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.131'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19746) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.131" (CONF:86-27434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M24"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M24"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.131']]"
                 priority="3999"
                 mode="M25">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.131-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.131']]"
                  role=""/>
      <xsl:apply-templates mode="M25"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M25"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.137']]"
                 priority="3999"
                 mode="M26">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.137-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.137']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19769" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19769).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19770" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19770).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19771" test="@negationInd='false'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:86-19771).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19772" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19772).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='364589006']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19773" test="cda:code[@code='364589006']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="364589006" Birth weight (CONF:86-19773).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19774" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19774).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19775" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19775).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='PQ'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19776" test="count(cda:value[@xsi:type='PQ'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="PQ" (CONF:86-19776).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28247"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28247) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.27" (CONF:86-28248).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19782" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19782).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19899" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-19899).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22759" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22759).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22760" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22760).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.137'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19780"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.137'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19780) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.137" (CONF:86-19781).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M26"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M26"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.137']]"
                 priority="3999"
                 mode="M27">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.137-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.137']]"
                  role=""/>
      <xsl:apply-templates mode="M27"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M27"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.147']]"
                 priority="3999"
                 mode="M28">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.147-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.147']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19787" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19787).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19788" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19788).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19789" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19789).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19790" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-19790).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19791" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19791).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19792" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19792).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@codeSystem='2.16.840.1.113883.6.277' or @nullFlavor][@xsi:type='CO'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19793"
                           test="count(cda:value[@codeSystem='2.16.840.1.113883.6.277' or @nullFlavor][@xsi:type='CO'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CO" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277 STATIC) (CONF:86-19793).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(cda:value[@xsi:type='CO'][@codeSystem='2.16.840.1.113883.6.277'][@code='1' or @code='2' or @code='3'])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19794-c"
                           test="(cda:value[@xsi:type='CO'][@codeSystem='2.16.840.1.113883.6.277'][@code='1' or @code='2' or @code='3'])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of value/@codeSystem SHALL be 2.16.840.1.113883.6.277 cdcNHSN, and the value of value/@code SHALL be the number 1 or 2 or 3, where 1 represents the highest-ranked pathogen of up to three pathogens recorded (CONF:86-19794).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28263"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28263) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28264).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19799" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19799).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22780" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22780).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.147'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19797"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.147'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19797) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.147" (CONF:86-19798).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28384" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28384).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M28"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M28"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.147']]"
                 priority="3999"
                 mode="M29">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.147-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.147']]"
                  role=""/>
      <xsl:apply-templates mode="M29"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M29"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.138']]"
                 priority="3999"
                 mode="M30">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.138-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.138']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19800" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19800).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19801" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19801).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19802" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-19802).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19803" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19803).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19804" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-19804).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19805" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19805).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19806" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19806).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD' and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.6']/voc:code/@value or @nullFlavor])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19807"
                           test="count(cda:value[@xsi:type='CD' and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.6']/voc:code/@value or @nullFlavor])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHALL be selected from ValueSet NHSNInfectionRiskFactorsCode urn:oid:2.16.840.1.113883.13.6 STATIC 2012-08-09 (CONF:86-19807).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='REFR']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19810"
                           test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='REFR']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] @typeCode="REFR" (CONF:86-19810).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[@inversionInd='true']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19811"
                           test="not(cda:entryRelationship) or cda:entryRelationship[@inversionInd='true']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] @inversionInd="true" (CONF:86-19811).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.122']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19812"
                           test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.122']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] Device Insertion Time and Location Procedure (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.122) (CONF:86-19812).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28249"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28249) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28250).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19817" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19817).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22761" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22761).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.138'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19814"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.138'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19814) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.138" (CONF:86-19816).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28381" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28381).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M30"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M30"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.138']]"
                 priority="3999"
                 mode="M31">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.138-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.138']]"
                  role=""/>
      <xsl:apply-templates mode="M31"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M31"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.160']]"
                 priority="3999"
                 mode="M32">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.160-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.160']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19840" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19840).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19841" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19841).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19842" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-19842).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19843" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19843).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19844" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-19844).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19845" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19845).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19846" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19846).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19847" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-19847).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='3111-2']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19848" test="cda:value[@xsi:type='CD'][@code='3111-2']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="3111-2" Secondary bloodstream infection (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277 STATIC) (CONF:86-19848).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28275"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28275) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28276).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23363" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-23363).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23364" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-23364).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.160'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19851"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.160'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19851) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.160" (CONF:86-19852).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28388" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28388).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M32"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M32"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.160']]"
                 priority="3999"
                 mode="M33">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.160-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.160']]"
                  role=""/>
      <xsl:apply-templates mode="M33"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M33"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.135']]"
                 priority="3999"
                 mode="M34">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.135-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.135']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19883" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19883).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19884" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19884).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19885" test="@negationInd='false'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:86-19885).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28245"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28245) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28246).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19890" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19890).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19891" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19891).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19892" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-19892).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19893" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19893).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19894" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19894).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19895" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHALL be selected from ValueSet NHSNInfectionConditionCode urn:oid:2.16.840.1.114222.4.11.3196 DYNAMIC (CONF:86-19895).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22758" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22758).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.135'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19888"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.135'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19888) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.135" (CONF:86-19889).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28379" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28379).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M34"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M34"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.135']]"
                 priority="3999"
                 mode="M35">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.135-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.135']]"
                  role=""/>
      <xsl:apply-templates mode="M35"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M35"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.157']]"
                 priority="3999"
                 mode="M36">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.157-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.157']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19900" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-19900).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19901" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-19901).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19902" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-19902).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28271"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28271) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28272).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19907" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-19907).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19908" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-19908).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19909" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-19909).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19910" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-19910).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19911" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-19911).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19912" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-19912).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='2305-1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19913" test="cda:value[@xsi:type='CD'][@code='2305-1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="2305-1" Pus, redness, or increased swelling (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277 STATIC) (CONF:86-19913).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(@negationInd != 'false') or count(cda:participant) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19914-c"
                           test="(@negationInd != 'false') or count(cda:participant) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the value of @negationInd is 'false', this observation SHALL contain one or more [[]1..[*][]] participant elements representing the access site which displayed this infection indicator (CONF:86-19914).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant/@typeCode='DEV'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19915-c"
                           test="not(cda:participant) or cda:participant/@typeCode='DEV'"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @typeCode="DEV" Device (CONF:86-19915).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant[count(cda:participantRole) = 1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19916-c"
                           test="not(cda:participant) or cda:participant[count(cda:participantRole) = 1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participantRole (CONF:86-19916).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant/cda:participantRole[count(cda:playingDevice) = 1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19917-c"
                           test="not(cda:participant) or cda:participant/cda:participantRole[count(cda:playingDevice) = 1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingDevice (CONF:86-19917).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant/cda:participantRole/cda:playingDevice[count(cda:code) = 1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19918-c"
                           test="not(cda:participant) or cda:participant/cda:participantRole/cda:playingDevice[count(cda:code) = 1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingDevice SHALL contain exactly one [1..1] code (CONF:86-19918).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant/cda:participantRole/cda:playingDevice/cda:code[@nullFlavor and not(@code)] or cda:participant/cda:participantRole/cda:playingDevice/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.6042']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19919-c"
                           test="not(cda:participant) or cda:participant/cda:participantRole/cda:playingDevice/cda:code[@nullFlavor and not(@code)] or cda:participant/cda:participantRole/cda:playingDevice/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.6042']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>To record a vascular access site as a code, the value of @code SHALL be selected from ValueSet 2.16.840.1.114222.4.11.6042 NHSNVascularAccessSiteCode STATIC 20120808 (CONF:86-19919).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant/cda:participantRole/cda:playingDevice/cda:code[@nullFlavor='OTH' or @code]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19920-c"
                           test="not(cda:participant) or cda:participant/cda:participantRole/cda:playingDevice/cda:code[@nullFlavor='OTH' or @code]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>To represent a site of vascular access that is not listed in the NHSNVascularAccessSiteCode value set, set the value of @nullFlavor to OTH (other) (CONF:86-19920).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant/cda:participantRole[@classCode='MANU']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19921-c"
                           test="not(cda:participant) or cda:participant/cda:participantRole[@classCode='MANU']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="MANU" (CONF:86-19921).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22788" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22788).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.157'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-19905"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.157'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-19905) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.157" (CONF:86-19906).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28396" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28396).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M36"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M36"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.157']]"
                 priority="3999"
                 mode="M37">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.157-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.157']]"
                  role=""/>
      <xsl:apply-templates mode="M37"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M37"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.145']]"
                 priority="3999"
                 mode="M38">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.145-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.145']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20909" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-20909).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20910" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-20910).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28261"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28261) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.2" (CONF:86-28262).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20915" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-20915).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20916" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-20916).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='41852-5' and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20917"
                           test="cda:code[@code='41852-5' and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="41852-5" Microorganism identified (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-20917).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20918" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-20918).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20919" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-20919).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20920" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHALL be selected from ValueSet NHSNPathogenCode urn:oid:2.16.840.1.113883.13.16 DYNAMIC (CONF:86-20920).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22716" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-22716).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22777" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22777).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22778" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22778).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.145'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20913"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.145'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-20913) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.145" (CONF:86-20914).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M38"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M38"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.145']]"
                 priority="3999"
                 mode="M39">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.145-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.145']]"
                  role=""/>
      <xsl:apply-templates mode="M39"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M39"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.170']]"
                 priority="3999"
                 mode="M40">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.170-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.170']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20922" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-20922).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20923" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-20923).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20924" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-20924).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4']) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28291"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4']) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] templateId (CONF:86-28291) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28292).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20929" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-20929).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20930" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-20930).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[count(self::node()[@code='ASSERTION'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20931" test="cda:code[count(self::node()[@code='ASSERTION'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-20931).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20932" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-20932).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20933" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-20933).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20934" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-20934).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='417746004']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20936" test="cda:value[@xsi:type='CD'][@code='417746004']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="417746004" Trauma (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-20936).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22735" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22735).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.170']) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20927"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.170']) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] templateId (CONF:86-20927) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.170" (CONF:86-20928).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28392" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28392).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M40"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M40"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.170']]"
                 priority="3999"
                 mode="M41">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.170-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.170']]"
                  role=""/>
      <xsl:apply-templates mode="M41"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M41"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.163']]"
                 priority="3999"
                 mode="M42">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.163-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.163']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20938" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-20938).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20939" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-20939).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20940" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-20940).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28277"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28277) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28278).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20945" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-20945).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20946" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-20946).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[count(self::node()[@code='ASSERTION'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20947" test="cda:code[count(self::node()[@code='ASSERTION'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-20947).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20948" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-20948).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20949" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-20949).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20950" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-20950).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='3114-6']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20952" test="cda:value[@xsi:type='CD'][@code='3114-6']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="3114-6" Solution(s) had dried (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277 STATIC) (CONF:86-20952).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22783" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22783).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.163'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-20943"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.163'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-20943) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.163" (CONF:86-20944).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28389" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28389).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M42"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M42"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.163']]"
                 priority="3999"
                 mode="M43">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.163-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.163']]"
                  role=""/>
      <xsl:apply-templates mode="M43"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M43"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.123']]"
                 priority="3999"
                 mode="M44">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.123-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.123']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21000" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21000).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21001" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21001).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21002" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-21002).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28229"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28229) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28230).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21007" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21007).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21008" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21008).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21009" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-21009).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21010" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21010).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21011" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21011).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21012" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-21012).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][count(self::node()[@code='73211009'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21013"
                           test="cda:value[@xsi:type='CD'][count(self::node()[@code='73211009'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="73211009" Diabetes mellitus (CONF:86-21013).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22745" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22745).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.123'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21005"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.123'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21005) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.123" (CONF:86-21006).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28354"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:86-28354).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28376" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28376).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M44"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M44"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.123']]"
                 priority="3999"
                 mode="M45">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.123-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.123']]"
                  role=""/>
      <xsl:apply-templates mode="M45"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M45"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.126']]"
                 priority="3999"
                 mode="M46">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.126-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.126']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21014" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21014).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21015" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21015).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28233"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28233) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.2" (CONF:86-28234).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21020" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21020).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21021" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNDrugSusceptibilityTestsCode urn:oid:2.16.840.1.113883.13.15 DYNAMIC (CONF:86-21021).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21023" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21023).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21024" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21024).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21025" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-21025).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:interpretationCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21026" test="count(cda:interpretationCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] interpretationCode (CONF:86-21026).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:interpretationCode[@nullFlavor='NASK' or @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.13']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21027-c"
                           test="cda:interpretationCode[@nullFlavor='NASK' or @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.13']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the interpretation result is known, the value of interpretationCode/@code SHALL be selected from Value Set 2.16.840.1.113883.13.13 NHSNDrugSusceptibilityFindingCode STATIC 20080130. If the drug was not tested, the value of @nullFlavor SHALL be NASK (CONF:86-21027).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22748" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22748).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22749" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22749).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.126'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21018"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.126'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21018) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.126" (CONF:86-21019).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28406" test="count(cda:value)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value (CONF:86-28406).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M46"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M46"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.126']]"
                 priority="3999"
                 mode="M47">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.126-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.126']]"
                  role=""/>
      <xsl:apply-templates mode="M47"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M47"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.117']]"
                 priority="3999"
                 mode="M48">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.117-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.117']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21028" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" (CONF:86-21028).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21029" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CONF:86-21029).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21032" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21032).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='112695004']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21033" test="cda:code[@code='112695004']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="112695004" Surgical Closure (CONF:86-21033).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21034" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21034).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21035" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CONF:86-21035).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:methodCode[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.6051']/voc:code/@value])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21036"
                           test="count(cda:methodCode[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.6051']/voc:code/@value])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] methodCode, which SHALL be selected from ValueSet NHSNClosureTechniqueCode urn:oid:2.16.840.1.114222.4.11.6051 STATIC (CONF:86-21036).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28219"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28219) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.14" (CONF:86-28220).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21040" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21040).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22734" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22734).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.117'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21038"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.117'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21038) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.117" (CONF:86-21039).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28352" test="cda:code[@codeSystem='2.16.840.1.113883.6.96']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:86-28352).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M48"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M48"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.117']]"
                 priority="3999"
                 mode="M49">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.117-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.117']]"
                  role=""/>
      <xsl:apply-templates mode="M49"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M49"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.122']]"
                 priority="3999"
                 mode="M50">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.122-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.122']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21041" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" (CONF:86-21041).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21042" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CONF:86-21042).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21044" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21044).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21046" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21046).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21047" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-21047).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21048" test="cda:effectiveTime[count(cda:low)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-21048).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant[@typeCode='LOC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21050" test="not(cda:participant) or cda:participant[@typeCode='LOC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The participant, if present, SHALL contain exactly one [1..1] @typeCode="LOC" (CONF:86-21050).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant[count(cda:participantRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21051"
                           test="not(cda:participant) or cda:participant[count(cda:participantRole)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The participant, if present, SHALL contain exactly one [1..1] participantRole (CONF:86-21051).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[@classCode='SDLOC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21052"
                           test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[@classCode='SDLOC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" (CONF:86-21052).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21053"
                           test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] id (CONF:86-21053).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole/cda:id) or cda:participant/cda:participantRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21054"
                           test="not(cda:participant/cda:participantRole/cda:id) or cda:participant/cda:participantRole/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:86-21054).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21055-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id/@root SHALL contain the facility identifier (CONF:86-21055).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole/cda:id) or cda:participant/cda:participantRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21056"
                           test="not(cda:participant/cda:participantRole/cda:id) or cda:participant/cda:participantRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @extension (CONF:86-21056).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[count(cda:playingEntity)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21057"
                           test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[count(cda:playingEntity)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingEntity (CONF:86-21057).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole/cda:playingEntity) or cda:participant/cda:participantRole/cda:playingEntity[@classCode='PLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21058"
                           test="not(cda:participant/cda:participantRole/cda:playingEntity) or cda:participant/cda:participantRole/cda:playingEntity[@classCode='PLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingEntity SHALL contain exactly one [1..1] @classCode="PLC" (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-21058).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole/cda:playingEntity) or cda:participant/cda:participantRole/cda:playingEntity[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21059"
                           test="not(cda:participant/cda:participantRole/cda:playingEntity) or cda:participant/cda:participantRole/cda:playingEntity[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingEntity SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNHealthcareServiceLocationCode urn:oid:2.16.840.1.113883.13.19 DYNAMIC (CONF:86-21059).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28227"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28227) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.14" (CONF:86-28228).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21065" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21065).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='71861002']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21066" test="cda:code[@code='71861002']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="71861002" Insertion procedure (CONF:86-21066).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22744" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008) (CONF:86-22744).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28103" test="cda:code[@codeSystem='2.16.840.1.113883.6.96']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:86-28103).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28106" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:86-28106).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.122'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21063"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.122'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21063) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.122" (CONF:86-21064).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M50"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M50"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.122']]"
                 priority="3999"
                 mode="M51">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.122-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.122']]"
                  role=""/>
      <xsl:apply-templates mode="M51"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M51"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.175']]"
                 priority="3999"
                 mode="M52">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.175-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.175']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21067" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:86-21067).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21068" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:86-21068).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21069" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21069).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21070" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-21070).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28203"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28203) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.2" (CONF:86-28204).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21075" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21075).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21076" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21076).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21077" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:86-21077).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21078" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-21078).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD' and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.13']/voc:code/@value or @nullFlavor])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21079"
                           test="count(cda:value[@xsi:type='CD' and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.13']/voc:code/@value or @nullFlavor])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHALL be selected from ValueSet NHSNDrugSusceptibilityFindingCode urn:oid:2.16.840.1.113883.13.13 (CONF:86-21079).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22630" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22630).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='365705006']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28099" test="cda:code[@code='365705006']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="365705006" Final Interpretation Result (CONF:86-28099).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28100" test="cda:code[@codeSystem='2.16.840.1.113883.6.96']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:86-28100).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.175'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21071"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.175'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21071) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.175" (CONF:86-21072).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M52"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M52"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.175']]"
                 priority="3999"
                 mode="M53">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.175-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.175']]"
                  role=""/>
      <xsl:apply-templates mode="M53"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M53"/>
   <xsl:template match="cda:participant[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.176']]"
                 priority="3999"
                 mode="M54">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.176-errors"
                  context="cda:participant[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.176']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.176'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21084"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.176'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21084) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.176" (CONF:86-21085).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@typeCode='SBJ'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27113" test="@typeCode='SBJ'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @typeCode="SBJ" (CONF:86-27113).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participantRole)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27114" test="count(cda:participantRole)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participantRole (CONF:86-27114).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participantRole[count(cda:playingEntity)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27116" test="cda:participantRole[count(cda:playingEntity)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingEntity (CONF:86-27116).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participantRole/cda:playingEntity[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27117" test="cda:participantRole/cda:playingEntity[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingEntity SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNAntimicrobialAgentAURPCode urn:oid:2.16.840.1.114222.4.11.3360 DYNAMIC (CONF:86-27117).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M54"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M54"/>
   <xsl:template match="cda:participant[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.176']]"
                 priority="3999"
                 mode="M55">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.176-errors-CL"
                  context="cda:participant[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.176']]"
                  role=""/>
      <xsl:apply-templates mode="M55"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M55"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.142']]"
                 priority="3999"
                 mode="M56">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.142-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.142']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21157" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21157).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21158" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21158).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21159" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-21159).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21160" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21160).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21161" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-21161).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21162" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21162).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21163" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21163).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21164" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-21164).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='2318-4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21165" test="cda:value[@xsi:type='CD'][@code='2318-4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="2318-4" MDRO Infection or C.difficile infection (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277 STATIC) (CONF:86-21165).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28257"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28257) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28258).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21236" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21236).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22769" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22769).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.142'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21234"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.142'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21234) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.142" (CONF:86-21235).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28382" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28382).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M56"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M56"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.142']]"
                 priority="3999"
                 mode="M57">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.142-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.142']]"
                  role=""/>
      <xsl:apply-templates mode="M57"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M57"/>
   <xsl:template match="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.141']]"
                 priority="3999"
                 mode="M58">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.141-errors"
                  context="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.141']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='SBADM'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21166" test="@classCode='SBADM'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="SBADM" Substance Administration (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21166).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21167" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21167).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21168" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-21168).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21169" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21169).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='2306-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21170" test="cda:code[@code='2306-9']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="2306-9" Intravenous injection of antifungal substance (CONF:86-21170).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.16'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28255"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.16'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28255) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.16" (CONF:86-28256).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21503" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21503).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21504" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21504).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime[@xsi:type='IVL_TS'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21505" test="count(cda:effectiveTime[@xsi:type='IVL_TS'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-21505).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21506" test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-21506).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21507" test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:86-21507).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22763" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22763).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28110" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:86-28110).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.141'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21501"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.141'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21501) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.141" (CONF:86-21502).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:consumable)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28340" test="count(cda:consumable)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] consumable (CONF:86-28340).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable[count(cda:manufacturedProduct)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28341" test="cda:consumable[count(cda:manufacturedProduct)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This consumable SHALL contain exactly one [1..1] manufacturedProduct (CONF:86-28341).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct[count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.23'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28342"
                           test="cda:consumable/cda:manufacturedProduct[count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.23'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedProduct SHALL contain exactly one [1..1] templateId (CONF:86-28342) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.23" (CONF:86-28345).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct[count(cda:manufacturedMaterial)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28343"
                           test="cda:consumable/cda:manufacturedProduct[count(cda:manufacturedMaterial)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedProduct SHALL contain exactly one [1..1] manufacturedMaterial (CONF:86-28343).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28344"
                           test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedMaterial SHALL contain exactly one [1..1] code (CONF:86-28344).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial/cda:code[@nullFlavor='NI']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28346"
                           test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial/cda:code[@nullFlavor='NI']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @nullFlavor="NI" (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008) (CONF:86-28346).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct[@classCode='MANU']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28347"
                           test="cda:consumable/cda:manufacturedProduct[@classCode='MANU']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedProduct SHALL contain exactly one [1..1] @classCode="MANU" (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110) (CONF:86-28347).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M58"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M58"/>
   <xsl:template match="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.141']]"
                 priority="3999"
                 mode="M59">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.141-errors-CL"
                  context="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.141']]"
                  role=""/>
      <xsl:apply-templates mode="M59"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M59"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']]"
                 priority="3999"
                 mode="M60">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.139-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21181" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21181).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21182" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21182).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21183" test="@negationInd='false'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:86-21183).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21184" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21184).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21185" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21185).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21186" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-21186).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21187" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21187).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21188" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21188).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21189" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-21189).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21190" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHALL be selected from ValueSet NHSNInfectionTypeCode urn:oid:2.16.840.1.113883.13.20 DYNAMIC (CONF:86-21190).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='SPRT'][count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.180']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21192"
                           test="count(cda:entryRelationship[@typeCode='SPRT'][count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.180']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:86-21192) such that it SHALL contain exactly one [1..1] @typeCode="SPRT" Supports (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-21193). SHALL contain exactly one [1..1] Criteria of Diagnosis Organizer (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.180) (CONF:86-21194).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28251"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28251) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28252).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="//cda:templateId[@root='2.16.840.1.113883.10.20.5.32'] or (cda:entryRelationship[@typeCode='REFR']/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.135'])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23220-c"
                           test="//cda:templateId[@root='2.16.840.1.113883.10.20.5.32'] or (cda:entryRelationship[@typeCode='REFR']/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.135'])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the report is a Ventilator Associated Event (VAE) Report, an HAI Surgical Site Infection Report (SSI), an HAI Urinary Tract Infection Numerator Report (UTI) or a Late Onset Sepsis/Meningitis Event (LOS) Report then an entryRelationship element SHALL be present containing an Infection Condition Observation (CONF:86-23220).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(//cda:templateId[@root='2.16.840.1.113883.10.20.5.32'] or //cda:templateId[@root='2.16.840.1.113883.10.20.5.53']) or cda:entryRelationship[@typeCode='REFR']/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.160']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23224-c"
                           test="(//cda:templateId[@root='2.16.840.1.113883.10.20.5.32'] or //cda:templateId[@root='2.16.840.1.113883.10.20.5.53']) or cda:entryRelationship[@typeCode='REFR']/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.160']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the report is a Ventilator Associated Event (VAE) Report, an HAI Surgical Site Infection Report (SSI) or an HAI Urinary Tract Infection Numerator Report (UTI) then, an entryRelationship element SHALL be present containing a Secondary Bloodstream Infection Observation (CONF:86-23224).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(/*/cda:templateId[@root='2.16.840.1.113883.10.20.5.32']) or (cda:entryRelationship[@typeCode='COMP']/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.114'] )"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23228-c"
                           test="not(/*/cda:templateId[@root='2.16.840.1.113883.10.20.5.32']) or (cda:entryRelationship[@typeCode='COMP']/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.114'] )"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the report is a BSI Report, an entryRelationship element SHALL be present containing a Bloodstream Infection Evidence Type Observation (CONF:86-23228).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(/*/cda:templateId[@root='2.16.840.1.113883.10.20.5.33']) or (cda:entryRelationship[@typeCode='COMP']/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.144'])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23232-c"
                           test="not(/*/cda:templateId[@root='2.16.840.1.113883.10.20.5.33']) or (cda:entryRelationship[@typeCode='COMP']/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.144'])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the report is an SSI Report, an entryRelationship element SHALL be present containing an Occasion of HAI Detection Observation (CONF:86-23232).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28186" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28186).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28190" test="cda:effectiveTime[count(cda:low)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-28190).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21239"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21239) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.139" (CONF:86-21240).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M60"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M60"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']]"
                 priority="3999"
                 mode="M61">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.139-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']]"
                  role=""/>
      <xsl:apply-templates mode="M61"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M61"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.148']]"
                 priority="3999"
                 mode="M62">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.148-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.148']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21214" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21214).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21215" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21215).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21216" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-21216).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21217" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21217).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21218" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-21218).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21219" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21219).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21220" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" COMPLETED (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4 STATIC) (CONF:86-21220).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21221" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-21221).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='2213-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21222" test="cda:value[@xsi:type='CD'][@code='2213-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="2213-7" Performer was a member of PICC/IV Team (CONF:86-21222).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.148'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22002"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.148'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22002) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.148" (CONF:86-22003).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22004" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22004).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22779" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22779).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28385" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28385).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28404"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:86-28404).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M62"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M62"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.148']]"
                 priority="3999"
                 mode="M63">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.148-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.148']]"
                  role=""/>
      <xsl:apply-templates mode="M63"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M63"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.156']]"
                 priority="3999"
                 mode="M64">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.156-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.156']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21319" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" Procedure (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21319).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21320" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21320).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21321" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21321).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21322-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of the id element SHALL be the same as the value of the corresponding procedure/id element in the Details Section of the report (CONF:86-21322).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.174']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21323"
                           test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.174']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:86-21323) such that it SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-21324). SHALL contain exactly one [1..1] Wound Class Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.174) (CONF:86-21325).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.128']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21327"
                           test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.128']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:86-21327) such that it SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-21328). SHALL contain exactly one [1..1] Endoscope Used Clinical Statement (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.128) (CONF:86-21329).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21331-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the procedure was an emergency, the procedure element SHALL contain a methodCode element where the value of @code is 373110003 Emergency procedure 2.16.840.1.113883.6.96 SNOMED CT STATIC (CONF:86-21331).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.156'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21990"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.156'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21990) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.156" (CONF:86-21991).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M64"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M64"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.156']]"
                 priority="3999"
                 mode="M65">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.156-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.156']]"
                  role=""/>
      <xsl:apply-templates mode="M65"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M65"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.159']]"
                 priority="3999"
                 mode="M66">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.159-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.159']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21342" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21342).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21343" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21343).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21344" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-21344).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21345" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21345).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21346" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-21346).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21347" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21347).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21348" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21348).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21349" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-21349).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='3104-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21350" test="cda:value[@xsi:type='CD'][@code='3104-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="3104-7" Recorder was performer (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277 STATIC) (CONF:86-21350).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.159'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21987"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.159'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21987) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.159" (CONF:86-21988).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21989" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21989).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22790" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22790).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28387" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28387).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M66"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M66"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.159']]"
                 priority="3999"
                 mode="M67">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.159-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.159']]"
                  role=""/>
      <xsl:apply-templates mode="M67"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M67"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.165']]"
                 priority="3999"
                 mode="M68">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.165-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.165']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21389" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" Procedure (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21389).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21390" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21390).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21391" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-21391).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21392" test="cda:effectiveTime[@value]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @value (CONF:86-21392).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21393" test="count(cda:participant)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-21393).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[@typeCode='PRD']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21394" test="cda:participant[@typeCode='PRD']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] @typeCode="PRD" Product (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-21394).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[count(cda:participantRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21395" test="cda:participant[count(cda:participantRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] participantRole (CONF:86-21395).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[@classCode='SPEC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21396" test="cda:participant/cda:participantRole[@classCode='SPEC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="SPEC" Specimen (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-21396).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[count(cda:playingEntity)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21397"
                           test="cda:participant/cda:participantRole[count(cda:playingEntity)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingEntity (CONF:86-21397).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingEntity[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21398"
                           test="cda:participant/cda:participantRole/cda:playingEntity[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingEntity SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNSpecimenTypeCode urn:oid:2.16.840.1.114222.4.11.3249 DYNAMIC (CONF:86-21398).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21400" test="count(cda:entryRelationship)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:86-21400).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[@typeCode='COMP']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21401" test="cda:entryRelationship[@typeCode='COMP']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This entryRelationship SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-21401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[@inversionInd='true']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21402" test="cda:entryRelationship[@inversionInd='true']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This entryRelationship SHALL contain exactly one [1..1] @inversionInd="true" (CONF:86-21402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.164']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21403"
                           test="cda:entryRelationship[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.164']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This entryRelationship SHALL contain exactly one [1..1] Specimen Collection Encounter (LIO) (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.164) (CONF:86-21403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.165'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21982"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.165'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21982) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.165" (CONF:86-21983).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M68"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M68"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.165']]"
                 priority="3999"
                 mode="M69">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.165-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.165']]"
                  role=""/>
      <xsl:apply-templates mode="M69"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M69"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.169']]"
                 priority="3999"
                 mode="M70">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.169-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.169']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21451" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21452" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21453" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-21453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21454" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21455" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-21455).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21456" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21456).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21457" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21457).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21458" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-21458).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='2304-4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21459" test="cda:value[@xsi:type='CD'][@code='2304-4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="2304-4" Transient Patient (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277 STATIC) (CONF:86-21459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28289"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28289) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28290).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22737" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22737).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22738" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22738).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.169'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22035"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.169'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22035) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.169" (CONF:86-22036).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28391" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28391).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M70"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M70"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.169']]"
                 priority="3999"
                 mode="M71">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.169-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.169']]"
                  role=""/>
      <xsl:apply-templates mode="M71"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M71"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.171']]"
                 priority="3999"
                 mode="M72">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.171-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.171']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21460" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21460).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21461" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21462" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-21462).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21463" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21465" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21466" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21467" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-21467).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='3191-4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21468" test="cda:value[@xsi:type='CD'][@code='3191-4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="3191-4" Urinary catheter present (CONF:86-21468).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28293"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28293) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28294).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22115" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22115).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[count(self::node()[@code='ASSERTION'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22116" test="cda:code[count(self::node()[@code='ASSERTION'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-22116).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22727" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22727).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd != 'true' or (cda:entryRelationship[@typeCode='COMP']/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.132'])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22731-c"
                           test="@negationInd != 'true' or (cda:entryRelationship[@typeCode='COMP']/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.132'])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If a urinary catheter is not present (@negationInd="true"), this entryRelationship SHALL be present (CONF:86-22731).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.171'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22114"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.171'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22114) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.171" (CONF:86-22117).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28393" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28393).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28394"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:86-28394).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M72"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M72"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.171']]"
                 priority="3999"
                 mode="M73">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.171-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.171']]"
                  role=""/>
      <xsl:apply-templates mode="M73"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M73"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.172']]"
                 priority="3999"
                 mode="M74">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.172-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.172']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21474" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21474).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21475" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21476" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-21476).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21477" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21477).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21478" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-21478).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21480-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The text element is to be used for additional information commenting on the vascular access type (CONF:86-21480).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21481" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21481).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21482" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21482).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21483" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-21483).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21484" test="cda:effectiveTime[count(cda:low)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-21484).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime/cda:low[@value or @nullFlavor='NI']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21485-c" test="cda:effectiveTime/cda:low[@value or @nullFlavor='NI']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>When the access placement date is not known, the value of @nullFlavor SHALL be NI (no information) (CONF:86-21485).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime/cda:low[@nullFlavor or string-length(@value) = 6]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21486-c"
                           test="cda:effectiveTime/cda:low[@nullFlavor or string-length(@value) = 6]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>When the access placement date is known, it SHALL be recorded as year and month (yyyymm) (CONF:86-21486).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21487" test="count(cda:value)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value (CONF:86-21487).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.6007']/voc:code/@value] or cda:value[@nullFlavor='OTH']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21488-c"
                           test="cda:value[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.6007']/voc:code/@value] or cda:value[@nullFlavor='OTH']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>To record the presence or absence of a vascular access type that is listed in the NHSN Vascular Access Type value set, the value of @code SHALL be selected from ValueSet 2.16.840.1.114222.4.11.6007 NHSNVascularAccessTypeCode STATIC 20120808 (CONF:86-21488).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21489-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>To record that another type of vascular access is present, set the value of @nullFlavor to OTH (other) (CONF:86-21489).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28295"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28295) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28296).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22721" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22721).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22722" test="cda:id[@nullFlavor]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor (CONF:86-22722).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.172'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22037"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.172'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22037) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.172" (CONF:86-22038).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28395" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28395).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M74"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M74"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.172']]"
                 priority="3999"
                 mode="M75">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.172-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.172']]"
                  role=""/>
      <xsl:apply-templates mode="M75"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M75"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.168']]"
                 priority="3999"
                 mode="M76">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.168-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.168']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21508" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21508).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21509" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21509).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21510" test="@negationInd='false'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:86-21510).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21511" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21511).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21512" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-21512).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21513" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21513).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21514" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21514).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21515" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-21515).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37']) or (cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37'] and cda:value[@code = document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.6008']/voc:code/@value  or (@nullFlavor='NI')])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21516-c"
                           test="not(cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37']) or (cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37'] and cda:value[@code = document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.6008']/voc:code/@value or (@nullFlavor='NI')])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>In an Evidence of Infection (Dialysis) report, to represent the suspected source as a code, the value of @code SHALL be selected from ValueSet NHSNSuspectedSourceTypeCode 2.16.840.1.114222.4.11.6008 STATIC 20111215 (CONF:86-21516).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21517-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the suspected source is not listed in Value Set 2.16.840.1.114222.4.11.6008 NHSNSuspectedSourceTypeCode STATIC 20111215, set the value of @nullFlavor to ‘OTH’ (CONF:86-21517).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21518-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the suspected source is uncertain, set the value of @nullFlavor to “NI” (CONF:86-21518).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.134']][count(cda:code[@code='2307-7'])=1][count(cda:value[@code='60022001'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21519"
                           test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.134']][count(cda:code[@code='2307-7'])=1][count(cda:value[@code='60022001'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:86-21519) such that it SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-21520). SHALL contain exactly one [1..1] Imputability Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.134) (CONF:86-21521). This observation SHALL contain exactly one [1..1] code (CONF:86-21522). This code SHALL contain exactly one [1..1] @code="2307-7" Imputability of positive blood culture to the suspected source (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277 STATIC) (CONF:86-21523). This observation SHALL contain exactly one [1..1] value (CONF:86-21524). This value SHALL contain exactly one [1..1] @code="60022001" Possible (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-21525).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28287"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28287) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28288).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21530" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21530).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22741" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22741).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.168'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21528"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.168'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21528) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.168" (CONF:86-21529).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28356" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28356).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M76"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M76"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.168']]"
                 priority="3999"
                 mode="M77">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.168-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.168']]"
                  role=""/>
      <xsl:apply-templates mode="M77"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M77"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.167']]"
                 priority="3999"
                 mode="M78">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.167-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.167']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21531" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" Procedure (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21531).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21532" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21532).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21533" test="@negationInd='false'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:86-21533).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21534" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21534).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[count(self::node()[@code='370822003' and @codeSystem='2.16.840.1.113883.6.96'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21535"
                           test="cda:code[count(self::node()[@code='370822003' and @codeSystem='2.16.840.1.113883.6.96'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="370822003" Use of sterile technique (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-21535).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant[@typeCode='DEV']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21537" test="not(cda:participant) or cda:participant[@typeCode='DEV']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The participant, if present, SHALL contain exactly one [1..1] @typeCode="DEV" Device (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-21537).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant[count(cda:participantRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21538"
                           test="not(cda:participant) or cda:participant[count(cda:participantRole)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The participant, if present, SHALL contain exactly one [1..1] participantRole (CONF:86-21538).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[@classCode='MANU']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21539"
                           test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[@classCode='MANU']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="MANU" (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-21539).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[count(cda:playingDevice)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21540"
                           test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[count(cda:playingDevice)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingDevice (CONF:86-21540).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole/cda:playingDevice) or cda:participant/cda:participantRole/cda:playingDevice[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21541"
                           test="not(cda:participant/cda:participantRole/cda:playingDevice) or cda:participant/cda:participantRole/cda:playingDevice[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingDevice SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNSterileBarrierCode urn:oid:2.16.840.1.114222.4.11.3184 DYNAMIC (CONF:86-21541).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28285"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28285) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.14" (CONF:86-28286).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21560" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21560).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21561" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21561).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21562" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:86-21562).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22772" test="cda:id[@nullFlavor]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor (CONF:86-22772).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.167'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21558"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.167'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21558) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.167" (CONF:86-21559).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M78"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M78"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.167']]"
                 priority="3999"
                 mode="M79">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.167-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.167']]"
                  role=""/>
      <xsl:apply-templates mode="M79"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M79"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.166']]"
                 priority="3999"
                 mode="M80">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.166-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.166']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21543" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21543).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21544" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21544).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21545" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21545).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21546" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-21546).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21547" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21547).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21548" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21548).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD' and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.11']/voc:code/@value or @nullFlavor])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21549"
                           test="count(cda:value[@xsi:type='CD' and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.11']/voc:code/@value or @nullFlavor])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHALL be selected from ValueSet NHSNSpinalFusionLevelCode urn:oid:2.16.840.1.113883.13.11 STATIC 2009-06-25 (CONF:86-21549).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28283"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28283) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28284).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21555" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21555).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22775" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22775).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.166'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21553"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.166'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21553) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.166" (CONF:86-21554).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28390" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28390).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M80"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M80"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.166']]"
                 priority="3999"
                 mode="M81">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.166-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.166']]"
                  role=""/>
      <xsl:apply-templates mode="M81"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M81"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.164']]"
                 priority="3999"
                 mode="M82">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.164-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.164']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21563" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21563).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21564" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21564).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.49'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28281"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.49'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28281) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.49" (CONF:86-28282).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21569" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21569).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21571" test="count(cda:participant)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-21571).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[@typeCode='LOC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21572" test="cda:participant[@typeCode='LOC']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-21572).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[count(cda:participantRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21573" test="cda:participant[count(cda:participantRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] participantRole (CONF:86-21573).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[@classCode='SDLOC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21574" test="cda:participant/cda:participantRole[@classCode='SDLOC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-21574).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21575" test="cda:participant/cda:participantRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] id (CONF:86-21575).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21576" test="cda:participant/cda:participantRole/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:86-21576).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21577" test="cda:participant/cda:participantRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @extension (CONF:86-21577).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[count(cda:playingEntity)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21578"
                           test="cda:participant/cda:participantRole[count(cda:playingEntity)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingEntity (CONF:86-21578).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingEntity[@classCode='PLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21579"
                           test="cda:participant/cda:participantRole/cda:playingEntity[@classCode='PLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingEntity SHALL contain exactly one [1..1] @classCode="PLC" Place (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-21579).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingEntity[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21580"
                           test="cda:participant/cda:participantRole/cda:playingEntity[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingEntity SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNHealthcareServiceLocationCode urn:oid:2.16.840.1.113883.13.19 DYNAMIC (CONF:86-21580).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21583" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-21583).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21584" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-21584).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21585-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the patient was an inpatient, an effectiveTime/low element SHALL be present representing the date the patient was admitted or transferred to that location (CONF:86-21585).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.164'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21567"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.164'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21567) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.164" (CONF:86-21568).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M82"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M82"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.164']]"
                 priority="3999"
                 mode="M83">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.164-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.164']]"
                  role=""/>
      <xsl:apply-templates mode="M83"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M83"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.158']]"
                 priority="3999"
                 mode="M84">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.158-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.158']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21589" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21589).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21590" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21590).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21591" test="@negationInd='false'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:86-21591).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.19'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28273"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.19'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28273) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.19" (CONF:86-28274).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21594" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21594).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21595" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21595).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21596" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-21596).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21597" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21597).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21598" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21598).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21599" test="count(cda:value)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value (CONF:86-21599).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21600-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>In a CLIP Report, to record the reason as a code, the value of @xsi:type SHALL be CD and the value of @code SHALL be selected from ValueSet 2.16.840.1.114222.4.11.3182 ReasonForInsertionCode STATIC 20090625. Or, to record the reason as text, the value of @xsi:type SHALL be ST and a text value SHALL be present (CONF:86-21600).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22789" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22789).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='RSON']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23287"
                           test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='RSON']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] @typeCode="RSON" (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002) (CONF:86-23287).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[@inversionInd='true']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23288"
                           test="not(cda:entryRelationship) or cda:entryRelationship[@inversionInd='true']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] @inversionInd="true" (CONF:86-23288).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.129']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23289"
                           test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.129']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] Guidewire Used Clinical Statement (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.129) (CONF:86-23289).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:value[@code = '5107-8']) or (cda:entryRelationship[@typeCode='RSON' and @inversionInd='true']/cda:procedure/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.129'])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23290-c"
                           test="not(cda:value[@code = '5107-8']) or (cda:entryRelationship[@typeCode='RSON' and @inversionInd='true']/cda:procedure/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.129'])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>In a CLIP Report, if the coded reason is [[]To replace] An existing central line where infection was suspected (5107-8), an entryRelationship element *SHALL* be present containing Guidewire Used Clinical Statement (CONF:86-23290).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.158'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21593"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.158'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21593) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.158" (CONF:86-21603).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28386" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28386).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M84"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M84"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.158']]"
                 priority="3999"
                 mode="M85">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.158-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.158']]"
                  role=""/>
      <xsl:apply-templates mode="M85"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M85"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.155']]"
                 priority="3999"
                 mode="M86">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.155-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.155']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21605" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" Procedure (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21605).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21606" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21606).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21607" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21607).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='233527006' and @codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21608"
                           test="cda:code[@code='233527006' and @codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="233527006" Central-line insertion (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-21608).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21609" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode, which SHALL be selected from ValueSet ProcedureAct statusCode urn:oid:2.16.840.1.113883.11.20.9.22 DYNAMIC (CONF:86-21609).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21610" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-21610).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:targetSiteCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21611" test="count(cda:targetSiteCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] targetSiteCode, which SHALL be selected from ValueSet NHSNInsertionSiteCode urn:oid:2.16.840.1.114222.4.11.3180 DYNAMIC (CONF:86-21611).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:performer)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21613" test="count(cda:performer)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] performer (CONF:86-21613).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:performer[count(cda:assignedEntity)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21614" test="cda:performer[count(cda:assignedEntity)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This performer SHALL contain exactly one [1..1] assignedEntity (CONF:86-21614).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:performer/cda:assignedEntity[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21615" test="cda:performer/cda:assignedEntity[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedEntity SHALL contain exactly one [1..1] id (CONF:86-21615).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:performer/cda:assignedEntity/cda:id[@root or @nullFlavor='UNK']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21616-c"
                           test="cda:performer/cda:assignedEntity/cda:id[@root or @nullFlavor='UNK']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the performer ID is not known, the value of performer/assignedEntity/id/@nullFlavor SHALL be UNK (CONF:86-21616).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:performer/cda:assignedEntity[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21617" test="cda:performer/cda:assignedEntity[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedEntity SHALL contain exactly one [1..1] code (CONF:86-21617).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:performer/cda:assignedEntity/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3181']/voc:code/@value or (@nullFlavor='OTH' and cda:originalText)]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21618-c"
                           test="cda:performer/cda:assignedEntity/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3181']/voc:code/@value or (@nullFlavor='OTH' and cda:originalText)]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the occupation is recorded as a code, the value of @xsi:type SHALL be CD and the value of @code SHALL be selected from ValueSet 2.16.840.1.114222.4.11.3181 NHSNRoleOfPerformerCode DYNAMIC. If the occupation is recorded as text, the value of @nullFlavor SHALL be OTH and the code element SHALL contain an originalText element recording the occupation of the performer (CONF:86-21618).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21619" test="count(cda:participant)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-21619).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[@typeCode='DEV']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21620" test="cda:participant[@typeCode='DEV']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] @typeCode="DEV" Device (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-21620).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[count(cda:participantRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21621" test="cda:participant[count(cda:participantRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] participantRole (CONF:86-21621).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[@classCode='MANU']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21622" test="cda:participant/cda:participantRole[@classCode='MANU']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="MANU" Manufactured product (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-21622).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[count(cda:playingDevice)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21623"
                           test="cda:participant/cda:participantRole[count(cda:playingDevice)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingDevice (CONF:86-21623).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingDevice[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21624"
                           test="cda:participant/cda:participantRole/cda:playingDevice[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingDevice SHALL contain exactly one [1..1] code (CONF:86-21624).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingDevice/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3185']/voc:code/@value or (@nullFlavor='OTH' and cda:originalText)]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21625-c"
                           test="cda:participant/cda:participantRole/cda:playingDevice/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3185']/voc:code/@value or (@nullFlavor='OTH' and cda:originalText)]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>To record the catheter type as a code, the value of @code SHALL be selected from ValueSet 2.16.840.1.114222.4.11.3185 NHSNCatheterTypeCode STATIC 20090625. Or, to record the catheter type as text, the value of @nullFlavor SHALL be OTH and an originalText element SHALL be present (CONF:86-21625).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.159']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21626"
                           test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.159']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:86-21626) such that it SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-21627). SHALL contain exactly one [1..1] Recorder Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.159) (CONF:86-21628).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='RSON'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.158']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21629"
                           test="count(cda:entryRelationship[@typeCode='RSON'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.158']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:86-21629) such that it SHALL contain exactly one [1..1] @typeCode="RSON" Has reason (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-21630). SHALL contain exactly one [1..1] Reason for Procedure Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.158) (CONF:86-21631).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.148']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21632"
                           test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.148']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:86-21632) such that it SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-21633). SHALL contain exactly one [1..1] PICC/IV Team (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.148) (CONF:86-21634).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28267"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28267) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.14" (CONF:86-28268).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21639" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21639).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22784" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22784).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.155'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21637"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.155'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21637) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.155" (CONF:86-21638).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M86"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M86"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.155']]"
                 priority="3999"
                 mode="M87">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.155-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.155']]"
                  role=""/>
      <xsl:apply-templates mode="M87"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M87"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.154']]"
                 priority="3999"
                 mode="M88">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.154-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.154']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21640" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" Procedure (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21640).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21641" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21641).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21642" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21642).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21643" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (ValueSet: NHSNProcedureCategoryCode urn:oid:2.16.840.1.113883.13.17 DYNAMIC) (CONF:86-21643).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21647" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-21647).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21648" test="cda:effectiveTime[count(cda:low)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-21648).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28269"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28269) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.14" (CONF:86-28270).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21653" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (ValueSet: ProcedureAct statusCode urn:oid:2.16.840.1.113883.11.20.9.22 DYNAMIC) (CONF:86-21653).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.154'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21651"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.154'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21651) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.154" (CONF:86-21652).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M88"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M88"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.154']]"
                 priority="3999"
                 mode="M89">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.154-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.154']]"
                  role=""/>
      <xsl:apply-templates mode="M89"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M89"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.144']]"
                 priority="3999"
                 mode="M90">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.144-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.144']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21716" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21716).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21717" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21717).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21718" test="@negationInd='false'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:86-21718).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28259"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28259) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28260).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21723" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21723).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21724" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21724).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21725" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-21725).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21726" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21726).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21727" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21727).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21728" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHALL be selected from ValueSet NHSNOccasionOfDetectionCode urn:oid:2.16.840.1.113883.13.12 DYNAMIC (CONF:86-21728).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22773" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22773).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.144'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21721"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.144'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21721) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.144" (CONF:86-21722).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28383" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28383).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M90"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M90"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.144']]"
                 priority="3999"
                 mode="M91">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.144-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.144']]"
                  role=""/>
      <xsl:apply-templates mode="M91"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M91"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.125']]"
                 priority="3999"
                 mode="M92">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.125-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.125']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21747" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21747).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21748" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21748).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21749" test="@negationInd='false'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:86-21749).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28231"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28231) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28232).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21754" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21754).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21755" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21755).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21756" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-21756).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21757" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21757).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21758" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21758).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21759" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-21759).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='236435004']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21760" test="cda:value[@xsi:type='CD'][@code='236435004']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="236435004" End-stage renal failure, on dialysis (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-21760).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.169']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21761"
                           test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.169']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:86-21761) such that it SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-21762). SHALL contain exactly one [1..1] Transient Patient Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.169) (CONF:86-21763).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22747" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22747).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.125'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21752"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.125'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21752) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.125" (CONF:86-21753).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28377" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28377).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M92"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M92"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.125']]"
                 priority="3999"
                 mode="M93">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.125-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.125']]"
                  role=""/>
      <xsl:apply-templates mode="M93"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M93"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.115']]"
                 priority="3999"
                 mode="M94">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.115-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.115']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21764" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21764).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21765" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21765).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21766" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-21766).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21767" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21767).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21768" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-21768).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21769" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21769).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21770" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21770).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21771" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-21771).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='2308-5']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21772" test="cda:value[@xsi:type='CD'][@code='2308-5']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="2308-5" Buttonhole cannulation (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277 STATIC) (CONF:86-21772).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.13'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28217"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.13'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28217) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.13" (CONF:86-28218).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21777" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21777).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22726" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22726).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.115'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21775"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.115'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21775) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.115" (CONF:86-21776).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28372" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28372).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M94"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M94"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.115']]"
                 priority="3999"
                 mode="M95">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.115-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.115']]"
                  role=""/>
      <xsl:apply-templates mode="M95"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M95"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.134']]"
                 priority="3999"
                 mode="M96">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.134-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.134']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21796" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21796).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21797" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21797).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21798" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-21798).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28243"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28243) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:86-28244).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21803" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-21803).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21804" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21804).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='2307-7'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21805-c"
                           test="cda:code[@code='2307-7'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>To record imputability of a positive blood culture to the suspected source of contamination, the value of @code SHALL be 2307-7 Imputability of positive blood culture to the suspected source 2.16.840.1.113883.6.277 cdcNHSN (CONF:86-21805).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21806" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-21806).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21807" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-21807).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21808" test="count(cda:value)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value (CONF:86-21808).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21809-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>In an Evidence of Infection (Dialysis) Report, (CONF:86-21809).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37']) or (/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37'] and @negationInd='false')"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21810-c"
                           test="not(/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37']) or (/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37'] and @negationInd='false')"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of the observation's @negationInd SHALL be 'false' (CONF:86-21810).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37']) or (/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37'] and cda:value[@code='60022001'] [@codeSystem='2.16.840.1.113883.6.96'])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21811-c"
                           test="not(/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37']) or (/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37'] and cda:value[@code='60022001'] [@codeSystem='2.16.840.1.113883.6.96'])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of @code SHALL be 60022001 Possible 2.16.840.1.113883.6.96 SNOMED CT (CONF:86-21811).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22757" test="cda:id[@nullFlavor]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor (CONF:86-22757).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.134'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21801"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.134'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21801) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.134" (CONF:86-21802).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M96"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M96"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.134']]"
                 priority="3999"
                 mode="M97">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.134-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.134']]"
                  role=""/>
      <xsl:apply-templates mode="M97"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M97"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26']]"
                 priority="3999"
                 mode="M98">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.4.26-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M98"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M98"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26']]"
                 priority="3999"
                 mode="M99">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.4.26-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26']]"
                  role=""/>
      <xsl:apply-templates mode="M99"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M99"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.128']]"
                 priority="3999"
                 mode="M100">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.128-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.128']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28235"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28235) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.14" (CONF:86-28236).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22162" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22162).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22163" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22163).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28107" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:86-28107).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28184" test="cda:code[@codeSystem='2.16.840.1.113883.6.96']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:86-28184).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.128'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22160"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.128'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22160) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.128" (CONF:86-22161).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21992" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" Procedure (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-21992).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21993" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-21993).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21994" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-21994).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21995" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21995).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='423827005']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21996" test="cda:code[@code='423827005']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="423827005" Endoscopy (CONF:86-21996).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M100"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M100"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.128']]"
                 priority="3999"
                 mode="M101">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.128-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.128']]"
                  role=""/>
      <xsl:apply-templates mode="M101"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M101"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.180']]"
                 priority="3999"
                 mode="M102">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.180-errors"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.180']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='CLUSTER'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22101" test="@classCode='CLUSTER'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="CLUSTER" Cluster (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22101).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22102" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22102).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.180'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22103"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.180'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22103) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.180" (CONF:86-22104).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22106" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22106).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22107" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] component (CONF:86-22107).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23061" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:86-23061).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.119']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23062"
                           test="cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.119']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such components SHALL contain exactly one [1..1] Criterion of Diagnosis Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.119) (CONF:86-23062).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M102"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M102"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.180']]"
                 priority="3999"
                 mode="M103">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.180-errors-CL"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.180']]"
                  role=""/>
      <xsl:apply-templates mode="M103"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M103"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.119']]"
                 priority="3999"
                 mode="M104">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.119-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.119']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22126" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22126).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22127" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22127).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22128" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-22128).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.19'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28221"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.19'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28221) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.19" (CONF:86-28222).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22130" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22130).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22131" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22131).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22132" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-22132).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22133" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22133).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22134" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-22134).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22135" test="count(cda:value)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value (CONF:86-22135).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.32' or                                                  @root='2.16.840.1.113883.10.20.5.33' or                                                  @root='2.16.840.1.113883.10.20.5.34'] ) or (/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.32' or                                                  @root='2.16.840.1.113883.10.20.5.33' or                                                  @root='2.16.840.1.113883.10.20.5.34'] and             cda:value[@xsi:type='CD' and  @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3195']/voc:code/@value           ] )"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22136-c"
                           test="not(/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.32' or @root='2.16.840.1.113883.10.20.5.33' or @root='2.16.840.1.113883.10.20.5.34'] ) or (/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.32' or @root='2.16.840.1.113883.10.20.5.33' or @root='2.16.840.1.113883.10.20.5.34'] and cda:value[@xsi:type='CD' and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3195']/voc:code/@value ] )"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>In an infection-type report, a criterion is reported as a code. The value of @xsi:type SHALL be CD and the value of @code SHALL be selected from Value Set 2.16.840.1.114222.4.11.3195 NHSNCriterionOfDiagnosisCode DYNAMIC (CONF:86-22136).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22137-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>In an Evidence of Infection (Dialysis) Report, (CONF:86-22137).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37']) or      (/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37'] and              (cda:value[@xsi:type='CD'] and      cda:value[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3195']/voc:code/@value])  or (cda:value[@xsi:type='ST'] and cda:value   )) "/>
         <xsl:otherwise>
            <failed-assert id="a-86-22138-c"
                           test="not(/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37']) or (/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37'] and (cda:value[@xsi:type='CD'] and cda:value[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3195']/voc:code/@value]) or (cda:value[@xsi:type='ST'] and cda:value ))"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>To record a criterion of diagnosis as a code, the value of @xsi:type SHALL be CD and the value of @code SHALL be selected from Value Set 2.16.840.1.114222.4.11.3195 NHSNCriterionOfDiagnosisCode DYNAMIC (CONF:86-22138).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22139-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>To record a criterion not included in the NHSNCriterionOfDiagnosisCode value set, the value of @xsi:type SHALL be ST and a text value SHALL be present (CONF:86-22139).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22736" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22736).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.119'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22129"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.119'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22129) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.119" (CONF:86-22140).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M104"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M104"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.119']]"
                 priority="3999"
                 mode="M105">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.119-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.119']]"
                  role=""/>
      <xsl:apply-templates mode="M105"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M105"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.130']]"
                 priority="3999"
                 mode="M106">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.130-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.130']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22141" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" Procedure (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22141).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22142" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22142).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22143" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-22143).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28239"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28239) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.14" (CONF:86-28240).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22146" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22146).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22147" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22147).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='3109-6' and @codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22148"
                           test="cda:code[@code='3109-6' and @codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="3109-6" Hand hygiene (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277 STATIC) (CONF:86-22148).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22149" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22149).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22150" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-22150).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22752" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22752).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.130'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22144"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.130'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22144) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.130" (CONF:86-22145).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M106"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M106"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.130']]"
                 priority="3999"
                 mode="M107">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.130-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.130']]"
                  role=""/>
      <xsl:apply-templates mode="M107"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M107"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.129']]"
                 priority="3999"
                 mode="M108">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.129-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.129']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22151" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" Procedure (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22151).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22152" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22152).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22153" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-22153).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28237"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28237) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.14" (CONF:86-28238).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22156" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22156).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22157" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22157).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='3121-1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22158" test="cda:code[@code='3121-1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="3121-1" Central line exchanged over guidewire (CONF:86-22158).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22159" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22159).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22751" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22751).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28108" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:86-28108).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28185" test="cda:code[@codeSystem='2.16.840.1.113883.6.277']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:86-28185).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.129'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22154"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.129'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22154) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.129" (CONF:86-22155).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M108"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M108"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.129']]"
                 priority="3999"
                 mode="M109">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.129-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.129']]"
                  role=""/>
      <xsl:apply-templates mode="M109"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M109"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.136']]"
                 priority="3999"
                 mode="M110">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.136-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.136']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22164" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22164).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22165" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22165).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.136'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22166"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.136'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22166) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.136" (CONF:86-22167).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22168" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22168).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(   (cda:id[@root=//cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.139']/cda:id/@root]) and    (cda:id[@extension=//cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.139']/cda:id/@extension]) ) or (   not(cda:id/@extension) and    not(//cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.139']/cda:id/@extension) and   (cda:id[@root=//cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.139']/cda:id/@root]) )"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22169-c"
                           test="( (cda:id[@root=//cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.139']/cda:id/@root]) and (cda:id[@extension=//cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.139']/cda:id/@extension]) ) or ( not(cda:id/@extension) and not(//cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.139']/cda:id/@extension) and (cda:id[@root=//cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.139']/cda:id/@root]) )"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of the id SHALL be the same as the value of the id element in the Infection-type Observation (templateId 2.16.840.1.113883.10.20.5.6.139) (CONF:86-22169).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22170" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22170).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22172" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22172).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22173" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-22173).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[count(self::node()[@code='ASSERTION'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22174" test="cda:code[count(self::node()[@code='ASSERTION'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-22174).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28380" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28380).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M110"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M110"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.136']]"
                 priority="3999"
                 mode="M111">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.136-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.136']]"
                  role=""/>
      <xsl:apply-templates mode="M111"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M111"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.133']]"
                 priority="3999"
                 mode="M112">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.133-errors"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.133']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@negationInd or @nullFlavor='UNK'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22186-c" test="@negationInd or @nullFlavor='UNK'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If it is not known whether the outpatient was hospitalized, the value of act/@nullFlavor SHALL be UNK (CONF:86-22186).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ACT'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22187" test="@classCode='ACT'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ACT" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22187).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22188" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22188).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22190-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the outpatient was hospitalized, the value of act/@negationInd SHALL be false. If the outpatient was not hospitalized, the value of act/@negationInd SHALL be true (CONF:86-22190).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.133'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22191"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.133'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22191) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.133" (CONF:86-22192).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22193" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22193).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22194" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22194).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='32485007' and @codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22195"
                           test="cda:code[@code='32485007' and @codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="32485007" Hospital Admission (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-22195).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22756" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22756).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M112"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M112"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.133']]"
                 priority="3999"
                 mode="M113">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.133-errors-CL"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.133']]"
                  role=""/>
      <xsl:apply-templates mode="M113"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M113"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.132']]"
                 priority="3999"
                 mode="M114">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.132-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.132']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22196" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22196).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22197" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22197).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22198" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:86-22198).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.132'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22199"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.132'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22199) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.132" (CONF:86-22200).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22201" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22201).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22202" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22202).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22203" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:86-22203).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22204" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22204).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22205" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-22205).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22206" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-22206).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][count(self::node()[@code='2404-2'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22207"
                           test="cda:value[@xsi:type='CD'][count(self::node()[@code='2404-2'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="2404-2" Removed within 48 hours prior (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277 STATIC) (CONF:86-22207).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22755" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22755).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28378" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-28378).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M114"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M114"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.132']]"
                 priority="3999"
                 mode="M115">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.132-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.132']]"
                  role=""/>
      <xsl:apply-templates mode="M115"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M115"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.127']]"
                 priority="3999"
                 mode="M116">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.127-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.127']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22208" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22208).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22209" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22209).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.127'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22210"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.127'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22210) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.127" (CONF:86-22211).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22212" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22212).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='289248003']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22213" test="cda:code[@code='289248003']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="289248003" Duration of labor (CONF:86-22213).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22214" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22214).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22215" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-22215).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='IVL_TS'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22216" test="count(cda:value[@xsi:type='IVL_TS'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="IVL_TS" (CONF:86-22216).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='IVL_TS'][count(cda:width)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22217" test="cda:value[@xsi:type='IVL_TS'][count(cda:width)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] width (CONF:86-22217).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='IVL_TS']/cda:width[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22218" test="cda:value[@xsi:type='IVL_TS']/cda:width[@value]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This width SHALL contain exactly one [1..1] @value (CONF:86-22218).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='IVL_TS']/cda:width[@unit]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22219" test="cda:value[@xsi:type='IVL_TS']/cda:width[@unit]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This width SHALL contain exactly one [1..1] @unit (CONF:86-22219).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value/cda:width/@value &gt;= 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22221-c" test="cda:value/cda:width/@value &gt;= 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of width/@value SHALL be a non-negative real number representation the duration of labor in terms of the units specified in @unit (CONF:86-22221).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28355" test="cda:code[@codeSystem='2.16.840.1.113883.6.96']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:86-28355).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M116"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M116"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.127']]"
                 priority="3999"
                 mode="M117">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.127-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.127']]"
                  role=""/>
      <xsl:apply-templates mode="M117"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M117"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.182']]"
                 priority="3999"
                 mode="M118">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.182-errors"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.182']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='CLUSTER'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22239" test="@classCode='CLUSTER'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="CLUSTER" Cluster (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22239).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22240" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22240).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.182'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22241"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.182'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22241) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.182" (CONF:86-22242).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22243" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22243).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22244" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22244).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22245" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-22245).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.145']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22246"
                           test="count(cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.145']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-22246) such that it SHALL contain exactly one [1..1] Pathogen Identified Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.145) (CONF:86-22247).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.147']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22248"
                           test="count(cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.147']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-22248) such that it SHALL contain exactly one [1..1] Pathogen Ranking Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.147) (CONF:86-22249).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22770" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22770).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M118"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M118"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.182']]"
                 priority="3999"
                 mode="M119">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.182-errors-CL"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.182']]"
                  role=""/>
      <xsl:apply-templates mode="M119"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M119"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.35']]"
                 priority="3999"
                 mode="M120">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.35-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.35']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.35'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22279"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.35'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22279) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.35" (CONF:86-22280).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22281" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22281).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51898-5']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22282" test="cda:code[@code='51898-5']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51898-5" Risk Factors Section (CONF:86-22282).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.156']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22283"
                           test="count(cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.156']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:86-22283) such that it SHALL contain exactly one [1..1] Procedure Risk Factors Clinical Statement in a Procedure Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.156) (CONF:86-22284).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.170']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22285"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.170']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:86-22285) such that it SHALL contain exactly one [1..1] Trauma Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.170) (CONF:86-22286).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.123']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22287"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.123']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:86-22287) such that it SHALL contain exactly one [1..1] Diabetes Mellitus Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.123) (CONF:86-22288).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.131']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22289"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.131']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:86-22289) such that it SHALL contain exactly one [1..1] Height Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.131) (CONF:86-22290).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.173']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22291"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.173']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:86-22291) such that it SHALL contain exactly one [1..1] Weight Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.173) (CONF:86-22292).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:code[@code='IMP']) or (/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:code[@code='IMP'] and cda:entry/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.113'])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23213-c"
                           test="not(/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:code[@code='IMP']) or (/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:code[@code='IMP'] and cda:entry/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.113'])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the patient is an inpatient (componentOf/encompassingEncounter/code/@code="IMP"), an entry element SHALL be present containing an ASA Class Observation (CONF:86-23213).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(//*[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.43']][cda:entry/cda:procedure/cda:code[@code='2115-4']]) or (//*[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.43']][cda:entry/cda:procedure/cda:code[@code='2115-4']] and cda:entry/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.127'])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23216-c"
                           test="not(//*[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.43']][cda:entry/cda:procedure/cda:code[@code='2115-4']]) or (//*[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.43']][cda:entry/cda:procedure/cda:code[@code='2115-4']] and cda:entry/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.127'])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the procedure, recorded in the Details Section of the report, was a Cesarean (code/@code is 2115-4), an entry element SHALL be present containing a Duration of Labor Observation (CONF:86-23216).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28361" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-28361).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M120"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M120"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.35']]"
                 priority="3999"
                 mode="M121">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.35-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.35']]"
                  role=""/>
      <xsl:apply-templates mode="M121"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M121"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.36']]"
                 priority="3999"
                 mode="M122">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.36-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.36']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22296" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22296).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51898-5']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22297" test="cda:code[@code='51898-5']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51898-5" Risk Factors Section (CONF:86-22297).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22298" test="count(cda:entry)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:86-22298).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.171']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22299"
                           test="cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.171']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This entry SHALL contain exactly one [1..1] Urinary Catheter Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.171) (CONF:86-22299).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.36'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22300"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.36'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22300) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.36" (CONF:86-22301).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28362" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-28362).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M122"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M122"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.36']]"
                 priority="3999"
                 mode="M123">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.36-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.36']]"
                  role=""/>
      <xsl:apply-templates mode="M123"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M123"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.38']]"
                 priority="3999"
                 mode="M124">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.38-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.38']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.38'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22310"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.38'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22310) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.38" (CONF:86-22311).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22312" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22312).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51899-3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22313" test="cda:code[@code='51899-3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51899-3" Details Section (CONF:86-22313).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22314"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:86-22314) such that it SHALL contain exactly one [1..1] Infection-Type Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.139) (CONF:86-22315).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28358" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-28358).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M124"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M124"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.38']]"
                 priority="3999"
                 mode="M125">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.38-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.38']]"
                  role=""/>
      <xsl:apply-templates mode="M125"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M125"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.40']]"
                 priority="3999"
                 mode="M126">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.40-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.40']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.40'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22328"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.40'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22328) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.40" (CONF:86-22329).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22330" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22330).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51899-3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22331" test="cda:code[@code='51899-3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51899-3" Details Section (CONF:86-22331).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22332"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:86-22332) such that it SHALL contain exactly one [1..1] Infection-Type Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.139) (CONF:86-22333).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28359" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-28359).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M126"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M126"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.40']]"
                 priority="3999"
                 mode="M127">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.40-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.40']]"
                  role=""/>
      <xsl:apply-templates mode="M127"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M127"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.42']]"
                 priority="3999"
                 mode="M128">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.42-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.42']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.42'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22352"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.42'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22352) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.42" (CONF:86-22353).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22354" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22354).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51899-3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22355" test="cda:code[@code='51899-3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51899-3" Details Section (CONF:86-22355).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22356" test="count(cda:entry)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:86-22356).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.155']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22357"
                           test="cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.155']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This entry SHALL contain exactly one [1..1] Procedure Details Clinical Statement in a CLIP Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.155) (CONF:86-22357).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28363" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-28363).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M128"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M128"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.42']]"
                 priority="3999"
                 mode="M129">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.42-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.42']]"
                  role=""/>
      <xsl:apply-templates mode="M129"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M129"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45']]"
                 priority="3999"
                 mode="M130">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.45-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22371"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22371) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.45" (CONF:86-22372).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22373" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22373).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='18769-0']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22374" test="cda:code[@code='18769-0']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="18769-0" Findings Section (CONF:86-22374).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(not(cda:entry/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.145'])) or (cda:entry/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.182'])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23050-c"
                           test="not(not(cda:entry/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.145'])) or (cda:entry/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.182'])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If pathogens were identified, the Findings Section SHALL contain at least one and no more than three entry elements containing a Findings Organizer reporting pathogens identified (CONF:86-23050).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(not(cda:entry/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.182'])) or (cda:entry/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.145'])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23053-c"
                           test="not(not(cda:entry/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.182'])) or (cda:entry/*[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.145'])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If no pathogens were identified, the Findings Section SHALL contain a single entry element containing a Pathogen Identified Observation reporting that no pathogens were identified (CONF:86-23053).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23056-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If pathogens were identified, and the report is a UTI, SSI, VAE, or BSI Report, an entry element SHALL be present, containing an MDRO/CDI Observation (CONF:86-23056).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28357" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-28357).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M130"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M130"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45']]"
                 priority="3999"
                 mode="M131">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.45-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45']]"
                  role=""/>
      <xsl:apply-templates mode="M131"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M131"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.47']]"
                 priority="3999"
                 mode="M132">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.47-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.47']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.47'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22386"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.47'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22386) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.47" (CONF:86-22387).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22388" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22388).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51900-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22389" test="cda:code[@code='51900-9']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51900-9" Summary Data Section (CONF:86-22389).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22390" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-22390).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.184']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22391"
                           test="cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.184']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entries SHALL contain exactly one [1..1] Summary Encounter (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.184) (CONF:86-22391).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28365" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-28365).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M132"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M132"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.47']]"
                 priority="3999"
                 mode="M133">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.47-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.47']]"
                  role=""/>
      <xsl:apply-templates mode="M133"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M133"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.184']]"
                 priority="3999"
                 mode="M134">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.184-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.184']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22392" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22392).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22393" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22393).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.184'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22394"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.184'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22394) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.184" (CONF:86-22395).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22397"
                           test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22397) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22398). SHALL contain exactly one [1..1] participantRole (CONF:86-22399). This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" Service Delivery Location (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22400).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(cda:participant/cda:participantRole[cda:id[@root and @extension] and cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value]])  or cda:participant/cda:participantRole/cda:id[@root and not(@extension)] or (cda:participant/cda:participantRole/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value] and cda:participant/cda:participantRole/cda:scopingEntity[@classCode='PLC'][cda:id[@root]])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22401-c"
                           test="(cda:participant/cda:participantRole[cda:id[@root and @extension] and cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value]]) or cda:participant/cda:participantRole/cda:id[@root and not(@extension)] or (cda:participant/cda:participantRole/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value] and cda:participant/cda:participantRole/cda:scopingEntity[@classCode='PLC'][cda:id[@root]])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If recording data from an in-facility location, the participantRole element shall contain an id element with both @root and @extension, and a code element where the value is selected from ValueSet NHSNHealthcareServiceLocationCode 2.16.840.1.113883.13.19 DYNAMIC, recording the type of location (CONF:86-22401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22402-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Or, if recording data from the whole facility, the participantRole element shall contain an id element with @root (CONF:86-22402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22403-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Or, if recording data from a specialized subset of a facility, the participantRole element shall contain a code element where the value is selected from ValueSet NHSNHealthcareServiceLocationCode 2.16.840.1.113883.13.19 DYNAMIC, recording the type of location, and a scopingEntity element where the value of @classCode is “PLC” and id/@root is present (CONF:86-22403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22404" test="count(cda:entryRelationship) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entryRelationship (CONF:86-22404).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[@typeCode='COMP']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22405" test="cda:entryRelationship[@typeCode='COMP']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-22405).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22406"
                           test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] Summary Data Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.185) (CONF:86-22406).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M134"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M134"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.184']]"
                 priority="3999"
                 mode="M135">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.184-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.184']]"
                  role=""/>
      <xsl:apply-templates mode="M135"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M135"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']]"
                 priority="3999"
                 mode="M136">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.185-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22407" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:86-22407).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22408" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:86-22408).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22409"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22409) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.185" (CONF:86-22410).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22411" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22411).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22412" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22412).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22413" test="count(cda:value)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value (CONF:86-22413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(cda:value/@xsi:type='PQ' and cda:value/@unit='d') or (cda:value/@xsi:type='INT') or (cda:value/@xsi:type='CD')"/>
         <xsl:otherwise>
            <failed-assert id="a-86-26183-c"
                           test="(cda:value/@xsi:type='PQ' and cda:value/@unit='d') or (cda:value/@xsi:type='INT') or (cda:value/@xsi:type='CD')"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the observation reports a number of days, the value of value/xsi:type SHALL be PQ and the value of value/@unit SHALL be d. If the observation reports a number of patients, episodes or events the value of value/@xsi:type SHALL be INT. If the value is a code, the value of value/@xsi:type SHALL be CD (CONF:86-26183).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28189" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:86-28189).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M136"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M136"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']]"
                 priority="3999"
                 mode="M137">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.185-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']]"
                  role=""/>
      <xsl:apply-templates mode="M137"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M137"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27']]"
                 priority="3999"
                 mode="M138">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.4.27-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22415"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22415) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.27" (CONF:86-22416).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22417" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22417).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22418" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22418).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22419" test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain at least one [1..*] id (CONF:86-22419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22420" test="cda:recordTarget/cda:patientRole/cda:id[@root]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @root (CONF:86-22420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22421" test="cda:recordTarget/cda:patientRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @extension (CONF:86-22421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22422" test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] patient (CONF:86-22422).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22424"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] administrativeGenderCode (CONF:86-22424).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22425"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This administrativeGenderCode SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet Administrative Gender (HL7 V3) urn:oid:2.16.840.1.113883.1.11.1 STATIC (CONF:86-22425).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22426"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] birthTime (CONF:86-22426).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22427"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This birthTime SHALL contain exactly one [1..1] @value (CONF:86-22427).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M138"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M138"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28']]"
                 priority="3999"
                 mode="M139">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.4.28-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22431"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22431) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.28" (CONF:86-22432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22433" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22434" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22435" test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] id (CONF:86-22435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22436"
                           test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" not applicable (CONF:86-22436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22437"
                           test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22437) such that it SHALL contain exactly one [1..1] @typeCode="SBJ" Subject (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22438). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22439). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22440). This associatedEntity SHALL contain exactly one [1..1] @classCode="PRS" Person (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22441). This associatedEntity SHALL contain exactly one [1..1] code (CONF:86-22442). This code SHALL contain exactly one [1..1] @code="389109008" Group (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-22443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22444"
                           test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22444) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22445). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22446). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22447). This associatedEntity SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-22448). This associatedEntity SHALL contain exactly one [1..1] id (CONF:86-22449). This id SHALL contain exactly one [1..1] @root (CONF:86-22450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22451" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:86-22451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22452" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:86-22452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22453" test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] @classCode="CASE" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22454"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNPopulationSummaryReportTypeCode urn:oid:2.16.840.1.114222.4.11.3595 STATIC (CONF:86-22454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22456"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] effectiveTime (CONF:86-22456).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22457"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-22457).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22458"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:86-22458).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22459-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The author SHALL represent the software forming the message (CONF:86-22459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M139"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M139"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.34']]"
                 priority="3999"
                 mode="M140">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.34-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.34']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22415"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22415) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.27" (CONF:86-22416).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22417" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22417).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22418" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22418).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22419" test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain at least one [1..*] id (CONF:86-22419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22420" test="cda:recordTarget/cda:patientRole/cda:id[@root]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @root (CONF:86-22420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22421" test="cda:recordTarget/cda:patientRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @extension (CONF:86-22421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22422" test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] patient (CONF:86-22422).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22424"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] administrativeGenderCode (CONF:86-22424).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22425"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This administrativeGenderCode SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet Administrative Gender (HL7 V3) urn:oid:2.16.840.1.113883.1.11.1 STATIC (CONF:86-22425).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22426"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] birthTime (CONF:86-22426).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22427"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This birthTime SHALL contain exactly one [1..1] @value (CONF:86-22427).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.1.1'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28319"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.1.1'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28319) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.2.1.1" (CONF:86-28320).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:componentOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22509" test="count(cda:componentOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] componentOf (CONF:86-22509).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf[count(cda:encompassingEncounter)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22510" test="cda:componentOf[count(cda:encompassingEncounter)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This componentOf SHALL contain exactly one [1..1] encompassingEncounter (CONF:86-22510).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22511"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] effectiveTime (CONF:86-22511).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22512"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-22512).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22513"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @value (CONF:86-22513).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high) or cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22515"
                           test="not(cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high) or cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The high, if present, SHALL contain exactly one [1..1] @value (CONF:86-22515).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22516"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] location (CONF:86-22516).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22517"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This location SHALL contain exactly one [1..1] healthCareFacility (CONF:86-22517).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22518"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] id (CONF:86-22518).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22519"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:86-22519).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22520"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @extension (CONF:86-22520).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22521"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] code (ValueSet: NHSNHealthcareServiceLocationCode urn:oid:2.16.840.1.113883.13.19 DYNAMIC) (CONF:86-22521).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22523" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-22523).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22524" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-22524).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.36']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22525"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.36']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:86-22525) such that it SHALL contain exactly one [1..1] Infection Risk Factors Section in a UTI Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.36) (CONF:86-22526).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.40']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22527"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.40']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:86-22527) such that it SHALL contain exactly one [1..1] Infection Details Section in a UTI Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.40) (CONF:86-22528).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22529"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:86-22529) such that it SHALL contain exactly one [1..1] Findings Section in an Infection-Type Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.45) (CONF:86-22530).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23362-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of the admission date SHALL NOT be earlier than January 1, 1986; SHALL NOT be earlier than the date of birth; and SHALL NOT be later than the event date (CONF:86-23362).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.34'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22507"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.34'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22507) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.34" (CONF:86-27433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M140"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M140"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.34']]"
                 priority="3999"
                 mode="M141">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.34-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.34']]"
                  role=""/>
      <xsl:apply-templates mode="M141"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M141"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.187']]"
                 priority="3999"
                 mode="M142">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.187-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.187']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22649" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22649).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22650" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22650).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.49'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28279"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.49'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28279) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.49" (CONF:86-28280).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22653" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22653).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22654" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002) (CONF:86-22654).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22655" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-22655).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22656" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22656).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22657" test="count(cda:participant)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22657).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[@typeCode='LOC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22658" test="cda:participant[@typeCode='LOC']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22658).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[count(cda:participantRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22659" test="cda:participant[count(cda:participantRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] participantRole (CONF:86-22659).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[@classCode='SDLOC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22660" test="cda:participant/cda:participantRole[@classCode='SDLOC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-22660).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22661" test="cda:participant/cda:participantRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] id (CONF:86-22661).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22662" test="cda:participant/cda:participantRole/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:86-22662).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22663" test="cda:participant/cda:participantRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @extension (CONF:86-22663).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[count(cda:playingEntity)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22664"
                           test="cda:participant/cda:participantRole[count(cda:playingEntity)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingEntity (CONF:86-22664).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingEntity[@classCode='PLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22665"
                           test="cda:participant/cda:participantRole/cda:playingEntity[@classCode='PLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingEntity SHALL contain exactly one [1..1] @classCode="PLC" Place (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22665).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingEntity[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22666"
                           test="cda:participant/cda:participantRole/cda:playingEntity[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingEntity SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNHealthcareServiceLocationCode urn:oid:2.16.840.1.113883.13.19 DYNAMIC (CONF:86-22666).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.187'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22651"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.187'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22651) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.187" (CONF:86-22652).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M142"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M142"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.187']]"
                 priority="3999"
                 mode="M143">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.187-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.187']]"
                  role=""/>
      <xsl:apply-templates mode="M143"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M143"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.189']]"
                 priority="3999"
                 mode="M144">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.189-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.189']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22687" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:86-22687).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22688" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:86-22688).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28211"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28211) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.2" (CONF:86-28212).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22691" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22691).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22692" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22692).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.7160']/voc:code/@value or @nullFlavor])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22693"
                           test="count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.7160']/voc:code/@value or @nullFlavor])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNStaphAureusSpecificTest urn:oid:2.16.840.1.114222.4.11.7160 STATIC (CONF:86-22693).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22694" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22694).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22695" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CONF:86-22695).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22696" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-22696).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22697" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-22697).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD' and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.6074']/voc:code/@value or @nullFlavor])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22698"
                           test="count(cda:value[@xsi:type='CD' and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.6074']/voc:code/@value or @nullFlavor])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHALL be selected from ValueSet NHSNStaphAureusTestResults urn:oid:2.16.840.1.114222.4.11.6074 STATIC 2012-09-01 (CONF:86-22698).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.189'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22689"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.189'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22689) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.189" (CONF:86-22690).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M144"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M144"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.189']]"
                 priority="3999"
                 mode="M145">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.189-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.189']]"
                  role=""/>
      <xsl:apply-templates mode="M145"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M145"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.190']]"
                 priority="3999"
                 mode="M146">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.190-errors"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.190']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='CLUSTER'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22700" test="@classCode='CLUSTER'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="CLUSTER" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:86-22700).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22701" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:86-22701).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.1'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28209"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.1'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-28209) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.1" (CONF:86-28210).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22704" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-22704).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22705" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22705).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='18725-2' and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22706"
                           test="cda:code[@code='18725-2' and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="18725-2" Microbiology studies (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-22706).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22707" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22707).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22708" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:86-22708).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.189']])=1]) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22709"
                           test="count(cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.189']])=1]) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] component (CONF:86-22709) such that it SHALL contain exactly one [1..1] ARO Staph Aureus Specific Tests Result Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.189) (CONF:86-22710).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23365" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:86-23365).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.190'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22702"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.190'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22702) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.190" (CONF:86-22703).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M146"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M146"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.190']]"
                 priority="3999"
                 mode="M147">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.190-errors-CL"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.190']]"
                  role=""/>
      <xsl:apply-templates mode="M147"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M147"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.191']]"
                 priority="3999"
                 mode="M148">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.191-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.191']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22817" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22817).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22818" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22818).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.191'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22819"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.191'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22819) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.191" (CONF:86-22820).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22821"
                           test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22821) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22822). SHALL contain exactly one [1..1] participantRole (CONF:86-22823). This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" Service Delivery Location (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22824).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(cda:participant/cda:participantRole[cda:id[@root and @extension] and cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value]])  or cda:participant/cda:participantRole/cda:id[@root and not(@extension)] or (cda:participant/cda:participantRole/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value] and cda:participant/cda:participantRole/cda:scopingEntity[@classCode='PLC'][cda:id[@root]])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22825-c"
                           test="(cda:participant/cda:participantRole[cda:id[@root and @extension] and cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value]]) or cda:participant/cda:participantRole/cda:id[@root and not(@extension)] or (cda:participant/cda:participantRole/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value] and cda:participant/cda:participantRole/cda:scopingEntity[@classCode='PLC'][cda:id[@root]])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If recording data from an in-facility location, the participantRole element shall contain an id element with both @root and @extension, and a code element where the value is selected from ValueSet NHSNHealthcareServiceLocationCode 2.16.840.1.113883.13.19 DYNAMIC, recording the type of location (CONF:86-22825).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22826-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Or, if recording data from the whole facility, the participantRole element shall contain an id element with @root (CONF:86-22826).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22827-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Or, if recording data from a specialized subset of a facility, the participantRole element shall contain a code element where the value is selected from ValueSet NHSNHealthcareServiceLocationCode 2.16.840.1.113883.13.19 DYNAMIC, recording the type of location, and a scopingEntity element where the value of @classCode is “PLC” and id/@root is present (CONF:86-22827).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='SBJ'][count(cda:participantRole[@classCode='PRS'][count(cda:code)=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22828"
                           test="count(cda:participant[@typeCode='SBJ'][count(cda:participantRole[@classCode='PRS'][count(cda:code)=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22828) such that it SHALL contain exactly one [1..1] @typeCode="SBJ" (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90) (CONF:86-22829). SHALL contain exactly one [1..1] participantRole (CONF:86-22830). This participantRole SHALL contain exactly one [1..1] @classCode="PRS" (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41) (CONF:86-22831). This participantRole SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNPopulationCategoryCode urn:oid:2.16.840.1.114222.4.11.3234 STATIC 2009-06-25 (CONF:86-22832).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22834" test="count(cda:entryRelationship) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entryRelationship (CONF:86-22834).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[@typeCode='COMP']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22835" test="cda:entryRelationship[@typeCode='COMP']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-22835).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22836"
                           test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] Summary Data Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.185) (CONF:86-22836).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M148"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M148"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.191']]"
                 priority="3999"
                 mode="M149">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.191-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.191']]"
                  role=""/>
      <xsl:apply-templates mode="M149"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M149"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.192']]"
                 priority="3999"
                 mode="M150">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.192-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.192']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22855" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22855).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22856" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22856).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.192'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22857"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.192'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22857) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.192" (CONF:86-22858).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22859" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22859).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22860" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22860).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22861" test="count(cda:value)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value (CONF:86-22861).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22862-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>To record which organism was monitored (code/@code 3193-0 AST Organism Monitored), the value of value/@code SHALL be selected from Value Set NHSNOrganismASTCode 2.16.840.1.114222.4.11.3283 DYNAMIC (CONF:86-22862).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22863-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>To record the timing of monitoring (code/@code 1870-5 Timing), the value of value/@code SHALL be selected from Value Set 2.16.840.1.114222.4.11.3247 NHSNTimingCode STATIC 20091030 (CONF:86-22863).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22864-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>To record eligibility criteria for monitoring (code/@code 1871-3 Eligibility), the value of value/@code SHALL be selected from Value Set 2.16.840.1.114222.4.11.3248 NHSNEligibilityCode DYNAMIC (CONF:86-22864).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(cda:value/@xsi:type='PQ' and cda:value/@unit='d') or (cda:value/@xsi:type='INT') or (cda:value/@xsi:type='CD')"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23371-c"
                           test="(cda:value/@xsi:type='PQ' and cda:value/@unit='d') or (cda:value/@xsi:type='INT') or (cda:value/@xsi:type='CD')"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the observation reports a number of days, the value of value/xsi:type SHALL be PQ and the value of value/@unit SHALL be d. If the observation reports a number of patients, the value of value/@xsi:type SHALL be INT. If the value is a code, the value of value/@xsi:type SHALL be CD (CONF:86-23371).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23373"
                           test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] Summary Data Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.185) (CONF:86-23373).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23374-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>To record which organism was monitored (code/@code 3193-0 AST Organism Monitored) this observation SHALL contain, as entryRelationships where the value of @typeCode is COMP, Summary Data Observations recording the data collected for that class. The specific data required are specified by the NHSN protocol (CONF:86-23374).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28112" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:86-28112).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M150"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M150"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.192']]"
                 priority="3999"
                 mode="M151">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.192-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.192']]"
                  role=""/>
      <xsl:apply-templates mode="M151"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M151"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.193']]"
                 priority="3999"
                 mode="M152">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.193-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.193']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22866" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22866).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22867" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22867).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.193'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22868"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.193'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22868) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.193" (CONF:86-22869).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22870"
                           test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22870) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22871). SHALL contain exactly one [1..1] participantRole (CONF:86-22872). This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" Service Delivery Location (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22873).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(cda:participant/cda:participantRole[cda:id[@root and @extension] and cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value]])  or cda:participant/cda:participantRole/cda:id[@root and not(@extension)] or (cda:participant/cda:participantRole/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value] and cda:participant/cda:participantRole/cda:scopingEntity[@classCode='PLC'][cda:id[@root]])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22874-c"
                           test="(cda:participant/cda:participantRole[cda:id[@root and @extension] and cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value]]) or cda:participant/cda:participantRole/cda:id[@root and not(@extension)] or (cda:participant/cda:participantRole/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value] and cda:participant/cda:participantRole/cda:scopingEntity[@classCode='PLC'][cda:id[@root]])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If recording data from an in-facility location, the participantRole element shall contain an id element with both @root and @extension, and a code element where the value is selected from ValueSet NHSNHealthcareServiceLocationCode 2.16.840.1.113883.13.19 DYNAMIC, recording the type of location (CONF:86-22874).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22875-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Or, if recording data from the whole facility, the participantRole element shall contain an id element with @root (CONF:86-22875).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22876-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Or, if recording data from a specialized subset of a facility, the participantRole element shall contain a code element where the value is selected from ValueSet NHSNHealthcareServiceLocationCode 2.16.840.1.113883.13.19 DYNAMIC, recording the type of location, and a scopingEntity element where the value of @classCode is “PLC” and id/@root is present (CONF:86-22876).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22877" test="count(cda:entryRelationship) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entryRelationship (CONF:86-22877).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[@typeCode='COMP']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22878" test="cda:entryRelationship[@typeCode='COMP']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-22878).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.192']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22879"
                           test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.192']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] Summary Data Observation (POM) (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.192) (CONF:86-22879).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M152"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M152"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.193']]"
                 priority="3999"
                 mode="M153">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.193-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.193']]"
                  role=""/>
      <xsl:apply-templates mode="M153"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M153"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.194']]"
                 priority="3999"
                 mode="M154">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.194-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.194']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22910" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22910).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22911" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22911).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.194'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22912"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.194'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22912) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.194" (CONF:86-22913).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22914" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22914).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22915" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:86-22915).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22916" test="count(cda:value)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value (CONF:86-22916).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(cda:value/@xsi:type='PQ' and cda:value/@unit='d') or (cda:value/@xsi:type='INT') or (cda:value/@xsi:type='CD')"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22917-c"
                           test="(cda:value/@xsi:type='PQ' and cda:value/@unit='d') or (cda:value/@xsi:type='INT') or (cda:value/@xsi:type='CD')"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the observation reports a number of days, the value of value/xsi:type SHALL be PQ and the value of value/@unit SHALL be d. If the observation reports a number of patients, the value of value/@xsi:type SHALL be INT. If the value is a code, the value of value/@xsi:type SHALL be CD (CONF:86-22917).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:methodCode[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3361']/voc:code/@value])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23044"
                           test="count(cda:methodCode[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3361']/voc:code/@value])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] methodCode, which SHALL be selected from ValueSet NHSNRouteOfAdminstrationAURPCode urn:oid:2.16.840.1.114222.4.11.3361 (CONF:86-23044).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28111" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:86-28111).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M154"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M154"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.194']]"
                 priority="3999"
                 mode="M155">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.194-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.194']]"
                  role=""/>
      <xsl:apply-templates mode="M155"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M155"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.195']]"
                 priority="3999"
                 mode="M156">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.195-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.195']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22933" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22933).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22934" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22934).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.195'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22935"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.195'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22935) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.195" (CONF:86-22936).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22937" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code, which SHOULD be selected from ValueSet Codes for Vascular Access Type (Dialysis) Summary Data urn:oid:2.16.840.1.113883.10.20.5.9.17 DYNAMIC (CONF:86-22937).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22938" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:86-22938).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22939" test="count(cda:value)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value (CONF:86-22939).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='COMP']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22941"
                           test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='COMP']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] @typeCode="COMP" (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002) (CONF:86-22941).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22942"
                           test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] Summary Data Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.185) (CONF:86-22942).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22943-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>In a VAT Report, the Summary Observation recording the number of patients with fistula SHALL contain an entryRelationship where the value of @typeCode is COMP, that contains a Summary Data Observation recording the number of those patients with buttonhole cannulation (CONF:86-22943).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(cda:value/@xsi:type='PQ' and cda:value/@unit='d') or (cda:value/@xsi:type='INT') or (cda:value/@xsi:type='CD')"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22944-c"
                           test="(cda:value/@xsi:type='PQ' and cda:value/@unit='d') or (cda:value/@xsi:type='INT') or (cda:value/@xsi:type='CD')"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the observation reports a number of days, the value of value/xsi:type SHALL be PQ and the value of value/@unit SHALL be d. If the observation reports a number of patients, the value of value/@xsi:type SHALL be INT. If the value is a code, the value of value/@xsi:type SHALL be CD (CONF:86-22944).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28113" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:86-28113).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M156"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M156"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.195']]"
                 priority="3999"
                 mode="M157">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.195-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.195']]"
                  role=""/>
      <xsl:apply-templates mode="M157"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M157"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.50']]"
                 priority="3999"
                 mode="M158">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.50-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.50']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.50'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22945"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.50'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22945) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.50" (CONF:86-22946).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22947" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-22947).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51900-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22948" test="cda:code[@code='51900-9']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51900-9" Summary Data Section (CONF:86-22948).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22949" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-22949).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.196']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22950"
                           test="cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.196']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entries SHALL contain exactly one [1..1] Summary Encounter (VAT) (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.196) (CONF:86-22950).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28369" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-28369).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M158"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M158"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.50']]"
                 priority="3999"
                 mode="M159">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.50-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.50']]"
                  role=""/>
      <xsl:apply-templates mode="M159"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M159"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.196']]"
                 priority="3999"
                 mode="M160">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.196-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.196']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22951" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22951).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22952" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-22952).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.196'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22953"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.196'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22953) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.196" (CONF:86-22954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22955"
                           test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22955) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22956). SHALL contain exactly one [1..1] participantRole (CONF:86-22957). This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" Service Delivery Location (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22958).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(cda:participant/cda:participantRole[cda:id[@root and @extension] and cda:code])  or cda:participant/cda:participantRole/cda:id[@root and not(@extension)] or (cda:participant/cda:participantRole/cda:code and cda:participant/cda:participantRole/cda:scopingEntity[@classCode='PLC'][cda:id[@root]])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22959-c"
                           test="(cda:participant/cda:participantRole[cda:id[@root and @extension] and cda:code]) or cda:participant/cda:participantRole/cda:id[@root and not(@extension)] or (cda:participant/cda:participantRole/cda:code and cda:participant/cda:participantRole/cda:scopingEntity[@classCode='PLC'][cda:id[@root]])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If recording data from an in-facility location, the participantRole element shall contain an id element with both @root and @extension, and a code element where the value is selected from ValueSet NHSNHealthcareServiceLocationCode 2.16.840.1.113883.13.19 DYNAMIC, recording the type of location (CONF:86-22959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22960-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Or, if recording data from the whole facility, the participantRole element shall contain an id element with @root (CONF:86-22960).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22961-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Or, if recording data from a specialized subset of a facility, the participantRole element shall contain a code element where the value is selected from ValueSet NHSNHealthcareServiceLocationCode 2.16.840.1.113883.13.19 DYNAMIC, recording the type of location, and a scopingEntity element where the value of @classCode is “PLC” and id/@root is present (CONF:86-22961).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22962" test="count(cda:entryRelationship) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entryRelationship (CONF:86-22962).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[@typeCode='COMP']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22963" test="cda:entryRelationship[@typeCode='COMP']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-22963).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.195']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22964"
                           test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.195']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] Summary Data Observation (VAT) (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.195) (CONF:86-22964).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M160"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M160"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.196']]"
                 priority="3999"
                 mode="M161">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.196-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.196']]"
                  role=""/>
      <xsl:apply-templates mode="M161"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M161"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.124']]"
                 priority="3999"
                 mode="M162">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.124-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.124']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23263" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-23263).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23264" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:86-23264).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.124'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23265"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.124'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-23265) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.124" (CONF:86-23266).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23267" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-23267).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23268-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This is the id of the encompassing encounter (CONF:86-23268).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23269" test="count(cda:entryRelationship)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:86-23269).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[@typeCode='SAS']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23272" test="cda:entryRelationship[@typeCode='SAS']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This entryRelationship SHALL contain exactly one [1..1] @typeCode="SAS" (CONF:86-23272).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[@inversionInd]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23273" test="cda:entryRelationship[@inversionInd]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This entryRelationship SHALL contain exactly one [1..1] @inversionInd (CONF:86-23273).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23274-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the infection (dialysis event) began on or after the date the patient was admitted, set the value of @inversionInd to true. If the infection (dialysis event) began before the date the patient was admitted, set the value of @inversionInd to false (CONF:86-23274).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[count(cda:observation)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23275" test="cda:entryRelationship[count(cda:observation)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This entryRelationship SHALL contain exactly one [1..1] observation (CONF:86-23275).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship/cda:observation[@classCode='OBS']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23276" test="cda:entryRelationship/cda:observation[@classCode='OBS']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This observation SHALL contain exactly one [1..1] @classCode="OBS" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:86-23276).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship/cda:observation[@moodCode='EVN']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23277" test="cda:entryRelationship/cda:observation[@moodCode='EVN']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This observation SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:86-23277).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship/cda:observation[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23278" test="cda:entryRelationship/cda:observation[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This observation SHALL contain exactly one [1..1] id (CONF:86-23278).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship/cda:observation[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23280" test="cda:entryRelationship/cda:observation[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This observation SHALL contain exactly one [1..1] code (CONF:86-23280).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship/cda:observation/cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23281"
                           test="cda:entryRelationship/cda:observation/cda:code[@code='ASSERTION']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" (CONF:86-23281).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship/cda:observation/cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23282"
                           test="cda:entryRelationship/cda:observation/cda:code[@codeSystem='2.16.840.1.113883.5.4']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:86-23282).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship/cda:observation[count(cda:statusCode)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23283"
                           test="cda:entryRelationship/cda:observation[count(cda:statusCode)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This observation SHALL contain exactly one [1..1] statusCode (CONF:86-23283).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship/cda:observation/cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23284"
                           test="cda:entryRelationship/cda:observation/cda:statusCode[@code='completed']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CONF:86-23284).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship/cda:observation[count(cda:value[@xsi:type='CD'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-23285"
                           test="cda:entryRelationship/cda:observation[count(cda:value[@xsi:type='CD'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This observation SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:86-23285).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship/cda:observation/cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27747"
                           test="cda:entryRelationship/cda:observation/cda:id[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008) (CONF:86-27747).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship/cda:observation/cda:value[@xsi:type='CD'][@code='40733004']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27748"
                           test="cda:entryRelationship/cda:observation/cda:value[@xsi:type='CD'][@code='40733004']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="40733004" Infection (CONF:86-27748).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship/cda:observation/cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27749"
                           test="cda:entryRelationship/cda:observation/cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:86-27749).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M162"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M162"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.124']]"
                 priority="3999"
                 mode="M163">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.124-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.124']]"
                  role=""/>
      <xsl:apply-templates mode="M163"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M163"/>
   <xsl:template match="cda:participant[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.202']]"
                 priority="3999"
                 mode="M164">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.202-errors"
                  context="cda:participant[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.202']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.202'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27137"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.202'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-27137) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.202" (CONF:86-27138).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@typeCode='SBJ'"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27150" test="@typeCode='SBJ'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @typeCode="SBJ" (CONF:86-27150).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participantRole)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27151" test="count(cda:participantRole)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participantRole (CONF:86-27151).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participantRole[@classCode='ISLT']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27152" test="cda:participantRole[@classCode='ISLT']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="ISLT" (CONF:86-27152).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participantRole[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27153" test="cda:participantRole[count(cda:id) &gt; 0]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain at least one [1..*] id (CONF:86-27153).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participantRole[count(cda:playingEntity)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27154" test="cda:participantRole[count(cda:playingEntity)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingEntity (CONF:86-27154).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participantRole/cda:playingEntity[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27155" test="cda:participantRole/cda:playingEntity[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingEntity SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNPathogenCode urn:oid:2.16.840.1.113883.13.16 DYNAMIC (CONF:86-27155).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M164"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M164"/>
   <xsl:template match="cda:participant[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.202']]"
                 priority="3999"
                 mode="M165">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.202-errors-CL"
                  context="cda:participant[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.202']]"
                  role=""/>
      <xsl:apply-templates mode="M165"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M165"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.203']]"
                 priority="3999"
                 mode="M166">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.203-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.203']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30205" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:1101-30205).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30206" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CONF:1101-30206).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30301"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-30301) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:1101-30302).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30209" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1101-30209).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30210" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1101-30210).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30211" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1101-30211).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30212" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:1101-30212).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30213" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1101-30213).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd or @nullFlavor='UNK'"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30215-c" test="@negationInd or @nullFlavor='UNK'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If it is not known whether the patient had loss of vascular access, the value of @nullFlavor SHALL be UNK. If the value of @nullFlavor is set to UNK then the value of @negationInd SHALL NOT be set (CONF:1101-30215).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd or @nullFlavor"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30217-c" test="@negationInd or @nullFlavor" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the patient had loss of vascular access, the value of @negationInd SHALL be false. If the patient did not have loss of vascular access, the value of @negationInd SHALL be true. If the value of @negationInd is set then the value of @nullFlavor SHALL NOT be set (CONF:1101-30217).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30218" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:1101-30218).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30219" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:1101-30219).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='2325-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30220" test="cda:value[@xsi:type='CD'][@code='2325-9']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="2325-9" Loss of vascular access (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1101-30220).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30221"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1101-30221).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30224" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1101-30224).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.203'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30207"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.203'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-30207) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.203" (CONF:1101-30208).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M166"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M166"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.203']]"
                 priority="3999"
                 mode="M167">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.203-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.203']]"
                  role=""/>
      <xsl:apply-templates mode="M167"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M167"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.204']]"
                 priority="3999"
                 mode="M168">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.204-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.204']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30225" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:1101-30225).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30226" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CONF:1101-30226).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30227" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:1101-30227).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30228-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the revision was associated with prior infection at the index joint, the value of @negationInd SHALL be false. If the revision was not associated with prior infection at the index joint, the value of @negationInd SHALL be true (CONF:1101-30228).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30305"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-30305) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:1101-30306).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30231" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1101-30231).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30232" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1101-30232).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30233" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1101-30233).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30234" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" (CONF:1101-30234).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30235" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:1101-30235).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30236" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1101-30236).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30237" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:1101-30237).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30238" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1101-30238).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='1239-3']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30239" test="cda:value[@xsi:type='CD'][@code='1239-3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="1239-3" Revision associated with prior infection at index joint (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1101-30239).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30240"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1101-30240).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.204'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30229"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.204'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-30229) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.204" (CONF:1101-30230).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M168"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M168"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.204']]"
                 priority="3999"
                 mode="M169">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.204-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.204']]"
                  role=""/>
      <xsl:apply-templates mode="M169"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M169"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.153.2']]"
                 priority="3999"
                 mode="M170">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.153.2-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.153.2']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21654" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" Procedure (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1101-21654).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21655" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1101-21655).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30303"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.14'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-30303) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.14" (CONF:1101-30304).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21656" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1101-21656).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.17']/voc:code/@value or @nullFlavor])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21657"
                           test="count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.17']/voc:code/@value or @nullFlavor])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNProcedureCategoryCode urn:oid:2.16.840.1.113883.13.17 (CONF:1101-21657).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21700" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode, which SHALL be selected from ValueSet ProcedureAct statusCode urn:oid:2.16.840.1.113883.11.20.9.22 DYNAMIC (CONF:1101-21700).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21661" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:1101-21661).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21662" test="cda:effectiveTime[count(cda:low)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:1101-21662).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[count(cda:width)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21663" test="cda:effectiveTime[count(cda:width)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] width (CONF:1101-21663).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code != '2101-4'] or cda:code[@code = '2101-4' and @codeSystem='2.16.840.1.113883.6.277'] and cda:methodCode[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.3']/voc:code/@value] "/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21669-c"
                           test="cda:code[@code != '2101-4'] or cda:code[@code = '2101-4' and @codeSystem='2.16.840.1.113883.6.277'] and cda:methodCode[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.3']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the procedure category code represents a hip replacement, a methodCode element SHALL be present where the value of @code is selected from Value Set 2.16.840.1.113883.13.3 NHSNHipReplacementCode STATIC 20090625 (CONF:1101-21669).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code != '2124-6'] or cda:code[@code = '2124-6' and @codeSystem='2.16.840.1.113883.6.277'] and cda:methodCode[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.4']/voc:code/@value] "/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21670-c"
                           test="cda:code[@code != '2124-6'] or cda:code[@code = '2124-6' and @codeSystem='2.16.840.1.113883.6.277'] and cda:methodCode[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.4']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the procedure category code represents a knee replacement, a methodCode element SHALL be present where the value of @code is selected from Value Set 2.16.840.1.113883.13.4 NHSNKneeReplacementCode STATIC 20090625 (CONF:1101-21670).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code != '2137-8' and @code != '2135-2'] or cda:code[@code = '2137-8' or @code = '2135-2'] and cda:approachSiteCode[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.2']/voc:code/@value or @nullFlavor='NI']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21674-c"
                           test="cda:code[@code != '2137-8' and @code != '2135-2'] or cda:code[@code = '2137-8' or @code = '2135-2'] and cda:approachSiteCode[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.2']/voc:code/@value or @nullFlavor='NI']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the procedure is a fusion or refusion (code/@code is either 2137-8 or 2135-2), an approachSiteCode element SHALL be present. If the approach site is known, the value of @code SHALL be selected from Value Set 2.16.840.1.113883.13.2 NHSNSpinalFusionApproachCode STATIC 20120808. If the approach site is not specified, the value of code@nullFlavor SHALL be NI (CONF:1101-21674).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:performer) or cda:performer[@typeCode='PRF']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21676" test="not(cda:performer) or cda:performer[@typeCode='PRF']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The performer, if present, SHALL contain exactly one [1..1] @typeCode="PRF" (CONF:1101-21676).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:performer) or cda:performer[count(cda:assignedEntity)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21677"
                           test="not(cda:performer) or cda:performer[count(cda:assignedEntity)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The performer, if present, SHALL contain exactly one [1..1] assignedEntity (CONF:1101-21677).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:performer/cda:assignedEntity) or cda:performer/cda:assignedEntity[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21678"
                           test="not(cda:performer/cda:assignedEntity) or cda:performer/cda:assignedEntity[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedEntity SHALL contain at least one [1..*] id (CONF:1101-21678).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:performer/cda:assignedEntity/cda:id) or cda:performer/cda:assignedEntity/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21679"
                           test="not(cda:performer/cda:assignedEntity/cda:id) or cda:performer/cda:assignedEntity/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @root (CONF:1101-21679).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21680-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This @root SHALL be the facility's identifier (CONF:1101-21680).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:performer/cda:assignedEntity/cda:id) or cda:performer/cda:assignedEntity/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21681"
                           test="not(cda:performer/cda:assignedEntity/cda:id) or cda:performer/cda:assignedEntity/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @extension (CONF:1101-21681).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21682-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This @extension SHALL be the surgeon's identifier (CONF:1101-21682).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.112']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21683"
                           test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.112']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:1101-21683) such that it SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:1101-21684). SHALL contain exactly one [1..1] Anesthesia Administration Clinical Statement (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.112) (CONF:1101-21685).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code != '2137-8' and @code != '2135-2'] or cda:code[@code = '2137-8' or @code = '2135-2'] and cda:entryRelationship[@typeCode='COMP']/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.166']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21689-c"
                           test="cda:code[@code != '2137-8' and @code != '2135-2'] or cda:code[@code = '2137-8' or @code = '2135-2'] and cda:entryRelationship[@typeCode='COMP']/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.166']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the procedure is a fusion or refusion, this entryRelationship SHALL be present (CONF:1101-21689).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.117']])=1]) &lt; 2"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21690"
                           test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.117']])=1]) &lt; 2"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain zero or one [0..1] entryRelationship (CONF:1101-21690) such that it SHALL contain exactly one [1..1] @typeCode="COMP" (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:1101-21691). SHALL contain exactly one [1..1] Closure Technique Procedure (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.117) (CONF:1101-21692).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.153.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-21695"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.153.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-21695) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.153.2" (CONF:1101-30250).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M170"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M170"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.153.2']]"
                 priority="3999"
                 mode="M171">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.153.2-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.153.2']]"
                  role=""/>
      <xsl:apply-templates mode="M171"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M171"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.43.2']]"
                 priority="3999"
                 mode="M172">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.43.2-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.43.2']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.43.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22358"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.43.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-22358) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.43.2" (CONF:1101-30248).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22360" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1101-22360).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51899-3']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22361" test="cda:code[@code='51899-3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51899-3" Details Section (CONF:1101-22361).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22362" test="count(cda:entry)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:1101-22362).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.153.2']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30249"
                           test="cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.153.2']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This entry SHALL contain exactly one [1..1] Procedure Details Clinical Statement in a Procedure Report (V2) (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.153.2) (CONF:1101-30249).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30314" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:1101-30314).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M172"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M172"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.43.2']]"
                 priority="3999"
                 mode="M173">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.43.2-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.43.2']]"
                  role=""/>
      <xsl:apply-templates mode="M173"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M173"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.35.2']]"
                 priority="3999"
                 mode="M174">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.35.2-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.35.2']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22415"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22415) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.27" (CONF:86-22416).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22417" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22417).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22418" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22418).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22419" test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain at least one [1..*] id (CONF:86-22419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22420" test="cda:recordTarget/cda:patientRole/cda:id[@root]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @root (CONF:86-22420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22421" test="cda:recordTarget/cda:patientRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @extension (CONF:86-22421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22422" test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] patient (CONF:86-22422).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22424"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] administrativeGenderCode (CONF:86-22424).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22425"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This administrativeGenderCode SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet Administrative Gender (HL7 V3) urn:oid:2.16.840.1.113883.1.11.1 STATIC (CONF:86-22425).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22426"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] birthTime (CONF:86-22426).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22427"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This birthTime SHALL contain exactly one [1..1] @value (CONF:86-22427).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.1.1'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30309"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.1.1'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-30309) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.2.1.1" (CONF:1101-30310).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:componentOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22533" test="count(cda:componentOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] componentOf (CONF:1101-22533).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf[count(cda:encompassingEncounter)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22534" test="cda:componentOf[count(cda:encompassingEncounter)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This componentOf SHALL contain exactly one [1..1] encompassingEncounter (CONF:1101-22534).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.1']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22535"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.1']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] code (ValueSet: NHSNEncounterTypeCode urn:oid:2.16.840.1.113883.13.1 STATIC 2009-01-30) (CONF:1101-22535).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22537"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] location (CONF:1101-22537).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22538"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This location SHALL contain exactly one [1..1] healthCareFacility (CONF:1101-22538).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22539"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] id (CONF:1101-22539).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22540"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:1101-22540).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:code[@code != 'IMP'] or (cda:componentOf/cda:encompassingEncounter/cda:code[@code = 'IMP'] and cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low/@value)"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22544-c"
                           test="cda:componentOf/cda:encompassingEncounter/cda:code[@code != 'IMP'] or (cda:componentOf/cda:encompassingEncounter/cda:code[@code = 'IMP'] and cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low/@value)"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the patient is an inpatient (code/@code='IMP'), admission date is recorded: An effectiveTime element SHALL be present. This effectiveTime SHALL [1..1] contain a low element. This low element SHALL [1..1] contain @value (CONF:1101-22544).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22545" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:1101-22545).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22546" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:1101-22546).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.43.2']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22547"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.43.2']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:1101-22547) such that it SHALL contain exactly one [1..1] Procedure Details Section in a Procedure Report (V2) (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.43.2) (CONF:1101-30256).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.35']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22551"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.35']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:1101-22551) such that it SHALL contain exactly one [1..1] Infection Risk Factors Section in a Procedure Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.35) (CONF:1101-22552).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.35.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22531"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.35.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-22531) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.35.2" (CONF:1101-30255).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M174"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M174"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.35.2']]"
                 priority="3999"
                 mode="M175">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.35.2-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.35.2']]"
                  role=""/>
      <xsl:apply-templates mode="M175"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M175"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.205']]"
                 priority="3999"
                 mode="M176">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.205-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.205']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30257" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:1101-30257).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30258" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CONF:1101-30258).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30259" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:1101-30259).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30260-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If an infection was present at the time that a surgical procedure was performed, the value of @negationInd SHALL be false. If an infection was not present at the time that a surgical procedure was performed, the value of @negationInd SHALL be true (CONF:1101-30260).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30299"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-30299) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:1101-30300).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30263" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1101-30263).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30264" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1101-30264).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30265" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1101-30265).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30266" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" (CONF:1101-30266).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30267" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:1101-30267).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30268" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1101-30268).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30269" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:1101-30269).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30270" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1101-30270).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='1237-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30271" test="cda:value[@xsi:type='CD'][@code='1237-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="1237-7" Infection present at the time of surgery (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1101-30271).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30272"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1101-30272).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.205'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30261"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.205'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-30261) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.205" (CONF:1101-30262).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M176"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M176"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.205']]"
                 priority="3999"
                 mode="M177">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.205-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.205']]"
                  role=""/>
      <xsl:apply-templates mode="M177"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M177"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.39.2']]"
                 priority="3999"
                 mode="M178">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.39.2-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.39.2']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.39.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22320"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.39.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-22320) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.39.2" (CONF:1101-30273).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22322" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1101-22322).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51899-3']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22323" test="cda:code[@code='51899-3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51899-3" Details Section (CONF:1101-22323).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22324"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:1101-22324) such that it SHALL contain exactly one [1..1] Infection-Type Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.139) (CONF:1101-22325).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.205']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30274"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.205']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:1101-30274) such that it SHALL contain exactly one [1..1] Infection Present at the Time of Surgery Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.205) (CONF:1101-30275).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.206']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30294"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.206']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:1101-30294) such that it SHALL contain exactly one [1..1] SSI Detected Using Toolkit Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.206) (CONF:1101-30295).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.154']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30296"
                           test="count(cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.154']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:1101-30296) such that it SHALL contain exactly one [1..1] Procedure Details Clinical Statement in an Infection-Type Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.154) (CONF:1101-30297).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30313" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:1101-30313).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M178"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M178"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.39.2']]"
                 priority="3999"
                 mode="M179">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.5.39.2-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.39.2']]"
                  role=""/>
      <xsl:apply-templates mode="M179"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M179"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.33.2']]"
                 priority="3999"
                 mode="M180">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.33.2-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.33.2']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22415"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22415) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.27" (CONF:86-22416).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22417" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22417).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22418" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22418).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22419" test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain at least one [1..*] id (CONF:86-22419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22420" test="cda:recordTarget/cda:patientRole/cda:id[@root]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @root (CONF:86-22420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22421" test="cda:recordTarget/cda:patientRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @extension (CONF:86-22421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22422" test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] patient (CONF:86-22422).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22424"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] administrativeGenderCode (CONF:86-22424).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22425"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This administrativeGenderCode SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet Administrative Gender (HL7 V3) urn:oid:2.16.840.1.113883.1.11.1 STATIC (CONF:86-22425).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22426"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] birthTime (CONF:86-22426).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22427"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This birthTime SHALL contain exactly one [1..1] @value (CONF:86-22427).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.1.1'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30311"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.1.1'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-30311) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.2.1.1" (CONF:1101-30312).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:componentOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22486" test="count(cda:componentOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] componentOf (CONF:1101-22486).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf[count(cda:encompassingEncounter)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22487" test="cda:componentOf[count(cda:encompassingEncounter)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This componentOf SHALL contain exactly one [1..1] encompassingEncounter (CONF:1101-22487).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.1']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22488"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.1']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] code (ValueSet: NHSNEncounterTypeCode urn:oid:2.16.840.1.113883.13.1 STATIC 2009-01-30) (CONF:1101-22488).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22490"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] effectiveTime (CONF:1101-22490).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-27762"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:1101-27762).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-27763"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @value (CONF:1101-27763).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high) or cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22492"
                           test="not(cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high) or cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The high, if present, SHALL contain exactly one [1..1] @value (CONF:1101-22492).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22493"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] location (CONF:1101-22493).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22494"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This location SHALL contain exactly one [1..1] healthCareFacility (CONF:1101-22494).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22495"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] id (CONF:1101-22495).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22496"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:1101-22496).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22501" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:1101-22501).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22502" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:1101-22502).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.39.2']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22503"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.39.2']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:1101-22503) such that it SHALL contain exactly one [1..1] Infection Details Section in an SSI Report (V2) (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.39.2) (CONF:1101-22504).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22505"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:1101-22505) such that it SHALL contain exactly one [1..1] Findings Section in an Infection-Type Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.45) (CONF:1101-22506).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.33.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-22484"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.33.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-22484) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.33.2" (CONF:1101-30276).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M180"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M180"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.33.2']]"
                 priority="3999"
                 mode="M181">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.33.2-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.33.2']]"
                  role=""/>
      <xsl:apply-templates mode="M181"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M181"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.206']]"
                 priority="3999"
                 mode="M182">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.206-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.206']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30278" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:1101-30278).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30279" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:1101-30279).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd or @nullFlavor"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30281-c" test="@negationInd or @nullFlavor" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the surgical site infection was identified through the use of discharge diagnosis or procedure codes, the value of @negationInd SHALL be false. If the surgical site infection was not identified through the use of discharge diagnosis or procedure codes, the value of @negationInd SHALL be true. If the value of @negationInd is set then the value of @nullFlavor SHALL NOT be set (CONF:1101-30281).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.206'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30282"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.206'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1101-30282) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.206" (CONF:1101-30283).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30284" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1101-30284).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30285" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1101-30285).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30286" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1101-30286).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30287" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" (CONF:1101-30287).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30288" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:1101-30288).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30289" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1101-30289).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30290" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:1101-30290).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30291" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1101-30291).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='1238-5']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30292" test="cda:value[@xsi:type='CD'][@code='1238-5']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="1238-5" SSI detected using the NHSN ICD-Code based Admit and Readmit SSI Surveillance Toolkit (CONF:1101-30292).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30293"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1101-30293).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1101-30298-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the value of @nullFlavor is set to NA then the value of @negationInd SHALL NOT be set (CONF:1101-30298).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M182"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M182"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.206']]"
                 priority="3999"
                 mode="M183">
      <fired-rule id="r-urn-oid-2.16.840.1.113883.10.20.5.6.206-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.206']]"
                  role=""/>
      <xsl:apply-templates mode="M183"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M183"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.216' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M184">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.216-2014-12-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.216' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-2" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-2).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-4" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-4).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-5" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-5).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-6" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-6).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='6130-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-8" test="cda:code[@code='6130-9']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="6130-9" Contraindication type (CONF:1129-8).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-10" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHALL be selected from ValueSet NHSNContraindicationType urn:oid:2.16.840.1.114222.4.11.7239 DYNAMIC (CONF:1129-10).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-12" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:1129-12).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.216'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30522"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.216'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30522) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.216" (CONF:1129-30523). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30524).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M184"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M184"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.216' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M185">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.216-2014-12-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.216' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M185"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M185"/>
   <xsl:template match="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.162' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M186">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.162-2014-12-01-errors"
                  context="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.162' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:consumable)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21362" test="count(cda:consumable)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] consumable (CONF:1129-21362).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable[count(cda:manufacturedProduct)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21363" test="cda:consumable[count(cda:manufacturedProduct)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This consumable SHALL contain exactly one [1..1] manufacturedProduct (CONF:1129-21363).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct[count(cda:manufacturedMaterial)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21365"
                           test="cda:consumable/cda:manufacturedProduct[count(cda:manufacturedMaterial)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedProduct SHALL contain exactly one [1..1] manufacturedMaterial (CONF:1129-21365).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21367"
                           test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedMaterial SHALL contain exactly one [1..1] code (CONF:1129-21367).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.16'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30537"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.16'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30537) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.16" (CONF:1129-30538).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22119" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1129-22119).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22120" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-22120).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime[@xsi:type='IVL_TS'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22121" test="count(cda:effectiveTime[@xsi:type='IVL_TS'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:1129-22121).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22122"
                           test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:1129-22122).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22123"
                           test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:1129-22123).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='SBADM'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21359" test="@classCode='SBADM'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="SBADM" Substance administration (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-21359).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21360" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-21360).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21361" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:1129-21361).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct[@classCode='MANU']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21364"
                           test="cda:consumable/cda:manufacturedProduct[@classCode='MANU']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedProduct SHALL contain exactly one [1..1] @classCode="MANU" Manufactured product (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:1129-21364).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial[@classCode='MMAT']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21366"
                           test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial[@classCode='MMAT']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedMaterial SHALL contain exactly one [1..1] @classCode="MMAT" Manufactured material (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:1129-21366).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial/cda:code[@code = document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3183']/voc:code/@value or (@nullFlavor='OTH' and cda:originalText)]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21368-c"
                           test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial/cda:code[@code = document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3183']/voc:code/@value or (@nullFlavor='OTH' and cda:originalText)]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>To record a skin-preparation solution as a code, the value of @code SHALL be selected from ValueSet 2.16.840.1.114222.4.11.3183 NHSNSkinPreparationCode DYNAMIC. Or, to record a skin-preparation solution as text, the value of @nullFlavor SHALL be OTH and an originalText element SHALL be present recording the skin-preparation solution (CONF:1129-21368).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22785" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-22785).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28105" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:1129-28105).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS']/cda:low[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22786"
                           test="cda:effectiveTime[@xsi:type='IVL_TS']/cda:low[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-22786).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS']/cda:high[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22787"
                           test="cda:effectiveTime[@xsi:type='IVL_TS']/cda:high[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This high SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-22787).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-23294-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>When recording whether chlorhexidine gluconate was applied, if it was not applied, and was contraindicated, the value of @negationInd on the Contraindicated Observation SHALL be false. If it was not contraindicated, the value of @negationInd on the Contraindicated Observation SHALL be true. If it is not known whether it was contraindicated, the value of @nullFlavor on the Contraindicated Observation SHALL be UNK. For examples and further explanation, see the Contraindicated Observation template (CONF:1129-23294).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-23295-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If chlorhexidine gluconate was NOT applied, SHALL contain an entryRelationship containing a Contraindicated Observation (CONF:1129-23295).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.162'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22118"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.162'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-22118) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.162" (CONF:1129-22124). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30539).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct[count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.23'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30556"
                           test="cda:consumable/cda:manufacturedProduct[count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.23'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedProduct SHALL contain exactly one [1..1] templateId (CONF:1129-30556) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.23" (CONF:1129-30557).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M186"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M186"/>
   <xsl:template match="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.162' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M187">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.162-2014-12-01-errors-CL"
                  context="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.162' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M187"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M187"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.118' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M188">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.118-2014-12-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.118' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.19'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30519"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.19'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30519) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.19" (CONF:1129-30520).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21786" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1129-21786).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21787" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-21787).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21789" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-21789).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21791" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1129-21791).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd or @nullFlavor='UNK'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21779-c" test="@negationInd or @nullFlavor='UNK'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If it is not known whether the target statement was contraindicated, the value of @nullFlavor SHALL be UNK. If the value of @nullFlavor is set to UNK then the value of @negationInd SHALL NOT be set (CONF:1129-21779).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21780" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-21780).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21781" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-21781).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd or @nullFlavor='UNK'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21783-c" test="@negationInd or @nullFlavor='UNK'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the target statement was contraindicated, the value of @negationInd SHALL be false. If the target statement was not contraindicated (i.e., ok to proceed with the treatment specified by the target statement), the value of @negationInd SHALL be true. If the value of @negationInd is set then the value of @nullFlavor SHALL NOT be set (CONF:1129-21783).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21788" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:1129-21788).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21790" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:1129-21790).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='410536001']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21792" test="cda:value[@xsi:type='CD'][@code='410536001']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="410536001" Contraindicated (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:1129-21792).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.118'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21785"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.118'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-21785) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.118" (CONF:1129-28109). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30521).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21793" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008) (CONF:1129-21793).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30604" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:1129-30604).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M188"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M188"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.118' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M189">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.118-2014-12-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.118' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M189"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M189"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.183' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M190">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.183-2014-12-01-errors"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.183' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22260" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] component (CONF:1129-22260).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.183'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22254"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.183'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-22254) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.183" (CONF:1129-28110). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30293).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22257" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-22257).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.162' and @extension='2014-12-01']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30432"
                           test="cda:component[count(cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.162' and @extension='2014-12-01']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such components SHALL contain exactly one [1..1] Skin Preparation Clinical Statement (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.162:2014-12-01) (CONF:1129-30432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='CLUSTER'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22252" test="@classCode='CLUSTER'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="CLUSTER" Cluster (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-22252).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22253" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-22253).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22258" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:1129-22258).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component/cda:substanceAdministration[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.162']/cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial/cda:code[@code or (@originalText and @nullText='OTH')]) &gt;= 1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22262-c"
                           test="count(cda:component/cda:substanceAdministration[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.162']/cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial/cda:code[@code or (@originalText and @nullText='OTH')]) &gt;= 1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>A component containing a Skin Preparation Clinical Statement SHALL be present for each skin-preparation solution required by the NHSN protocol. One additional such component element MAY be present recording an uncoded (text) skin-preparation solution (CONF:1129-22262).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M190"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M190"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.183' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M191">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.183-2014-12-01-errors-CL"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.183' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M191"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M191"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.179' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M192">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.179-2014-12-01-errors"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.179' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:component[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.130']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22092"
                           test="count(cda:component[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.130']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:1129-22092) such that it SHALL contain exactly one [1..1] Hand Hygiene Performed Clinical Statement (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.130) (CONF:1129-23057).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.179'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22088"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.179'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-22088) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.179" (CONF:1129-22089). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30279).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22090" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1129-22090).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22091" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-22091).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component[count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.183' and @extension='2014-12-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22093"
                           test="count(cda:component[count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.183' and @extension='2014-12-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:1129-22093) such that it SHALL contain exactly one [1..1] Skin-Preparation Solutions Applied Organizer (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.183:2014-12-01) (CONF:1129-30426).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.167']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22094"
                           test="count(cda:component[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.167']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:1129-22094) such that it SHALL contain exactly one [1..1] Sterile Barriers Applied Clinical Statement (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.167) (CONF:1129-23059).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='CLUSTER'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22086" test="@classCode='CLUSTER'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="CLUSTER" Cluster (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-22086).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22087" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-22087).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22733" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-22733).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-23060" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:1129-23060).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M192"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M192"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.179' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M193">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.179-2014-12-01-errors-CL"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.179' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M193"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M193"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.116' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M194">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.116-2014-12-01-errors"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.116' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.12'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30516"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.12'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30516) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.12" (CONF:1129-30517).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22966" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1129-22966).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22968" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008) (CONF:1129-22968).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.116'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22965"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.116'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-22965) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.116" (CONF:1129-28111). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30518).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:sequenceNumber[@value='1'])=1][count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.179' and @extension='2014-12-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22008"
                           test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:sequenceNumber[@value='1'])=1][count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.179' and @extension='2014-12-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:1129-22008) such that it SHALL contain exactly one [1..1] sequenceNumber (CONF:1129-22011). This sequenceNumber SHALL contain exactly one [1..1] @value="1" (CONF:1129-22012). SHALL contain exactly one [1..1] Central-Line Insertion Preparation Organizer (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.179:2014-12-01) (CONF:1129-30425). SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:1129-22009).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:sequenceNumber[@value='2'])=1][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.163']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22013"
                           test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:sequenceNumber[@value='2'])=1][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.163']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:1129-22013) such that it SHALL contain exactly one [1..1] sequenceNumber (CONF:1129-22016). This sequenceNumber SHALL contain exactly one [1..1] @value="2" (CONF:1129-22017). SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:1129-22014). SHALL contain exactly one [1..1] Solutions Dried Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.163) (CONF:1129-22015).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22018" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-22018).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ACT'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22005" test="@classCode='ACT'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ACT" Act (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-22005).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22006" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-22006).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22007" test="@negationInd='false'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:1129-22007).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='3108-8' and @codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22019"
                           test="cda:code[@code='3108-8' and @codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="3108-8" Central line insertion practice (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277 STATIC) (CONF:1129-22019).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M194"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M194"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.116' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M195">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.116-2014-12-01-errors-CL"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.116' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M195"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M195"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.34' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M196">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.34-2014-12-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.34' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.116' and @extension='2014-12-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22275"
                           test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.116' and @extension='2014-12-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:1129-22275) such that it SHALL contain exactly one [1..1] Central-Line Insertion Practice Clinical Statement (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.116:2014-12-01) (CONF:1129-30430).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22273" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-22273).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.34'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22277"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.34'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-22277) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.34" (CONF:1129-28199). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30288).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51898-5']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22274" test="cda:code[@code='51898-5']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51898-5" Risk Factors Section (CONF:1129-22274).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28198" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:1129-28198).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M196"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M196"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.34' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M197">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.34-2014-12-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.34' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M197"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M197"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.36' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M198">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.36-2014-12-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.36' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22415"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22415) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.27" (CONF:86-22416).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22417" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22417).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22418" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22418).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22419" test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain at least one [1..*] id (CONF:86-22419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22420" test="cda:recordTarget/cda:patientRole/cda:id[@root]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @root (CONF:86-22420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22421" test="cda:recordTarget/cda:patientRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @extension (CONF:86-22421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22422" test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] patient (CONF:86-22422).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22424"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] administrativeGenderCode (CONF:86-22424).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22425"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This administrativeGenderCode SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet Administrative Gender (HL7 V3) urn:oid:2.16.840.1.113883.1.11.1 STATIC (CONF:86-22425).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22426"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] birthTime (CONF:86-22426).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22427"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This birthTime SHALL contain exactly one [1..1] @value (CONF:86-22427).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.2.1'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30543"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.2.1'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30543) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.2.2.1" (CONF:1129-30544).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:componentOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22555" test="count(cda:componentOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] componentOf (CONF:1129-22555).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf[count(cda:encompassingEncounter)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22556" test="cda:componentOf[count(cda:encompassingEncounter)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This componentOf SHALL contain exactly one [1..1] encompassingEncounter (CONF:1129-22556).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22557"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] effectiveTime (CONF:1129-22557).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22558"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:1129-22558).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22560"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] location (CONF:1129-22560).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22561"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This location SHALL contain exactly one [1..1] healthCareFacility (CONF:1129-22561).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22562"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] id (CONF:1129-22562).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22567" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:1129-22567).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22568" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:1129-22568).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.34' and @extension='2014-12-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22569"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.34' and @extension='2014-12-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:1129-22569) such that it SHALL contain exactly one [1..1] Infection Risk Factors Section in a CLIP Report (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.34:2014-12-01) (CONF:1129-30424).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.42']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22571"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.42']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:1129-22571) such that it SHALL contain exactly one [1..1] Procedure Details Section in a CLIP Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.42) (CONF:1129-22572).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[count(self::node()[@nullFlavor='NI'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22559"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[count(self::node()[@nullFlavor='NI'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @nullFlavor="NI" No information (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008 STATIC) (CONF:1129-22559).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22563"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:1129-22563).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22564"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @extension (CONF:1129-22564).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22565"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNHealthcareServiceLocationCode urn:oid:2.16.840.1.113883.13.19 DYNAMIC (CONF:1129-22565).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.36'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22553"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.36'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-22553) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.36" (CONF:1129-22554). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30284).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M198"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M198"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.36' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M199">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.36-2014-12-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.36' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M199"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M199"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.217' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M200">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.217-2014-12-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.217' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28202" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-28202).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28203" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-28203).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28204" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1129-28204).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28205" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-28205).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28206" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-28206).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28207" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:1129-28207).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[count(self::node()[@code='ASSERTION'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28210" test="cda:code[count(self::node()[@code='ASSERTION'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:1129-28210).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28211" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:1129-28211).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='6140-8']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28212" test="cda:value[@xsi:type='CD'][@code='6140-8']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="6140-8" Antimicrobial coated catheter used (CONF:1129-28212).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.217'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30485"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.217'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30485) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.217" (CONF:1129-30486). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30487).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30597" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:1129-30597).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30607"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1129-30607).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M200"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M200"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.217' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M201">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.217-2014-12-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.217' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M201"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M201"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.151' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M202">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.151-2014-12-01-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.151' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:id) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21705" test="count(cda:id) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] id (CONF:1129-21705).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21707" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-21707).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21709" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:1129-21709).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.49'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30488"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.49'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30488) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.49" (CONF:1129-30489).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21703" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-21703).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21704" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-21704).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21706" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-21706).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='IMP' and @codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21708"
                           test="cda:code[@code='IMP' and @codeSystem='2.16.840.1.113883.5.4']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="IMP" Inpatient encounter (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4 STATIC) (CONF:1129-21708).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:effectiveTime/cda:high) or cda:effectiveTime/cda:high[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21711"
                           test="not(cda:effectiveTime/cda:high) or cda:effectiveTime/cda:high[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The high, if present, SHALL contain exactly one [1..1] @value (CONF:1129-21711).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.151'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-21714"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.151'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-21714) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.151" (CONF:1129-21715). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30275).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M202"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M202"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.151' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M203">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.151-2014-12-01-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.151' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M203"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M203"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.218' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M204">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.218-2014-12-01-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.218' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:id) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28222" test="count(cda:id) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] id (CONF:1129-28222).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28223" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-28223).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28224" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:1129-28224).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.49'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30491"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.49'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30491) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.49" (CONF:1129-30492).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28227" test="count(cda:participant)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:1129-28227).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[count(cda:participantRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28228" test="cda:participant[count(cda:participantRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] participantRole (CONF:1129-28228).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28229" test="cda:participant/cda:participantRole[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] code (CONF:1129-28229).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28230" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-28230).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='IMP']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28231" test="cda:code[@code='IMP']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="IMP" inpatient encounter (CONF:1129-28231).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28234" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-28234).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28235" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-28235).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[@classCode='SDLOC']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28236"
                           test="cda:participant/cda:participantRole[@classCode='SDLOC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" Service Delivery Location (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41) (CONF:1129-28236).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:code[@code]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28238" test="cda:participant/cda:participantRole/cda:code[@code]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet NHSNPreviousFacility urn:oid:2.16.840.1.114222.4.11.7238 DYNAMIC (CONF:1129-28238).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[@typeCode='LOC']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28239" test="cda:participant[@typeCode='LOC']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90) (CONF:1129-28239).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30255" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-30255).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30464" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:1129-30464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.218'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28226"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.218'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-28226) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.218" (CONF:1129-28233). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30290).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M204"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M204"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.218' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M205">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.218-2014-12-01-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.218' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M205"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M205"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.44' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M206">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.44-2014-12-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.44' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.151' and @extension='2014-12-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22368"
                           test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.151' and @extension='2014-12-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:1129-22368) such that it SHALL contain exactly one [1..1] Prior Discharge Encounter (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.151:2014-12-01) (CONF:1129-30422).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.44'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22364"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.44'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-22364) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.44" (CONF:1129-22365). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30283).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22366" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-22366).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='46240-8']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22367" test="cda:code[@code='46240-8']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="46240-8" History of Encounters (CONF:1129-22367).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.228' and @extension='2014-12-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-28240"
                           test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.228' and @extension='2014-12-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:1129-28240) such that it SHALL contain exactly one [1..1] Other Facility Discharge Act (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.228:2014-12-01) (CONF:1129-30588).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.227' and @extension='2014-12-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30273"
                           test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.227' and @extension='2014-12-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:1129-30273) such that it SHALL contain exactly one [1..1] Last Physical Overnight Location Act (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.227:2014-12-01) (CONF:1129-30575).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30599" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:1129-30599).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M206"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M206"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.44' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M207">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.44-2014-12-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.44' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M207"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M207"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.38' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M208">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.38-2014-12-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.38' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22415"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22415) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.27" (CONF:86-22416).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22417" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22417).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22418" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22418).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22419" test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain at least one [1..*] id (CONF:86-22419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22420" test="cda:recordTarget/cda:patientRole/cda:id[@root]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @root (CONF:86-22420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22421" test="cda:recordTarget/cda:patientRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @extension (CONF:86-22421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22422" test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] patient (CONF:86-22422).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22424"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] administrativeGenderCode (CONF:86-22424).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22425"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This administrativeGenderCode SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet Administrative Gender (HL7 V3) urn:oid:2.16.840.1.113883.1.11.1 STATIC (CONF:86-22425).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22426"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] birthTime (CONF:86-22426).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22427"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This birthTime SHALL contain exactly one [1..1] @value (CONF:86-22427).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.2.1'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30547"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.2.1'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30547) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.2.2.1" (CONF:1129-30548).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:componentOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22599" test="count(cda:componentOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] componentOf (CONF:1129-22599).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf[count(cda:encompassingEncounter)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22600" test="cda:componentOf[count(cda:encompassingEncounter)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This componentOf SHALL contain exactly one [1..1] encompassingEncounter (CONF:1129-22600).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22603"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] effectiveTime (CONF:1129-22603).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22604"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:1129-22604).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22606"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] location (CONF:1129-22606).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22607"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This location SHALL contain exactly one [1..1] healthCareFacility (CONF:1129-22607).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22608"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] id (CONF:1129-22608).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22610" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:1129-22610).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22611" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:1129-22611).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.46' and @extension='2014-12-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22612"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.46' and @extension='2014-12-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:1129-22612) such that it SHALL contain exactly one [1..1] Findings Section in a LIO Report (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.46:2014-12-01) (CONF:1129-30420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.44' and @extension='2014-12-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22614"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.44' and @extension='2014-12-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:1129-22614) such that it SHALL contain exactly one [1..1] Encounters Section in a LIO Report (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.44:2014-12-01) (CONF:1129-30421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.1']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22601"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.1']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNEncounterTypeCode urn:oid:2.16.840.1.113883.13.1 STATIC (CONF:1129-22601).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-23306-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If encounter type is IMP, effectiveTime/low/@value is required; if encounter type is AMB, effectiveTime/low/@value is required (use (copy) Date Specimen Collected) (CONF:1129-23306).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-23360-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of the admission date SHALL NOT be earlier than January 1, 1986; SHALL NOT be earlier than the date of birth; and SHALL NOT be later than the event date (CONF:1129-23360).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22609"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:1129-22609).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.38'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22597"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.38'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-22597) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.38" (CONF:1129-22598). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30286).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M208"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M208"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.38' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M209">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.38-2014-12-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.38' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M209"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M209"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.149' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M210">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.149-2014-12-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.149' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19821" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-19821).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19823" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-19823).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19825" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1129-19825).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19827-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the value of @negationInd is 'false' (CONF:1129-19827).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19833-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the value of @negationInd is ‘true’ (CONF:1129-19833).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30528"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30528) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:1129-30529).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19839" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1129-19839).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19818" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-19818).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19819" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-19819).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19820" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:1129-19820).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19822" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:1129-19822).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19824" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:1129-19824).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='1955-4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19826" test="cda:value[@xsi:type='CD'][@code='1955-4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="1955-4" Positive blood culture (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277 STATIC) (CONF:1129-19826).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(@negationInd = 'false') or (@negationInd = 'true' and not(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:templateId[@root='2.16.840.1.113883.10.20.5.5.28']))"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19834-c"
                           test="(@negationInd = 'false') or (@negationInd = 'true' and not(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:templateId[@root='2.16.840.1.113883.10.20.5.5.28']))"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The report *SHALL NOT* contain a Findings Section (CONF:1129-19834).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22781" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-22781).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19832-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The report *SHALL* contain a Findings Section (CONF:1129-19832).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.149'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19837"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.149'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-19837) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.149" (CONF:1129-19838). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30530).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30605" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:1129-30605).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M210"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M210"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.149' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M211">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.149-2014-12-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.149' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M211"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M211"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.220' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M212">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.220-2014-12-01-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.220' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:id) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30256" test="count(cda:id) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] id (CONF:1129-30256).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.10.20.5.9.3']/voc:code/@value or @nullFlavor])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30257"
                           test="count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.10.20.5.9.3']/voc:code/@value or @nullFlavor])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNLastLocationEncounterTypeCode urn:oid:2.16.840.1.113883.10.20.5.9.3 STATIC 2014-11-01 (CONF:1129-30257).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30258" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:1129-30258).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.49'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30493"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.49'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30493) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.49" (CONF:1129-30494).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant[count(cda:participantRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30261"
                           test="not(cda:participant) or cda:participant[count(cda:participantRole)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The participant, if present, SHALL contain exactly one [1..1] participantRole (CONF:1129-30261).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30262"
                           test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] code (CONF:1129-30262).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30263" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-30263).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30265" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-30265).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[@classCode='SDLOC']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30269"
                           test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[@classCode='SDLOC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" Service Delivery Location (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41) (CONF:1129-30269).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant[@typeCode='LOC']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30270"
                           test="not(cda:participant) or cda:participant[@typeCode='LOC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The participant, if present, SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90) (CONF:1129-30270).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30271" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-30271).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30272" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-30272).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole/cda:code) or cda:participant/cda:participantRole/cda:code[@code]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30482"
                           test="not(cda:participant/cda:participantRole/cda:code) or cda:participant/cda:participantRole/cda:code[@code]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet NHSNPreviousPatientLocation urn:oid:2.16.840.1.114222.4.11.7233 DYNAMIC (CONF:1129-30482).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.220'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30495"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.220'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30495) such that it SHALL contain zero or one [0..1] @root="2.16.840.1.113883.10.20.5.6.220" (CONF:1129-30496). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30497).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M212"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M212"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.220' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M213">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.220-2014-12-01-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.220' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M213"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M213"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.219' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M214">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.219-2014-12-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.219' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30296" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-30296).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30297" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-30297).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30299" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:1129-30299).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30300" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:1129-30300).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='2331-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30304" test="cda:code[@code='2331-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="2331-7" Where was the positive blood culture collected (CONF:1129-30304).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30305" test="cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1129-30305).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30306" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:1129-30306).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30315" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHOULD be selected from ValueSet NHSNBloodCollectionLocation urn:oid:2.16.840.1.114222.4.11.7237 DYNAMIC (CONF:1129-30315).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.219'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30504"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.219'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30504) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.219" (CONF:1129-30505). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30506).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M214"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M214"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.219' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M215">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.219-2014-12-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.219' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M215"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M215"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.221' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M216">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.221-2014-12-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.221' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30318" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-30318).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30320" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-30320).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='2029-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30323" test="cda:code[@code='2029-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="2029-7" C. difficile primary testing method used most often for this quarter (CONF:1129-30323).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30326" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:1129-30326).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30327" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-30327).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30328" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-30328).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30329" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHOULD be selected from ValueSet NHSNCdiffTestMethod urn:oid:2.16.840.1.114222.4.11.7242 DYNAMIC (CONF:1129-30329).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.221'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30534"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.221'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30534) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.221" (CONF:1129-30535). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30536).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M216"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M216"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.221' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M217">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.221-2014-12-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.221' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M217"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M217"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.49' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M218">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.49-2014-12-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.49' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.193']])=1]) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22884"
                           test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.193']])=1]) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:1129-22884) such that it SHALL contain exactly one [1..1] Summary Encounter (POM) (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.193) (CONF:1129-22885).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.49'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22880"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.49'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-22880) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.49" (CONF:1129-22881). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30477).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22882" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-22882).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51900-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22883" test="cda:code[@code='51900-9']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51900-9" Summary Data Section (CONF:1129-22883).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30602" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:1129-30602).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M218"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M218"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.49' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M219">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.49-2014-12-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.49' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M219"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M219"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.222' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M220">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.222-2014-12-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.222' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30336" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-30336).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30337" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-30337).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30338" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1129-30338).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30345" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:1129-30345).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30346" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:1129-30346).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='2037-0']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30347" test="cda:value[@xsi:type='CD'][@code='2037-0']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="2037-0" Bacterial isolate tested for carbapenemase (CONF:1129-30347).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30353" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-30353).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30354" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-30354).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30437"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1129-30437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.222'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30501"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.222'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30501) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.222" (CONF:1129-30502). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30503).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30603" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:1129-30603).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M220"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M220"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.222' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M221">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.222-2014-12-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.222' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M221"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M221"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.223' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M222">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.223-2014-12-01-errors"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.223' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:component[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.224' and @extension='2014-12-01']])=1]) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30361"
                           test="count(cda:component[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.224' and @extension='2014-12-01']])=1]) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] component (CONF:1129-30361) such that it SHALL contain exactly one [1..1] Carbapenemase Test Observation (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.224:2014-12-01) (CONF:1129-30366). SHALL contain exactly one [1..1] @typeCode="COMP" (CONF:1129-30391).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.1'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30362"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.1'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30362) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.1" (CONF:1129-30369).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30363" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1129-30363).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30364" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-30364).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30365" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-30365).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='CLUSTER'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30367" test="@classCode='CLUSTER'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="CLUSTER" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:1129-30367).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30368" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:1129-30368).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30370" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-30370).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='18725-2']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30371" test="cda:code[@code='18725-2']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="18725-2" Microbiology studies (CONF:1129-30371).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30372" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:1129-30372).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30374" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:1129-30374).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.223'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30510"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.223'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30510) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.223" (CONF:1129-30511). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30512).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M222"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M222"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.223' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M223">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.223-2014-12-01-errors-CL"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.223' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M223"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M223"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.224' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M224">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.224-2014-12-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.224' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30375"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30375) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.2" (CONF:1129-30381).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30376" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1129-30376).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30377" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-30377).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30378" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:1129-30378).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30379" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:1129-30379).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30380" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:1129-30380).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30382" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-30382).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30383" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code, which SHOULD be selected from ValueSet NHSNCarbaTestMethod urn:oid:2.16.840.1.114222.4.11.7240 STATIC 2014-11-10 (CONF:1129-30383).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30384" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CONF:1129-30384).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30385" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-30385).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30386" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1129-30386).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30388" test="cda:value[@xsi:type='CD'][@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-30388).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.224'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30507"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.224'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30507) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.224" (CONF:1129-30508). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30509).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M224"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M224"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.224' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M225">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.224-2014-12-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.224' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M225"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M225"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.225' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M226">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.225-2014-12-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.225' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30393" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-30393).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30394" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-30394).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30395" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1129-30395).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30396"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30396) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.2" (CONF:1129-30405).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30397" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1129-30397).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30402" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:1129-30402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30403" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:1129-30403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='2048-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30404" test="cda:value[@xsi:type='CD'][@code='2048-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="2048-7" Isolate tested positive for carbapenemase (CONF:1129-30404).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30407" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-30407).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30410" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-30410).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30411" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-30411).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30441"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1129-30441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.225'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30531"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.225'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30531) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.225" (CONF:1129-30532). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30533).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30589" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:1129-30589).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30590" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008) (CONF:1129-30590).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30606" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:1129-30606).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M226"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M226"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.225' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M227">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.225-2014-12-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.225' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M227"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M227"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.146' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M228">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.146-2014-12-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.146' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.165']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19875"
                           test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.165']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:1129-19875) such that it SHALL contain exactly one [1..1] Specimen Collection Procedure (LIO) (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.165) (CONF:1129-19876). SHALL contain exactly one [1..1] @typeCode="COMP" (CONF:1129-30434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19869" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-19869).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19871" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-19871).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30525"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30525) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.2" (CONF:1129-30526).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19881" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1129-19881).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19867" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-19867).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19868" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-19868).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='41852-5']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19870" test="cda:code[@code='41852-5']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="41852-5" Microorganism identified (CONF:1129-19870).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19872" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:1129-19872).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19873" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHALL be selected from ValueSet NHSNSignificantPathogenCode urn:oid:2.16.840.1.114222.4.11.3194 DYNAMIC (CONF:1129-19873).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22774" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-22774).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22732" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:1129-22732).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30436" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:1129-30436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.146'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-19879"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.146'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-19879) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.146" (CONF:1129-19880). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30527).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M228"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M228"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.146' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M229">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.146-2014-12-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.146' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M229"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M229"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.46' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M230">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.46-2014-12-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.46' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.146' and @extension='2014-12-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22382"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.146' and @extension='2014-12-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:1129-22382) such that it SHALL contain exactly one [1..1] Pathogen Identified Observation (LIO) (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.146:2014-12-01) (CONF:1129-30419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.46'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22378"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.46'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-22378) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.46" (CONF:1129-22379). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22380" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-22380).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='18769-0']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-22381" test="cda:code[@code='18769-0']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="18769-0" Findings Section (CONF:1129-22381).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30600" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:1129-30600).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M230"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M230"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.46' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M231">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.46-2014-12-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.46' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M231"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M231"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.226' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M232">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.226-2014-12-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.226' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30442"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30442) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.2" (CONF:1129-30448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30443" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:1129-30443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30444" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1129-30444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30445" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:1129-30445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30447" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD", where the code SHOULD be selected from ValueSet NHSNCarbaDetectType urn:oid:2.16.840.1.114222.4.11.7241 DYNAMIC (CONF:1129-30447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30450" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-30450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30451" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CONF:1129-30451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30452" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:1129-30452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30453" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:1129-30453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30454" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:1129-30454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30459" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-30459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='2049-5']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30460" test="cda:code[@code='2049-5']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="2049-5" Carbapenemase Type Identified (CONF:1129-30460).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30461" test="cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1129-30461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.226'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30513"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.226'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30513) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.226" (CONF:1129-30514). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30515).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M232"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M232"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.226' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M233">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.226-2014-12-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.226' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M233"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M233"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.227' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M234">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.227-2014-12-01-errors"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.227' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.227'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30560"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.227'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30560) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.227" (CONF:1129-30567). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30570).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30562" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-30562).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ACT'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30564" test="@classCode='ACT'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ACT" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-30564).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30565" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-30565).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='3002-3']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30569" test="cda:code[@code='3002-3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="3002-3" Last physical overnight location of patient immediately prior to arrival into facility (CONF:1129-30569).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30571" test="cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1129-30571).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='COMP']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30573"
                           test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='COMP']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] @typeCode="COMP" Component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002) (CONF:1129-30573).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.220' and @extension='2014-12-01']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30574"
                           test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.220' and @extension='2014-12-01']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] Last Physical Overnight Location Encounter (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.220:2014-12-01) (CONF:1129-30574).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M234"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M234"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.227' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M235">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.227-2014-12-01-errors-CL"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.227' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M235"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M235"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.228' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M236">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.228-2014-12-01-errors"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.228' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.228'][@extension='2014-12-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30577"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.228'][@extension='2014-12-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1129-30577) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.228" (CONF:1129-30581). SHALL contain exactly one [1..1] @extension="2014-12-01" (CONF:1129-30582).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30578" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1129-30578).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.218' and @extension='2014-12-01']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30579"
                           test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.218' and @extension='2014-12-01']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] Other Facility Discharge Encounter (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.218:2014-12-01) (CONF:1129-30579).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='3004-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30583" test="cda:code[@code='3004-9']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="3004-9" Patient discharged from another facility in the past four weeks (CONF:1129-30583).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30584" test="cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1129-30584).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ACT'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30585" test="@classCode='ACT'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ACT" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1129-30585).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30586" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1129-30586).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='COMP']"/>
         <xsl:otherwise>
            <failed-assert id="a-1129-30587"
                           test="not(cda:entryRelationship) or cda:entryRelationship[@typeCode='COMP']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] @typeCode="COMP" Component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002) (CONF:1129-30587).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M236"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M236"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.228' and @extension='2014-12-01']]"
                 priority="3999"
                 mode="M237">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.228-2014-12-01-errors-CL"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.228' and @extension='2014-12-01']]"
                  role=""/>
      <xsl:apply-templates mode="M237"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M237"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.44' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M238">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.44-2015-04-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.44' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22431"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22431) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.28" (CONF:86-22432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22433" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22434" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22435" test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] id (CONF:86-22435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22436"
                           test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" not applicable (CONF:86-22436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22437"
                           test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22437) such that it SHALL contain exactly one [1..1] @typeCode="SBJ" Subject (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22438). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22439). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22440). This associatedEntity SHALL contain exactly one [1..1] @classCode="PRS" Person (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22441). This associatedEntity SHALL contain exactly one [1..1] code (CONF:86-22442). This code SHALL contain exactly one [1..1] @code="389109008" Group (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-22443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22444"
                           test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22444) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22445). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22446). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22447). This associatedEntity SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-22448). This associatedEntity SHALL contain exactly one [1..1] id (CONF:86-22449). This id SHALL contain exactly one [1..1] @root (CONF:86-22450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22451" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:86-22451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22452" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:86-22452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22453" test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] @classCode="CASE" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22454"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNPopulationSummaryReportTypeCode urn:oid:2.16.840.1.114222.4.11.3595 STATIC (CONF:86-22454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22456"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] effectiveTime (CONF:86-22456).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22457"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-22457).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22458"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:86-22458).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22459-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The author SHALL represent the software forming the message (CONF:86-22459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-28303"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1181-28303) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.2" (CONF:1181-28304).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22901" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:1181-22901).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22902" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:1181-22902).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22903"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code (CONF:1181-22903).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22906" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:1181-22906).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22907" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:1181-22907).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22908"
                           test="cda:component/cda:structuredBody[count(cda:component)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:1181-22908).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.44'][@extension='2015-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22898"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.44'][@extension='2015-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1181-22898) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.44" (CONF:1181-22899). SHALL contain exactly one [1..1] @extension="2015-04-01" (CONF:1181-30543).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody/cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.51' and @extension='2015-04-01']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22909"
                           test="cda:component/cda:structuredBody/cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.51' and @extension='2015-04-01']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] Summary Data Section (AUP) (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.51:2015-04-01) (CONF:1181-22909).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title[text()='Antimicrobial Use, Pharmacy Option (AUP) Summary Report'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22900"
                           test="count(cda:title[text()='Antimicrobial Use, Pharmacy Option (AUP) Summary Report'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title="Antimicrobial Use, Pharmacy Option (AUP) Summary Report" (CONF:1181-22900).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@code='1887-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22904"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@code='1887-9']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="1887-9" Summary data reporting antimicrobial usage (CONF:1181-22904).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22905"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1181-22905).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M238"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M238"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.44' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M239">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.44-2015-04-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.44' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M239"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M239"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.46' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M240">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.46-2015-04-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.46' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22431"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22431) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.28" (CONF:86-22432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22433" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22434" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22435" test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] id (CONF:86-22435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22436"
                           test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" not applicable (CONF:86-22436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22437"
                           test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22437) such that it SHALL contain exactly one [1..1] @typeCode="SBJ" Subject (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22438). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22439). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22440). This associatedEntity SHALL contain exactly one [1..1] @classCode="PRS" Person (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22441). This associatedEntity SHALL contain exactly one [1..1] code (CONF:86-22442). This code SHALL contain exactly one [1..1] @code="389109008" Group (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-22443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22444"
                           test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22444) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22445). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22446). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22447). This associatedEntity SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-22448). This associatedEntity SHALL contain exactly one [1..1] id (CONF:86-22449). This id SHALL contain exactly one [1..1] @root (CONF:86-22450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22451" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:86-22451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22452" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:86-22452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22453" test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] @classCode="CASE" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22454"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNPopulationSummaryReportTypeCode urn:oid:2.16.840.1.114222.4.11.3595 STATIC (CONF:86-22454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22456"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] effectiveTime (CONF:86-22456).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22457"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-22457).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22458"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:86-22458).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22459-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The author SHALL represent the software forming the message (CONF:86-22459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-28301"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1181-28301) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.2" (CONF:1181-28302).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22972" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:1181-22972).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22973" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:1181-22973).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22974"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code (CONF:1181-22974).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22977" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:1181-22977).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22978" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:1181-22978).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22979"
                           test="cda:component/cda:structuredBody[count(cda:component)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:1181-22979).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.46'][@extension='2015-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22969"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.46'][@extension='2015-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1181-22969) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.46" (CONF:1181-2970). SHALL contain exactly one [1..1] @extension="2015-04-01" (CONF:1181-30544).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody/cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.52' and @extension='2015-04-01']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22980"
                           test="cda:component/cda:structuredBody/cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.52' and @extension='2015-04-01']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] Summary Data Section (ARO) (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.52:2015-04-01) (CONF:1181-22980).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title[text()='Denominator for Antimicrobial Resistance Option (ARO)'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22971"
                           test="count(cda:title[text()='Denominator for Antimicrobial Resistance Option (ARO)'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title="Denominator for Antimicrobial Resistance Option (ARO)" (CONF:1181-22971).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@code='2410-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22975"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@code='2410-9']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="2410-9" Summary data reporting antimicrobial resistance patterns at a facility (CONF:1181-22975).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22976"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1181-22976).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M240"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M240"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.46' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M241">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.46-2015-04-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.46' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M241"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M241"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.229' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M242">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.229-2015-04-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.229' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.229'][@extension='2015-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-30545"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.229'][@extension='2015-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1181-30545) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.229" (CONF:1181-30551). SHALL contain exactly one [1..1] @extension="2015-04-01" (CONF:1181-30561).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-30546" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1181-30546).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-30547" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1181-30547).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-30548" test="count(cda:value)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value (CONF:1181-30548).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-30549" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1181-30549).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-30550" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1181-30550).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-30559" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:1181-30559).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(cda:value/@xsi:type='PQ' and cda:value/@unit='d') or (cda:value/@xsi:type='INT') or (cda:value/@xsi:type='CD')"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-30560-c"
                           test="(cda:value/@xsi:type='PQ' and cda:value/@unit='d') or (cda:value/@xsi:type='INT') or (cda:value/@xsi:type='CD')"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the observation reports a number of days, the value of value/xsi:type SHALL be PQ and the value of value/@unit SHALL be d. If the observation reports a number of patients, episodes or events the value of value/@xsi:type SHALL be INT. If the value is a code, the value of value/@xsi:type SHALL be CD (CONF:1181-30560).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M242"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M242"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.229' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M243">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.229-2015-04-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.229' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M243"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M243"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.197' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M244">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.197-2015-04-01-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.197' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23006" test="count(cda:entryRelationship) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entryRelationship (CONF:1181-23006).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.197'][@extension='2015-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22997"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.197'][@extension='2015-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1181-22997) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.197" (CONF:1181-22998). SHALL contain exactly one [1..1] @extension="2015-04-01" (CONF:1181-30562).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22999"
                           test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:1181-22999) such that it SHALL contain exactly one [1..1] participantRole (CONF:1181-23001). This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" Service Delivery Location (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:1181-23002). SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:1181-23000).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.229' and @extension='2015-04-01']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23008"
                           test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.229' and @extension='2015-04-01']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] Summary Data Observation (AU/AR) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.229:2015-04-01) (CONF:1181-23008).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22995" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1181-22995).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-22996" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1181-22996).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(cda:participant/cda:participantRole[cda:id[@root and @extension] and cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value]])  or cda:participant/cda:participantRole/cda:id[@root and not(@extension)] or (cda:participant/cda:participantRole/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value] and cda:participant/cda:participantRole/cda:scopingEntity[@classCode='PLC'][cda:id[@root]])"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23003-c"
                           test="(cda:participant/cda:participantRole[cda:id[@root and @extension] and cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value]]) or cda:participant/cda:participantRole/cda:id[@root and not(@extension)] or (cda:participant/cda:participantRole/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value] and cda:participant/cda:participantRole/cda:scopingEntity[@classCode='PLC'][cda:id[@root]])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If recording data from an in-facility location, the participantRole element shall contain an id element with both @root and @extension, and a code element where the value is selected from ValueSet 2.16.840.1.113883.13.19NHSNHealthcareServiceLocationCode DYNAMIC, recording the type of location (CONF:1181-23003).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23004-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Or, if recording data from the whole facility, the participantRole element shall contain an id element with @root (CONF:1181-23004).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23005-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Or, if recording data from a specialized subset of a facility, the participantRole element shall contain a code element where the value is selected from ValueSet 2.16.840.1.113883.13.19 NHSNHealthcareServiceLocationCode DYNAMIC, recording the type of location, and a scopingEntity element where the value of @classCode is “PLC” and id/@root is present (CONF:1181-23005).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[@typeCode='COMP']"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23007" test="cda:entryRelationship[@typeCode='COMP']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:1181-23007).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23011-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This Summary Encounter SHALL contain a Summary Data Observation (AU/AR) that records Number of Patient-present Days for the reporting location (CONF:1181-23011).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23012-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the reporting location is facility-wide inpatient units, this Summary Encounter SHALL contain a second Summary Data Observation (AU/AR) that records Number of Admissions (CONF:1181-23012).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M244"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M244"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.197' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M245">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.197-2015-04-01-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.197' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M245"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M245"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.198' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M246">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.198-2015-04-01-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.198' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.229' and @extension='2015-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23036"
                           test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.229' and @extension='2015-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:1181-23036) such that it SHALL contain exactly one [1..1] Summary Data Observation (AU/AR) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.229:2015-04-01) (CONF:1181-23038). SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:1181-23037).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.198'][@extension='2015-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23021"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.198'][@extension='2015-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1181-23021) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.198" (CONF:1181-23022). SHALL contain exactly one [1..1] @extension="2015-04-01" (CONF:1181-30563).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23023"
                           test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:1181-23023) such that it SHALL contain exactly one [1..1] participantRole (CONF:1181-23025). This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" Service Delivery Location (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:1181-23026). SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:1181-23024).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='CSM'][count(cda:participantRole[count(cda:code)=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23030"
                           test="count(cda:participant[@typeCode='CSM'][count(cda:participantRole[count(cda:code)=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:1181-23030) such that it SHALL contain exactly one [1..1] participantRole (CONF:1181-23032). This participantRole SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNAntimicrobialAgentAURPCode urn:oid:2.16.840.1.114222.4.11.3360 DYNAMIC (CONF:1181-23034). SHALL contain exactly one [1..1] @typeCode="CSM" Consumable (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90) (CONF:1181-23031).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.194']])=1])[. &gt;= 4] &lt;= 4"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23040"
                           test="count(cda:entryRelationship[@typeCode='COMP'][count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.194']])=1])[. &gt;= 4] &lt;= 4"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain [4..4] entryRelationship (CONF:1181-23040) such that it SHALL contain exactly one [1..1] @typeCode="COMP" (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002) (CONF:1181-23041). SHALL contain exactly one [1..1] Summary Data Observation (AUP) (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.194) (CONF:1181-23042).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23019" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1181-23019).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23020" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1181-23020).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="(cda:participant/cda:participantRole[cda:id[@root and @extension] and cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value]])  or cda:participant/cda:participantRole/cda:id[@root and not(@extension)] or (cda:participant/cda:participantRole/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value] and cda:participant/cda:participantRole/cda:scopingEntity[@classCode='PLC'][cda:id[@root]])"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23027-c"
                           test="(cda:participant/cda:participantRole[cda:id[@root and @extension] and cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value]]) or cda:participant/cda:participantRole/cda:id[@root and not(@extension)] or (cda:participant/cda:participantRole/cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value] and cda:participant/cda:participantRole/cda:scopingEntity[@classCode='PLC'][cda:id[@root]])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If recording data from an in-facility location, the participantRole element shall contain an id element with both @root and @extension, and a code element where the value is selected from ValueSet 2.16.840.1.113883.13.19NHSNHealthcareServiceLocationCode DYNAMIC, recording the type of location (CONF:1181-23027).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23028-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Or, if recording data from the whole facility, the participantRole element shall contain an id element with @root (CONF:1181-23028).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23029-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Or, if recording data from a specialized subset of a facility, the participantRole element shall contain a code element where the value is selected from ValueSet 2.16.840.1.113883.13.19 NHSNHealthcareServiceLocationCode DYNAMIC, recording the type of location, and a scopingEntity element where the value of @classCode is “PLC” and id/@root is present (CONF:1181-23029).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23039-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This Summary Data Observation (AU/AR) records Number of Therapy Days for the antimicrobial (this is not a simple total of the stratified data; consult the NHSN protocol for the calculation) (CONF:1181-23039).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23043-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>These Summary Data Observation (AUP) elements record Number of Therapy Days for the antimicrobial stratified by route of actual administration (four observations, one for each route) (CONF:1181-23043).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M246"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M246"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.198' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M247">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.198-2015-04-01-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.198' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M247"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M247"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.199' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M248">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.199-2015-04-01-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.199' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23092" test="count(cda:entryRelationship) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entryRelationship (CONF:1181-23092).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.199'][@extension='2015-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23079"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.199'][@extension='2015-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1181-23079) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.199" (CONF:1181-23080). SHALL contain exactly one [1..1] @extension="2015-04-01" (CONF:1181-30564).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'][count(cda:id[@root][@extension='FACWIDEIN'])=1][count(cda:code[@code='1250-0'][@codeSystem='2.16.840.1.113883.6.259'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23081"
                           test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'][count(cda:id[@root][@extension='FACWIDEIN'])=1][count(cda:code[@code='1250-0'][@codeSystem='2.16.840.1.113883.6.259'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:1181-23081) such that it SHALL contain exactly one [1..1] participantRole (CONF:1181-23083). This participantRole SHALL contain exactly one [1..1] id (CONF:1181-23085). This id SHALL contain exactly one [1..1] @root (CONF:1181-23086). This id SHALL contain exactly one [1..1] @extension="FACWIDEIN" (CONF:1181-23087). This participantRole SHALL contain exactly one [1..1] code (CodeSystem: HL7 HealthcareServiceLocation urn:oid:2.16.840.1.113883.6.259 DYNAMIC) (CONF:1181-23088). This code SHALL contain exactly one [1..1] @code="1250-0" (CONF:1181-23089). This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.259" (CONF:1181-23090). This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" Service Delivery Location (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:1181-23084). SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:1181-23082).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.229' and @extension='2015-04-01']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23094"
                           test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.229' and @extension='2015-04-01']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] Summary Data Observation (AU/AR) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.229:2015-04-01) (CONF:1181-23094).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23077" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1181-23077).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23078" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1181-23078).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[@typeCode='COMP']"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23093" test="cda:entryRelationship[@typeCode='COMP']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:1181-23093).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M248"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M248"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.199' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M249">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.199-2015-04-01-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.199' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M249"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M249"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.51' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M250">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.51-2015-04-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.51' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.197' and @extension='2015-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23017"
                           test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.197' and @extension='2015-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:1181-23017) such that it SHALL contain exactly one [1..1] Summary Encounter Patient Presence (AUP) (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.197:2015-04-01) (CONF:1181-23018).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.51'][@extension='2015-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23013"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.51'][@extension='2015-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1181-23013) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.51" (CONF:1181-23014). SHALL contain exactly one [1..1] @extension="2015-04-01" (CONF:1181-30565).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23015" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1181-23015).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.198' and @extension='2015-04-01']])=1]) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23046"
                           test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.198' and @extension='2015-04-01']])=1]) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:1181-23046) such that it SHALL contain exactly one [1..1] Summary Encounter (AUP) (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.198:2015-04-01) (CONF:1181-23047).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51900-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23016" test="cda:code[@code='51900-9']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51900-9" Summary Data Section (CONF:1181-23016).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-28367" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:1181-28367).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M250"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M250"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.51' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M251">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.51-2015-04-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.51' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M251"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M251"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.52' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M252">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.52-2015-04-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.52' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23074" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:1181-23074).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.52'][@extension='2015-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23070"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.52'][@extension='2015-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1181-23070) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.52" (CONF:1181-23071). SHALL contain exactly one [1..1] @extension="2015-04-01" (CONF:1181-30566).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23072" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1181-23072).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.199' and @extension='2015-04-01']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23075"
                           test="cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.199' and @extension='2015-04-01']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entries SHALL contain exactly one [1..1] Summary Encounter (ARO) (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.199:2015-04-01) (CONF:1181-23075).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51900-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-23073" test="cda:code[@code='51900-9']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51900-9" Summary Data Section (CONF:1181-23073).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-1181-28366" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:1181-28366).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M252"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M252"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.52' and @extension='2015-04-01']]"
                 priority="3999"
                 mode="M253">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.52-2015-04-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.52' and @extension='2015-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M253"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M253"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.231' and @extension='2015-10-01']]"
                 priority="3999"
                 mode="M254">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.231-2015-10-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.231' and @extension='2015-10-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.231'][@extension='2015-10-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-1"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.231'][@extension='2015-10-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1202-1) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.231" (CONF:1202-6). SHALL contain exactly one [1..1] @extension="2015-10-01" (CONF:1202-7).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-2" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1202-2).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-3" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1202-3).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-4" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:1202-4).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-5" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:1202-5).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-8" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:1202-8).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-9" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:1202-9).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='2334-1']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-10" test="cda:value[@xsi:type='CD'][@code='2334-1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="2334-1" Patient's dialyzer is reused (CONF:1202-10).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-11"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1202-11).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-12" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1202-12).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-13" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:1202-13).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30547" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:1202-30547).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M254"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M254"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.231' and @extension='2015-10-01']]"
                 priority="3999"
                 mode="M255">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.231-2015-10-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.231' and @extension='2015-10-01']]"
                  role=""/>
      <xsl:apply-templates mode="M255"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M255"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.37' and @extension='2015-10-01']]"
                 priority="3999"
                 mode="M256">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.37-2015-10-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.37' and @extension='2015-10-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.125']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-22306"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.125']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:1202-22306) such that it SHALL contain exactly one [1..1] Dialysis Patient Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.125) (CONF:1202-22307).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.37'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-22302"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.37'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1202-22302) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.37" (CONF:1202-22303).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-22304" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1202-22304).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.172']])=1])[. &gt;= 6] &lt;= 6"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-22308"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.172']])=1])[. &gt;= 6] &lt;= 6"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain [6..6] entry (CONF:1202-22308) such that it SHALL contain exactly one [1..1] Vascular Access Type Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.172) (CONF:1202-22309).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51898-5']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-22305" test="cda:code[@code='51898-5']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51898-5" Risk Factors Section (CONF:1202-22305).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-28364" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:1202-28364).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.231' and @extension='2015-10-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-28365"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.231' and @extension='2015-10-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:1202-28365) such that it SHALL contain exactly one [1..1] Dialyzer Reused Observation (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.231:2015-10-01) (CONF:1202-28366).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M256"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M256"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.37' and @extension='2015-10-01']]"
                 priority="3999"
                 mode="M257">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.37-2015-10-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.37' and @extension='2015-10-01']]"
                  role=""/>
      <xsl:apply-templates mode="M257"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M257"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.230' and @extension='2015-10-01']]"
                 priority="3999"
                 mode="M258">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.230-2015-10-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.230' and @extension='2015-10-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.230'][@extension='2015-10-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30548"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.230'][@extension='2015-10-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1202-30548) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.230" (CONF:1202-30552). SHALL contain exactly one [1..1] @extension="2015-10-01" (CONF:1202-30553).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30549" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1202-30549).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30550" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1202-30550).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30551" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1202-30551).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='2335-8']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30554" test="cda:code[@code='2335-8']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="2335-8" New outpatient start or continuation of inpatient course (CONF:1202-30554).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30555" test="cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1202-30555).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.7338']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30556"
                           test="cda:value[@xsi:type='CD'][@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.7338']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet NHSNStartOrContinuation urn:oid:2.16.840.1.114222.4.11.7338 STATIC 2015-06-01 (CONF:1202-30556).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30558" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:1202-30558).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30559" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:1202-30559).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30560" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:1202-30560).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M258"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M258"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.230' and @extension='2015-10-01']]"
                 priority="3999"
                 mode="M259">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.230-2015-10-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.230' and @extension='2015-10-01']]"
                  role=""/>
      <xsl:apply-templates mode="M259"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M259"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.232' and @extension='2015-10-01']]"
                 priority="3999"
                 mode="M260">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.232-2015-10-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.232' and @extension='2015-10-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30624" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1202-30624).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30625" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1202-30625).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30626" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1202-30626).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.232'][@extension='2015-10-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30627"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.232'][@extension='2015-10-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1202-30627) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.232" (CONF:1202-30635). SHALL contain exactly one [1..1] @extension="2015-10-01" (CONF:1202-30636).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[count(self::node()[@code='ASSERTION'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30628" test="cda:code[count(self::node()[@code='ASSERTION'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:1202-30628).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30629" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:1202-30629).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30630" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:1202-30630).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='3540-2']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30631" test="cda:value[@xsi:type='CD'][@code='3540-2']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="3540-2" No hemovigilance adverse reactions reported this month (CONF:1202-30631).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30632" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1202-30632).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30633" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1202-30633).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30634" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:1202-30634).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30651"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1202-30651).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M260"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M260"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.232' and @extension='2015-10-01']]"
                 priority="3999"
                 mode="M261">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.232-2015-10-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.232' and @extension='2015-10-01']]"
                  role=""/>
      <xsl:apply-templates mode="M261"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M261"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.233' and @extension='2015-10-01']]"
                 priority="3999"
                 mode="M262">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.233-2015-10-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.233' and @extension='2015-10-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30637" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:1202-30637).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30638" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1202-30638).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30639" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:1202-30639).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.233'][@extension='2015-10-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30640"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.233'][@extension='2015-10-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1202-30640) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.233" (CONF:1202-30645). SHALL contain exactly one [1..1] @extension="2015-10-01" (CONF:1202-30646).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[count(self::node()[@code='ASSERTION'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30641" test="cda:code[count(self::node()[@code='ASSERTION'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:1202-30641).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30642" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:1202-30642).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30643" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:1202-30643).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='3541-0']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30644" test="cda:value[@xsi:type='CD'][@code='3541-0']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="3541-0" No hemovigilance incidents reported this month (CONF:1202-30644).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30647" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:1202-30647).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30648" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:1202-30648).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30649" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:1202-30649).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30650"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:1202-30650).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M262"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M262"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.233' and @extension='2015-10-01']]"
                 priority="3999"
                 mode="M263">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.233-2015-10-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.233' and @extension='2015-10-01']]"
                  role=""/>
      <xsl:apply-templates mode="M263"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M263"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.235' and @extension='2015-10-01']]"
                 priority="3999"
                 mode="M264">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.235-2015-10-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.235' and @extension='2015-10-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.235'][@extension='2015-10-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30671"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.235'][@extension='2015-10-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:1202-30671) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.235" (CONF:1202-30677). SHALL contain exactly one [1..1] @extension="2015-10-01" (CONF:1202-30684).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30672" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code, which SHOULD be selected from ValueSet Codes for Hemovigilance (HV) Summary Data urn:oid:2.16.840.1.113883.10.20.5.9.11 DYNAMIC (CONF:1202-30672).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30673" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:1202-30673).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='INT'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30674" test="count(cda:value[@xsi:type='INT'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="INT" (CONF:1202-30674).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30675" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:1202-30675).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30676" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:1202-30676).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-1202-30683" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:1202-30683).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M264"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M264"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.235' and @extension='2015-10-01']]"
                 priority="3999"
                 mode="M265">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.235-2015-10-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.235' and @extension='2015-10-01']]"
                  role=""/>
      <xsl:apply-templates mode="M265"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M265"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.239' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M266">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.239-2016-08-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.239' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.239'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-1"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.239'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-1) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.239" (CONF:3247-5). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-6).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-2" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3247-2).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-3" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:3247-3).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-4" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3247-4).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-7" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:3247-7).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-8" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:3247-8).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='2339-0']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-9" test="cda:value[@xsi:type='CD'][@code='2339-0']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="2339-0" Blood sample collected for culture (CONF:3247-9).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-10"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3247-10).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-11" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:3247-11).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-12" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:3247-12).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-13" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:3247-13).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-14" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:3247-14).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M266"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M266"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.239' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M267">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.239-2016-08-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.239' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M267"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M267"/>
   <xsl:template match="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.140' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M268">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.140-2016-08-01-errors"
                  context="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.140' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21174" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3247-21174).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:consumable)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21176" test="count(cda:consumable)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] consumable (CONF:3247-21176).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable[count(cda:manufacturedProduct)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21177" test="cda:consumable[count(cda:manufacturedProduct)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This consumable SHALL contain exactly one [1..1] manufacturedProduct (CONF:3247-21177).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct[count(cda:manufacturedMaterial)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21178"
                           test="cda:consumable/cda:manufacturedProduct[count(cda:manufacturedMaterial)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedProduct SHALL contain exactly one [1..1] manufacturedMaterial (CONF:3247-21178).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21179"
                           test="cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedMaterial SHALL contain exactly one [1..1] code (CONF:3247-21179).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct[count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.23'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-28338"
                           test="cda:consumable/cda:manufacturedProduct[count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.23'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedProduct SHALL contain exactly one [1..1] templateId (CONF:3247-28338) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.23" (CONF:3247-28339).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.16'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-28253"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.16'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-28253) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.16" (CONF:3247-28254).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21428" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:3247-21428).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21429" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3247-21429).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime[@xsi:type='IVL_TS'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21496" test="count(cda:effectiveTime[@xsi:type='IVL_TS'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:3247-21496).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21497"
                           test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:3247-21497).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21498"
                           test="cda:effectiveTime[@xsi:type='IVL_TS'][count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:3247-21498).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.140'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21426"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.140'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-21426) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.140" (CONF:3247-21427). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30564).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='281790008']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21175" test="cda:code[@code='281790008']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="281790008" Intravenous antibiotic therapy (CONF:3247-21175).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-28187" test="cda:code[@codeSystem='2.16.840.1.113883.6.96']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:3247-28187).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37']) or (/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37'] and cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial/cda:code[(@code='11124' and @codeSystem='2.16.840.1.113883.6.88')  or @nullFlavor='NI'])"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21180-c"
                           test="not(/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37']) or (/cda:ClinicalDocument/cda:templateId[@root='2.16.840.1.113883.10.20.5.37'] and cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial/cda:code[(@code='11124' and @codeSystem='2.16.840.1.113883.6.88') or @nullFlavor='NI'])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>In an Evidence of Infection (Dialysis) Report, if the antimicrobial started was Vancomycin, the value of @code SHALL be '11124' Vancomycin [[]CodeSystem: 2.16.840.1.113883.6.88 RxNorm]. Otherwise, the value of @nullFlavor SHALL be 'NI' (CONF:3247-21180).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:consumable/cda:manufacturedProduct[@classCode='MANU']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-28348"
                           test="cda:consumable/cda:manufacturedProduct[@classCode='MANU']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This manufacturedProduct SHALL contain exactly one [1..1] @classCode="MANU" (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110) (CONF:3247-28348).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22766" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:3247-22766).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-28109" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:3247-28109).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS']/cda:low[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22767"
                           test="cda:effectiveTime[@xsi:type='IVL_TS']/cda:low[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:3247-22767).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@xsi:type='IVL_TS']/cda:high[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22768"
                           test="cda:effectiveTime[@xsi:type='IVL_TS']/cda:high[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This high SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:3247-22768).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='SBADM'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21171" test="@classCode='SBADM'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="SBADM" Substance Administration (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3247-21171).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21172" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3247-21172).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21173" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:3247-21173).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M268"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M268"/>
   <xsl:template match="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.140' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M269">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.140-2016-08-01-errors-CL"
                  context="cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.140' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M269"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M269"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.181' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M270">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.181-2016-08-01-errors"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.181' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.157']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22231"
                           test="count(cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.157']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3247-22231) such that it SHALL contain exactly one [1..1] Pus, Redness, or Increased Swelling Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.157) (CONF:3247-22232).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.181'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22224"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.181'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-22224) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.181" (CONF:3247-22225). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30287).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22226" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:3247-22226).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22227" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3247-22227).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22229" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:3247-22229).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component[count(cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.140' and @extension='2016-08-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22233"
                           test="count(cda:component[count(cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.140' and @extension='2016-08-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3247-22233) such that it SHALL contain exactly one [1..1] IV Antibiotic Start Clinical Statement (V3) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.140:2016-08-01) (CONF:3247-22234).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component[count(cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.141']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22235"
                           test="count(cda:component[count(cda:substanceAdministration[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.141']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3247-22235) such that it SHALL contain exactly one [1..1] IV Antifungal Start Clinical Statement (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.141) (CONF:3247-22236).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.149' and @extension='2014-12-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22237"
                           test="count(cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.149' and @extension='2014-12-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3247-22237) such that it SHALL contain exactly one [1..1] Positive Blood Culture Observation (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.149:2014-12-01) (CONF:3247-30429).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22771" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:3247-22771).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22228" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:3247-22228).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22230" test="cda:effectiveTime[count(cda:low)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:3247-22230).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='CLUSTER'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22222" test="@classCode='CLUSTER'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="CLUSTER" Cluster (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3247-22222).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22223" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3247-22223).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M270"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M270"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.181' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M271">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.181-2016-08-01-errors-CL"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.181' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M271"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M271"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.41' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M272">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.41-2016-08-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.41' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.181' and @extension='2016-08-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22342"
                           test="count(cda:entry[count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.181' and @extension='2016-08-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3247-22342) such that it SHALL contain exactly one [1..1] Infection Indicator Organizer (V4) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.181:2016-08-01) (CONF:3247-30428).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.41'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22338"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.41'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-22338) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.41" (CONF:3247-30224). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30282).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22340" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3247-22340).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.180']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22344"
                           test="count(cda:entry[count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.180']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3247-22344) such that it SHALL contain exactly one [1..1] Criteria of Diagnosis Organizer (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.180) (CONF:3247-22345).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.133']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22346"
                           test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.133']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3247-22346) such that it SHALL contain exactly one [1..1] Hospital Admission Clinical Statement (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.133) (CONF:3247-22347).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.121']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22348"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.121']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3247-22348) such that it SHALL contain exactly one [1..1] Death Observation in an Evidence of Infection (Dialysis) Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.121) (CONF:3247-22349).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.124']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22350"
                           test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.124']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3247-22350) such that it SHALL contain exactly one [1..1] Dialysis Clinic Admission Clinical Statement (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.124) (CONF:3247-22351).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.203']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30222"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.203']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3247-30222) such that it SHALL contain exactly one [1..1] Loss of Vascular Access Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.203) (CONF:3247-30223).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51899-3']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22341" test="cda:code[@code='51899-3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51899-3" Details Section (CONF:3247-22341).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30598" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3247-30598).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M272"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M272"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.41' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M273">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.41-2016-08-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.41' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M273"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M273"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.37' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M274">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.37-2016-08-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.37' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22415"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22415) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.27" (CONF:86-22416).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22417" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22417).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22418" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22418).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22419" test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain at least one [1..*] id (CONF:86-22419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22420" test="cda:recordTarget/cda:patientRole/cda:id[@root]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @root (CONF:86-22420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22421" test="cda:recordTarget/cda:patientRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @extension (CONF:86-22421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22422" test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] patient (CONF:86-22422).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22424"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] administrativeGenderCode (CONF:86-22424).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22425"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This administrativeGenderCode SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet Administrative Gender (HL7 V3) urn:oid:2.16.840.1.113883.1.11.1 STATIC (CONF:86-22425).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22426"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] birthTime (CONF:86-22426).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22427"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This birthTime SHALL contain exactly one [1..1] @value (CONF:86-22427).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.1.1'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30545"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.1.1'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-30545) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.3.1.1" (CONF:3247-30546).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:componentOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22575" test="count(cda:componentOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] componentOf (CONF:3247-22575).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf[count(cda:encompassingEncounter)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22576" test="cda:componentOf[count(cda:encompassingEncounter)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This componentOf SHALL contain exactly one [1..1] encompassingEncounter (CONF:3247-22576).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22577"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] code (CONF:3247-22577).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22579"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] effectiveTime (CONF:3247-22579).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22580"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:3247-22580).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22582"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] location (CONF:3247-22582).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22583"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This location SHALL contain exactly one [1..1] healthCareFacility (CONF:3247-22583).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22584"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] id (CONF:3247-22584).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22589" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3247-22589).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22590" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3247-22590).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.37' and @extension='2015-10-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22591"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.37' and @extension='2015-10-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3247-22591) such that it SHALL contain exactly one [1..1] Risk Factors Section in an Evidence of Infection (Dialysis) Report (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.37:2015-10-01) (CONF:3247-22592).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.41' and @extension='2016-08-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22593"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.41' and @extension='2016-08-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3247-22593) such that it SHALL contain exactly one [1..1] Details Section in an Evidence of Infection (Dialysis) Report (V5) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.41:2016-08-01) (CONF:3247-30253).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.37'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22573"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.37'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-22573) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.37" (CONF:3247-30254). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30285).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:code[@code='AMB' and @codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22578"
                           test="cda:componentOf/cda:encompassingEncounter/cda:code[@code='AMB' and @codeSystem='2.16.840.1.113883.5.4']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="AMB" Ambulatory (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4 STATIC) (CONF:3247-22578).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22581"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @nullFlavor="NA" (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008 STATIC) (CONF:3247-22581).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22585"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:3247-22585).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22586"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @extension (CONF:3247-22586).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22587"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] code (ValueSet: NHSNHealthcareServiceLocationCode urn:oid:2.16.840.1.113883.13.19 DYNAMIC) (CONF:3247-22587).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-23304-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If a positive blood culture was obtained SHALL contain a component containing a Findings Section in an Infection-type Report (CONF:3247-23304).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M274"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M274"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.37' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M275">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.37-2016-08-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.37' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M275"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M275"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.186' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M276">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.186-2016-08-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.186' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30551"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-30551) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.2" (CONF:3247-30552).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22636" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:3247-22636).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22639" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3247-22639).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22641" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:3247-22641).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='IVL_PQ'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22643" test="count(cda:value[@xsi:type='IVL_PQ'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="IVL_PQ" (CONF:3247-22643).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.186'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22634"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.186'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-22634) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.186" (CONF:3247-22635). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30553).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22637" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:3247-22637).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22640" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CONF:3247-22640).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22642" test="cda:effectiveTime[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:3247-22642).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22632" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:3247-22632).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22633" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:3247-22633).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22638" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code, which SHOULD be selected from ValueSet NHSNDrugSusceptibilityTestsCode urn:oid:2.16.840.1.113883.13.15 DYNAMIC (CONF:3247-22638).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22699" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:3247-22699).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:interpretationCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-23101" test="count(cda:interpretationCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] interpretationCode, which SHOULD be selected from ValueSet NHSNDrugSusceptibilityFindingCode urn:oid:2.16.840.1.113883.13.13 (CONF:3247-23101).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:methodCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30599" test="count(cda:methodCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] methodCode (CONF:3247-30599).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:methodCode[@code]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30602" test="cda:methodCode[@code]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This methodCode SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet NHSNDrugSusceptibilityTestMethod urn:oid:2.16.840.1.113883.10.20.5.9.4 DYNAMIC (CONF:3247-30602).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:methodCode[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30603" test="cda:methodCode[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This methodCode SHALL contain exactly one [1..1] @codeSystem (CONF:3247-30603).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M276"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M276"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.186' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M277">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.186-2016-08-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.186' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M277"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M277"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.200' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M278">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.200-2016-08-01-errors"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.200' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27111" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] component (CONF:3247-27111).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.1'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30554"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.1'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-30554) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.1" (CONF:3247-28208).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27108" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3247-27108).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27109" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3247-27109).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.200'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27105"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.200'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-27105) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.200" (CONF:3247-27106). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30555).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27107" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:3247-27107).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.186' and @extension='2016-08-01']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27112"
                           test="cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.186' and @extension='2016-08-01']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such components SHALL contain exactly one [1..1] Antimicrobial Susceptibility Result Observation (V3) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.186:2016-08-01) (CONF:3247-27112).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='18725-2']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-28101" test="cda:code[@code='18725-2']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="18725-2" Microbiology Studies (CONF:3247-28101).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-28102" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3247-28102).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27110" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:3247-27110).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='BATTERY'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27103" test="@classCode='BATTERY'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="BATTERY" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:3247-27103).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27104" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:3247-27104).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30591" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008) (CONF:3247-30591).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M278"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M278"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.200' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M279">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.200-2016-08-01-errors-CL"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.200' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M279"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M279"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.177' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M280">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.177-2016-08-01-errors"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.177' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:component[count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.200' and @extension='2016-08-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21104"
                           test="count(cda:component[count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.200' and @extension='2016-08-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3247-21104) such that it SHALL contain exactly one [1..1] Antimicrobial Susceptibility Result Organizer (V3) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.200:2016-08-01) (CONF:3247-27178).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.1'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30498"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.1'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-30498) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.1" (CONF:3247-30499).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21097" test="count(cda:id) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] id (CONF:3247-21097).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21098" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3247-21098).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21100" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3247-21100).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.175']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21106"
                           test="count(cda:component[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.175']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3247-21106) such that it SHALL contain exactly one [1..1] Antimicrobial Susceptibility Final Interpretation Result (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.175) (CONF:3247-22712).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.177'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21093"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.177'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-21093) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.177" (CONF:3247-21094). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30500).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22723-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:3247-22723).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='18725-2' and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21099"
                           test="cda:code[@code='18725-2' and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="18725-2" Microbiology studies (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3247-21099).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21101" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:3247-21101).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21091-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="CLUSTER" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:3247-21091).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21092" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:3247-21092).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M280"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M280"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.177' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M281">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.177-2016-08-01-errors-CL"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.177' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M281"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M281"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.201' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M282">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.201-2016-08-01-errors"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.201' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.201'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27122"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.201'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-27122) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.201" (CONF:3247-27123). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27124" test="count(cda:id) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] id (CONF:3247-27124).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27126" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3247-27126).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27128" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3247-27128).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component[count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.177' and @extension='2016-08-01']])=1]) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27158"
                           test="count(cda:component[count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.177' and @extension='2016-08-01']])=1]) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] component (CONF:3247-27158) such that it SHALL contain exactly one [1..1] Antimicrobial Susceptibility Tests Organizer (V3) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.177:2016-08-01) (CONF:3247-30469).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27125-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:3247-27125).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='18725-2' and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27127"
                           test="cda:code[@code='18725-2' and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="18725-2" Microbiology studies (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3247-27127).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27129" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:3247-27129).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.202']])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27130"
                           test="count(cda:participant[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.202']])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] Antimicrobial Susceptibility Isolate Participant (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.202) (CONF:3247-27130).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='CLUSTER'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27120" test="@classCode='CLUSTER'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="CLUSTER" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:3247-27120).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27121" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:3247-27121).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M282"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M282"/>
   <xsl:template match="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.201' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M283">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.201-2016-08-01-errors-CL"
                  context="cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.201' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M283"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M283"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.188' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M284">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.188-2016-08-01-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.188' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][@inversionInd='true'][count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.187']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22681"
                           test="count(cda:entryRelationship[@typeCode='COMP'][@inversionInd='true'][count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.187']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entryRelationship (CONF:3247-22681) such that it SHALL contain exactly one [1..1] Specimen Collection Encounter (ARO) (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.187) (CONF:3247-22684). SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:3247-22682). SHALL contain exactly one [1..1] @inversionInd="true" (CONF:3247-22683).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.188'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22670"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.188'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-22670) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.188" (CONF:3247-22671). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22672" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:3247-22672).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:specimen)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27160" test="count(cda:specimen)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] specimen (CONF:3247-27160).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:specimen[count(cda:specimenRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27161" test="cda:specimen[count(cda:specimenRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This specimen SHALL contain exactly one [1..1] specimenRole (CONF:3247-27161).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:specimen/cda:specimenRole[count(cda:specimenPlayingEntity)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27162"
                           test="cda:specimen/cda:specimenRole[count(cda:specimenPlayingEntity)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This specimenRole SHALL contain exactly one [1..1] specimenPlayingEntity (CONF:3247-27162).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[@typeCode='COMP'][@inversionInd='true'][count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.201' and @extension='2016-08-01']])=1]) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27164"
                           test="count(cda:entryRelationship[@typeCode='COMP'][@inversionInd='true'][count(cda:organizer[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.201' and @extension='2016-08-01']])=1]) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entryRelationship (CONF:3247-27164) such that it SHALL contain exactly one [1..1] @typeCode="COMP" (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002) (CONF:3247-27165). SHALL contain exactly one [1..1] Isolate Susceptibility Tests Organizer (V3) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.201:2016-08-01) (CONF:3247-30471). SHALL contain exactly one [1..1] @inversionInd="true" (CONF:3247-27432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22673" test="cda:effectiveTime[@value]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] @value (CONF:3247-22673).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:specimen/cda:specimenRole/cda:specimenPlayingEntity[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-27163"
                           test="cda:specimen/cda:specimenRole/cda:specimenPlayingEntity[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This specimenPlayingEntity SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNSpecimenTypeCode urn:oid:2.16.840.1.114222.4.11.3249 DYNAMIC (CONF:3247-27163).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22668" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" Procedure (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3247-22668).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-22669" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3247-22669).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M284"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M284"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.188' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M285">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.188-2016-08-01-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.188' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M285"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M285"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.32' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M286">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.32-2016-08-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.32' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21136" test="count(cda:entry)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3247-21136).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.32'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21128"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.32'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-21128) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.32" (CONF:3247-21129). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21132" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3247-21132).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.188' and @extension='2016-08-01']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30473"
                           test="cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.188' and @extension='2016-08-01']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This entry SHALL contain exactly one [1..1] Specimen Collection Procedure (ARO) (V3) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.188:2016-08-01) (CONF:3247-30473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='18769-0']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21133" test="cda:code[@code='18769-0']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="18769-0" Findings Section (CONF:3247-21133).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30601" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3247-30601).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M286"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M286"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.32' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M287">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.32-2016-08-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.32' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M287"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M287"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.31' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M288">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.31-2016-08-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.31' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22415"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22415) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.27" (CONF:86-22416).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22417" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22417).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22418" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22418).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22419" test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain at least one [1..*] id (CONF:86-22419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22420" test="cda:recordTarget/cda:patientRole/cda:id[@root]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @root (CONF:86-22420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22421" test="cda:recordTarget/cda:patientRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @extension (CONF:86-22421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22422" test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] patient (CONF:86-22422).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22424"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] administrativeGenderCode (CONF:86-22424).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22425"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This administrativeGenderCode SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet Administrative Gender (HL7 V3) urn:oid:2.16.840.1.113883.1.11.1 STATIC (CONF:86-22425).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22426"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] birthTime (CONF:86-22426).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22427"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This birthTime SHALL contain exactly one [1..1] @value (CONF:86-22427).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:componentOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21139" test="count(cda:componentOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] componentOf (CONF:3247-21139).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf[count(cda:encompassingEncounter)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21140" test="cda:componentOf[count(cda:encompassingEncounter)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This componentOf SHALL contain exactly one [1..1] encompassingEncounter (CONF:3247-21140).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21143"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] effectiveTime (CONF:3247-21143).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21144"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:3247-21144).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21146"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] location (CONF:3247-21146).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21147"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This location SHALL contain exactly one [1..1] healthCareFacility (CONF:3247-21147).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21148"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] id (CONF:3247-21148).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21150" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3247-21150).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21151" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3247-21151).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.32' and @extension='2016-08-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21152"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.32' and @extension='2016-08-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3247-21152) such that it SHALL contain exactly one [1..1] Findings Section in an ARO Report (V3) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.32:2016-08-01) (CONF:3247-21153).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.1.1'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30540"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.1.1'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-30540) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.3.1.1" (CONF:3247-30541).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.31'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21951"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.31'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-21951) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.31" (CONF:3247-21952). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30542).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21145"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @value (CONF:3247-21145).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-23358-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of the admission date SHALL NOT be earlier than January 1, 1986; SHALL NOT be earlier than the date of birth; and SHALL NOT be later than the event date (CONF:3247-23358).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21149"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:3247-21149).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.1']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-21141"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.1']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNEncounterTypeCode urn:oid:2.16.840.1.113883.13.1 STATIC (CONF:3247-21141).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M288"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M288"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.31' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M289">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.31-2016-08-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.31' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M289"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M289"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.236' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M290">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.236-2016-08-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.236' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30687" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3247-30687).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30688" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3247-30688).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30689" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:3247-30689).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.236'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30690"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.236'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-30690) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.236" (CONF:3247-30696). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30697).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[count(self::node()[@code='ASSERTION'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30691" test="cda:code[count(self::node()[@code='ASSERTION'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:3247-30691).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30692" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:3247-30692).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30693" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:3247-30693).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='3542-8']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30694" test="cda:value[@xsi:type='CD'][@code='3542-8']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="3542-8" Facility transfuses blood products treated with pathogen reduction technology (CONF:3247-30694).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30695"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3247-30695).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30698" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3247-30698).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30699" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3247-30699).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30700" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:3247-30700).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M290"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M290"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.236' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M291">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.236-2016-08-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.236' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M291"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M291"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M292">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.234-2016-08-01-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.236' and @extension='2016-08-01']])=1]) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30652"
                           test="count(cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.236' and @extension='2016-08-01']])=1]) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entryRelationship (CONF:3247-30652) such that it SHALL contain exactly one [1..1] Facility Transfuses Blood Products Treated with Pathogen Reduction Technology Observation (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.236:2016-08-01) (CONF:3247-30658).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30653"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-30653) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.234" (CONF:3247-30660). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30661).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'][count(cda:id[@root][@extension='FACWIDEIN'])=1][count(cda:code[@code='1250-0'][@codeSystem='2.16.840.1.113883.6.259'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30654"
                           test="count(cda:participant[@typeCode='LOC'][count(cda:participantRole[@classCode='SDLOC'][count(cda:id[@root][@extension='FACWIDEIN'])=1][count(cda:code[@code='1250-0'][@codeSystem='2.16.840.1.113883.6.259'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:3247-30654) such that it SHALL contain exactly one [1..1] participantRole (CONF:3247-30655). This participantRole SHALL contain exactly one [1..1] id (CONF:3247-30656). This id SHALL contain exactly one [1..1] @root (CONF:3247-30662). This id SHALL contain exactly one [1..1] @extension="FACWIDEIN" (CONF:3247-30663). This participantRole SHALL contain exactly one [1..1] code (CodeSystem: HL7 HealthcareServiceLocation urn:oid:2.16.840.1.113883.6.259 DYNAMIC) (CONF:3247-30657). This code SHALL contain exactly one [1..1] @code="1250-0" (CONF:3247-30664). This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.259" (CONF:3247-30665). This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" Service Delivery Location (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:3247-30667). SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:3247-30668).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.235' and @extension='2015-10-01']])=1]) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30730"
                           test="count(cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.235' and @extension='2015-10-01']])=1]) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entryRelationship (CONF:3247-30730) such that it SHALL contain exactly one [1..1] Summary Data Observation (HV) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.235:2015-10-01) (CONF:3247-30732).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.237']) = 123"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30733-c"
                           test="count(cda:entryRelationship/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.237']) = 123"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entryRelationship (CONF:3247-30733) such that it SHALL contain exactly one [1..1] Blood Product Usage Summary Observation (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.237:2016-08-01) (CONF:3247-30735).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30669" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3247-30669).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30670" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3247-30670).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M292"/>
   </xsl:template>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234' and @extension='2016-08-01']]/cda:entryRelationship[cda:observation]"
                 priority="3997"
                 mode="M292">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.234-2016-08-01-30652-branch-30652-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234' and @extension='2016-08-01']]/cda:entryRelationship[cda:observation]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@typeCode='COMP'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30659-branch-30652" test="@typeCode='COMP'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:3247-30659).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M292"/>
   </xsl:template>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234' and @extension='2016-08-01']]/cda:entryRelationship[cda:observation]"
                 priority="3995"
                 mode="M292">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.234-2016-08-01-30730-branch-30730-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234' and @extension='2016-08-01']]/cda:entryRelationship[cda:observation]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@typeCode='COMP'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30731-branch-30730" test="@typeCode='COMP'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CONF:3247-30731).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M292"/>
   </xsl:template>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234' and @extension='2016-08-01']]/cda:entryRelationship[cda:observation]"
                 priority="3993"
                 mode="M292">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.234-2016-08-01-30733-branch-30733-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234' and @extension='2016-08-01']]/cda:entryRelationship[cda:observation]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@typeCode='COMP'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30734-branch-30733" test="@typeCode='COMP'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CONF:3247-30734).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M292"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M292"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M293">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.234-2016-08-01-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M293"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M293"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.57' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M294">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.57-2016-08-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.57' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.232' and @extension='2015-10-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30614"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.232' and @extension='2015-10-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3247-30614) such that it SHALL contain exactly one [1..1] No Hemovigilance Adverse Reactions Reported This Month Observation (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.232:2015-10-01) (CONF:3247-30685).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.57'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30615"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.57'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-30615) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.57" (CONF:3247-30619). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30620).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30616" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3247-30616).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.233' and @extension='2015-10-01']])=1]) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30617"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.233' and @extension='2015-10-01']])=1]) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:3247-30617) such that it SHALL contain exactly one [1..1] No Hemovigilance Incidents Reported This Month Observation (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.233:2015-10-01) (CONF:3247-30686).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234' and @extension='2016-08-01']])=1]) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30736"
                           test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.234' and @extension='2016-08-01']])=1]) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:3247-30736) such that it SHALL contain exactly one [1..1] Summary Encounter (HV) (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.234:2016-08-01) (CONF:3247-30737).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51900-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30621" test="cda:code[@code='51900-9']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51900-9" Summary Data Section (CONF:3247-30621).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30622" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3247-30622).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M294"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M294"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.57' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M295">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.57-2016-08-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.57' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M295"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M295"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.49' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M296">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.49-2016-08-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.49' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22431"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22431) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.28" (CONF:86-22432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22433" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22434" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22435" test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] id (CONF:86-22435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22436"
                           test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" not applicable (CONF:86-22436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22437"
                           test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22437) such that it SHALL contain exactly one [1..1] @typeCode="SBJ" Subject (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22438). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22439). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22440). This associatedEntity SHALL contain exactly one [1..1] @classCode="PRS" Person (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22441). This associatedEntity SHALL contain exactly one [1..1] code (CONF:86-22442). This code SHALL contain exactly one [1..1] @code="389109008" Group (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-22443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22444"
                           test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22444) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22445). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22446). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22447). This associatedEntity SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-22448). This associatedEntity SHALL contain exactly one [1..1] id (CONF:86-22449). This id SHALL contain exactly one [1..1] @root (CONF:86-22450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22451" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:86-22451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22452" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:86-22452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22453" test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] @classCode="CASE" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22454"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNPopulationSummaryReportTypeCode urn:oid:2.16.840.1.114222.4.11.3595 STATIC (CONF:86-22454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22456"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] effectiveTime (CONF:86-22456).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22457"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-22457).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22458"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:86-22458).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22459-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The author SHALL represent the software forming the message (CONF:86-22459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.1.1'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30738"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.1.1'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-30738) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.3.1.1" (CONF:3247-30608).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30600" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:3247-30600).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30739" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:3247-30739).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30740"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code (CONF:3247-30740).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30741" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3247-30741).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30604" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3247-30604).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30605"
                           test="cda:component/cda:structuredBody[count(cda:component)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3247-30605).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.49'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30606"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.49'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-30606) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.49" (CONF:3247-30611). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30612).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody/cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.57' and @extension='2016-08-01']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30607"
                           test="cda:component/cda:structuredBody/cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.57' and @extension='2016-08-01']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] Summary Data Section (HV) (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.57:2016-08-01) (CONF:3247-30607).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@code='2543-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30609"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@code='2543-7']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="2543-7" Hemovigilance Module - Monthly Reporting Denominator (CONF:3247-30609).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30610"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3247-30610).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title[text()='Hemovigilance Module - Monthly Reporting Denominator'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30613"
                           test="count(cda:title[text()='Hemovigilance Module - Monthly Reporting Denominator'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title="Hemovigilance Module - Monthly Reporting Denominator" (CONF:3247-30613).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M296"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M296"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.49' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M297">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.49-2016-08-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.49' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M297"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M297"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.237' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M298">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.237-2016-08-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.237' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.237'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30701"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.237'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-30701) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.237" (CONF:3247-30707). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30714).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30702" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3247-30702).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30703" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3247-30703).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238' and @extension='2016-08-01']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30729"
                           test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238' and @extension='2016-08-01']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] ISBT Product Code Summary Observation (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.238:2016-08-01) (CONF:3247-30729).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30715" test="cda:code[@code]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet NHSN Summary Blood Product Usage urn:oid:2.16.840.1.114222.4.11.7353 DYNAMIC (CONF:3247-30715).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30713" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:3247-30713).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='INT'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30704" test="count(cda:value[@xsi:type='INT'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="INT" (CONF:3247-30704).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30705" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:3247-30705).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30706" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:3247-30706).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="( cda:value[@value=0] and count(cda:entryRelationship/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238']) = 0 ) or ( cda:value[@value &gt; 0] and not( cda:code[@code='3401-7'] and cda:code[@code='3402-5'] and cda:code[@code='3470-2'] and cda:code[@code='3409-0'] and cda:code[@code='3410-8'] and cda:code[@code='3477-7'] and cda:code[@code='3417-3'] and cda:code[@code='3484-3'] and cda:code[@code='3421-5'] and cda:code[@code='3422-3'] and cda:code[@code='3490-0'] and cda:code[@code='3544-4'] and cda:code[@code='3545-1'] and cda:code[@code='3546-9'] and cda:code[@code='3553-5'] and cda:code[@code='3554-3'] and cda:code[@code='3555-0'] and cda:code[@code='3502-2'] and cda:code[@code='3504-8'] and cda:code[@code='3511-3'] and cda:code[@code='3512-1'] and cda:code[@code='3513-9'] and cda:code[@code='3520-4'] and cda:code[@code='3521-2'] and cda:code[@code='3522-0'] and cda:code[@code='3529-5'] and cda:code[@code='3530-3'] and cda:code[@code='3531-1'] and cda:code[@code='3562-6'] and cda:code[@code='3563-4'] ) and count(cda:entryRelationship/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238']) &gt;= 1 ) or ( ( cda:code[@code='3401-7'] or cda:code[@code='3402-5'] or cda:code[@code='3470-2'] or cda:code[@code='3409-0'] or cda:code[@code='3410-8'] or cda:code[@code='3477-7'] or cda:code[@code='3417-3'] or cda:code[@code='3484-3'] or cda:code[@code='3421-5'] or cda:code[@code='3422-3'] or cda:code[@code='3490-0'] or cda:code[@code='3544-4'] or cda:code[@code='3545-1'] or cda:code[@code='3546-9'] or cda:code[@code='3553-5'] or cda:code[@code='3554-3'] or cda:code[@code='3555-0'] or cda:code[@code='3502-2'] or cda:code[@code='3504-8'] or cda:code[@code='3511-3'] or cda:code[@code='3512-1'] or cda:code[@code='3513-9'] or cda:code[@code='3520-4'] or cda:code[@code='3521-2'] or cda:code[@code='3522-0'] or cda:code[@code='3529-5'] or cda:code[@code='3530-3'] or cda:code[@code='3531-1'] or cda:code[@code='3562-6'] or cda:code[@code='3563-4']) and count(cda:entryRelationship/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238']) = 0 )"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30764-c"
                           test="( cda:value[@value=0] and count(cda:entryRelationship/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238']) = 0 ) or ( cda:value[@value &gt; 0] and not( cda:code[@code='3401-7'] and cda:code[@code='3402-5'] and cda:code[@code='3470-2'] and cda:code[@code='3409-0'] and cda:code[@code='3410-8'] and cda:code[@code='3477-7'] and cda:code[@code='3417-3'] and cda:code[@code='3484-3'] and cda:code[@code='3421-5'] and cda:code[@code='3422-3'] and cda:code[@code='3490-0'] and cda:code[@code='3544-4'] and cda:code[@code='3545-1'] and cda:code[@code='3546-9'] and cda:code[@code='3553-5'] and cda:code[@code='3554-3'] and cda:code[@code='3555-0'] and cda:code[@code='3502-2'] and cda:code[@code='3504-8'] and cda:code[@code='3511-3'] and cda:code[@code='3512-1'] and cda:code[@code='3513-9'] and cda:code[@code='3520-4'] and cda:code[@code='3521-2'] and cda:code[@code='3522-0'] and cda:code[@code='3529-5'] and cda:code[@code='3530-3'] and cda:code[@code='3531-1'] and cda:code[@code='3562-6'] and cda:code[@code='3563-4'] ) and count(cda:entryRelationship/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238']) &gt;= 1 ) or ( ( cda:code[@code='3401-7'] or cda:code[@code='3402-5'] or cda:code[@code='3470-2'] or cda:code[@code='3409-0'] or cda:code[@code='3410-8'] or cda:code[@code='3477-7'] or cda:code[@code='3417-3'] or cda:code[@code='3484-3'] or cda:code[@code='3421-5'] or cda:code[@code='3422-3'] or cda:code[@code='3490-0'] or cda:code[@code='3544-4'] or cda:code[@code='3545-1'] or cda:code[@code='3546-9'] or cda:code[@code='3553-5'] or cda:code[@code='3554-3'] or cda:code[@code='3555-0'] or cda:code[@code='3502-2'] or cda:code[@code='3504-8'] or cda:code[@code='3511-3'] or cda:code[@code='3512-1'] or cda:code[@code='3513-9'] or cda:code[@code='3520-4'] or cda:code[@code='3521-2'] or cda:code[@code='3522-0'] or cda:code[@code='3529-5'] or cda:code[@code='3530-3'] or cda:code[@code='3531-1'] or cda:code[@code='3562-6'] or cda:code[@code='3563-4']) and count(cda:entryRelationship/cda:observation/cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238']) = 0 )"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the value = 0 or type of product is one of the following, there SHALL NOT be a contained observation: Red Blood Cells/Whole Blood Derived/Total (3401-7, 3402-5, 3470-2) Red Blood Cells/Apheresis/Total (3409-0, 3410-8, 3477-7) Platelets/Whole Blood Derived/Total (3417-3, 3484-3) Platelets/Apheresis/Total (3421-5, 3422-3, 3490-0) Red Blood Cells/Whole Blood Derived/S-303 and Riboflavin Treated/Total (3544-4, 3545-1, 3546-9) Red Blood Cells/Apheresis/S-303 and Riboflavin Treated/Total (3553-5, 3554-3, 3555-0) Platelets/Whole Blood Derived/Psoralen and Riboflavin Treated/Total (3502-2, 3504-8) Platelets/Apheresis/Psoralen and Riboflavin Treated/Total (3511-3, 3512-1, 3513-9) Plasma/Whole Blood Derived/Psoralen and Riboflavin Treated/Total (3520-4, 3521-2, 3522-0) Plasma/Apheresis/Psoralen and Riboflavin Treated/Total (3529-5, 3530-3, 3531-1) Cryoprecipitate/Psoralen and Riboflavin Treated/Total (3562-6, 3563-4) If the value is &gt; 0 and the type of product is not one of those listed above, then each specific subcategory product that is &gt; 0 SHALL be listed in a separate contained ISBT Product Code Summary Observation (CONF:3247-30764).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M298"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M298"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.237' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M299">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.237-2016-08-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.237' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M299"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M299"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M300">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.238-2016-08-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30716"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-30716) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.238" (CONF:3247-30719). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30720).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30717" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3247-30717).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30718" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3247-30718).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30726-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Whole Blood (3467-8, 3468-6, 3469-4), then valueSet NHSN Whole Blood Total (urn:oid:2.16.840.1.114222.4.11.7292) SHALL be used (CONF:3247-30726).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30727-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Red Blood Cells/Whole Blood Derived/Not irradiated or Leukocyte Reduced (3471-0, 3472-8, 3473-6), then valueSet NHSN Red Blood Cells/Whole Blood Derived/Not Irradiated or Leukocyte Reduced (urn:oid:2.16.840.1.114222.4.11.7294) SHALL be used (CONF:3247-30727).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30765-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Red Blood Cells/Whole Blood Derived/Irradiated (3403-3, 3404-1, 3474-4), then valueSet NHSN Red Blood Cells/Whole Blood Derived/Irradiated (urn:oid:2.16.840.1.114222.4.11.7295) SHALL be used (CONF:3247-30765).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30766-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Red Blood Cells/Whole Blood Derived/Irradiated and Leukocyte Reduced (3407-4, 3408-2, 3476-9), then valueSet NHSN Red Blood Cells/Whole Blood Derived/Irradiated and Leukocyte Reduced (urn:oid:2.16.840.1.114222.4.11.7297) SHALL be used (CONF:3247-30766).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30767-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Red Blood Cells/Whole Blood Derived/Leukocyte Reduced (3405-8, 3406-6, 3475-1), then valueSet NHSN Red Blood Cells/Whole Blood Derived/Leukocyte Reduced (urn:oid:2.16.840.1.114222.4.11.7296) SHALL be used (CONF:3247-30767).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30768-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Red Blood Cells/Apheresis/Not Irradiated or Leukocyte Reduced (3478-5, 3479-3, 3480-1), then valueSet NHSN Red Blood Cells/Apheresis/Not Irradiated or Leukocyte Reduced (urn:oid:2.16.840.1.114222.4.11.7299) SHALL be used (CONF:3247-30768).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30742-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Red Blood Cells/Apheresis/Irradiated (3411-6, 3412-4, 3481-9), then valueSet NHSN Red Blood Cells/Apheresis/Irradiated (urn:oid:2.16.840.1.114222.4.11.7300) SHALL be used (CONF:3247-30742).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30743-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Red Blood Cells/Apheresis/Leukocyte Reduced (3413-2, 3414-0, 3482-7), then valueSet NHSN Red Blood Cells/Apheresis/Leukocyte Reduced (urn:oid:2.16.840.1.114222.4.11.7301) SHALL be used (CONF:3247-30743).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30744-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Plasma/Apheresis/Riboflavin-Treated (3535-2, 3536-0, 3537-8), then valueSet NHSN Plasma/Apheresis/Riboflavin-Treated (urn:oid:2.16.840.1.114222.4.11.7327) SHALL be used (CONF:3247-30744).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30745-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Plasma/Apheresis/Psoralen-Treated (3532-9, 3533-7, 3534-5), then valueSet NHSN Plasma/Apheresis/Psoralen-Treated (urn:oid:2.16.840.1.114222.4.11.7326) SHALL be used (CONF:3247-30745).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30746-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Plasma/Whole Blood Derived/Riboflavin-Treated (3526-1, 3527-9, 3528-7), then valueSet NHSN Plasma/Whole Blood Derived/Riboflavin-Treated (urn:oid:2.16.840.1.114222.4.11.7324) SHALL be used (CONF:3247-30746).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30747-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Plasma/Whole Blood Derived/Psoralen-Treated (3523-8, 3524-6, 3525-3), then valueSet NHSN Plasma/Whole Blood Derived/Psoralen-Treated (urn:oid:2.16.840.1.114222.4.11.7323) SHALL be used (CONF:3247-30747).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30748-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Apheresis/Riboflavin-Treated (3517-0, 3518-8, 3519-6 ), then valueSet NHSN Platelets/Apheresis/Riboflavin-Treated (urn:oid:2.16.840.1.114222.4.11.7321) SHALL be used (CONF:3247-30748).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30749-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Apheresis/Psoralen-Treated (3514-7, 3515-4, 3516-2), then valueSet NHSN Platelets/Apheresis/Psoralen-Treated (urn:oid:2.16.840.1.114222.4.11.7320) SHALL be used (CONF:3247-30749).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30750-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Whole Blood Derived/Riboflavin-Treated (3517-0, 3518-8), then valueSet NHSN Platelets/Whole Blood Derived/Riboflavin-Treated (urn:oid:2.16.840.1.114222.4.11.7318) SHALL be used (CONF:3247-30750).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30751-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Whole Blood Derived/Psoralen-Treated (3505-5, 3507-1), then valueSet NHSN Platelets/Whole Blood Derived/Psoralen-Treated (urn:oid:2.16.840.1.114222.4.11.7317) SHALL be used (CONF:3247-30751).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30752-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Cryoprecipitate (3562-6, 3563-4), then valueSet NHSN Cryoprecipitate (urn:oid:2.16.840.1.114222.4.11.7315) SHALL be used (CONF:3247-30752).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30753-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Plasma/Apheresis/Total (3529-5, 3530-3, 3531-1), then valueSet NHSN Plasma/Apheresis/Total (urn:oid:2.16.840.1.114222.4.11.7314) SHALL be used (CONF:3247-30753).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30754-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Plasma/Whole Blood Derived/Total (3520-4, 3521-2, 3522-0), then valueSet NHSN Plasma/Whole Blood Derived/Total (urn:oid:2.16.840.1.114222.4.11.7313) SHALL be used (CONF:3247-30754).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30755-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Apheresis/Irradiated or Leukocyte Reduced (3427-2, 3428-0, 3496-7), then valueSet NHSN Platelets/Apheresis/Irradiated or Leukocyte Reduced (urn:oid:2.16.840.1.114222.4.11.7312) SHALL be used (CONF:3247-30755).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30756-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Apheresis/Leukocyte Reduced (3425-6, 3426-4, 3495-9), then valueSet NHSN Platelets/Apheresis/Leukocyte Reduced (urn:oid:2.16.840.1.114222.4.11.7311) SHALL be used (CONF:3247-30756).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30757-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Apheresis/Irradiated (3423-1, 3424-9, 3494-2), then valueSet NHSN Platelets/Apheresis/Irradiated (urn:oid:2.16.840.1.114222.4.11.7310) SHALL be used (CONF:3247-30757).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30758-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Apheresis/Not Irradiated or Leukocyte Reduced (3491-8, 3492-6, 3493-4), then valueSet NHSN Platelets/Apheresis/Not Irradiated or Leukocyte Reduced (urn:oid:2.16.840.1.114222.4.11.7309) SHALL be used (CONF:3247-30758).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30759-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Whole Blood Derived/Irradiated and Leukocyte Reduced (3420-7, 3489-2), then valueSet NHSN Platelets/Whole Blood Derived/Irradiated and Leukocyte Reduced (urn:oid:2.16.840.1.114222.4.11.7307) SHALL be used (CONF:3247-30759).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30760-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Whole Blood Derived/Leukocyte Reduced (3419-9, 3488-4), then valueSet NHSN Platelets/Whole Blood Derived/Leukocyte Reduced (urn:oid:2.16.840.1.114222.4.11.7306) SHALL be used (CONF:3247-30760).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30761-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Whole Blood Derived/Irradiated (3418-1, 3487-6), then valueSet NHSN Platelets/Whole Blood Derived/Irradiated (urn:oid:2.16.840.1.114222.4.11.7305) SHALL be used (CONF:3247-30761).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30762-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Whole Blood Derived/Not Irradiated or Leukocyte Reduced (3485-0, 3486-8), then valueSet NHSN Platelets/Whole Blood Derived/Not Irradiated or Leukocyte Reduced (urn:oid:2.16.840.1.114222.4.11.7304) SHALL be used (CONF:3247-30762).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30763-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Red Blood Cells/Apheresis/Irradiated or Leukocyte Reduced (3415-7, 3416-5, 3483-5), then valueSet NHSN Red Blood Cells/Apheresis/Irradiated or Leukocyte Reduced (urn:oid:2.16.840.1.114222.4.11.7302) SHALL be used (CONF:3247-30763).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30722" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:3247-30722).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='INT'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30723" test="count(cda:value[@xsi:type='INT'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="INT" (CONF:3247-30723).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30724" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:3247-30724).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30725" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:3247-30725).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30769-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Red Blood Cells/Whole Blood Derived/S-303-Treated (3547-7, 3548-5, 3549-3), then valueSet NHSN Red Blood Cells/Whole Blood Derived/S-303-Treated (urn:oid:2.16.840.1.114222.4.11.7498) SHALL be used (CONF:3247-30769).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30770-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Red Blood Cells/Whole Blood Derived/Riboflavin-Treated (3550-1, 3551-9, 3552-7), then valueSet NHSN Red Blood Cells/Whole Blood Derived/Riboflavin-Treated (urn:oid:2.16.840.1.114222.4.11.7499) SHALL be used (CONF:3247-30770).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30771-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Red Blood Cells/Apheresis/S-303-Treated (3556-8, 3557-6, 3558-4), then valueSet NHSN Red Blood Cells/Apheresis/S-303-Treated (urn:oid:2.16.840.1.114222.4.11.7500) SHALL be used (CONF:3247-30771).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30772-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Red Blood Cells/Apheresis/Riboflavin-Treated (3559-2, 3560-0, 3561-8), then valueSet NHSN Red Blood Cells/Apheresis/Riboflavin-Treated (urn:oid:2.16.840.1.114222.4.11.7501) SHALL be used (CONF:3247-30772).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30773-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Cryoprecipitate/Psoralen-Treated (3564-2, 3565-9), then valueSet NHSN Cryoprecipitate/Psoralen-Treated (urn:oid:2.16.840.1.114222.4.11.7502) SHALL be used (CONF:3247-30773).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30774-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Cryoprecipitate/Psoralen-Treated (3566-7, 3567-5), then valueSet NHSN Cryoprecipitate/Psoralen-Treated (urn:oid:2.16.840.1.114222.4.11.7502) SHALL be used (CONF:3247-30774).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30775-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Apheresis/Psoralen-Treated and In Plasma (3568-3, 3569-1, 3570-9), then valueSet NHSN Platelets/Apheresis/Psoralen-Treated and In Plasma (urn:oid:2.16.840.1.114222.4.11.7504) SHALL be used (CONF:3247-30775).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30776-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Apheresis/Psoralen-Treated and In Platelet Additive Solution (3571-7, 3572-5, 3573-3), then valueSet NHSN Platelets/Apheresis/Psoralen-Treated (urn:oid:2.16.840.1.114222.4.11.7320) SHALL be used (CONF:3247-30776).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30777-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Apheresis/Riboflavin-Treated and In Plasma (3574-1, 3575-8, 3576-6), then valueSet NHSN Platelets/Apheresis/Riboflavin-Treated and In Plasma (urn:oid:2.16.840.1.114222.4.11.7506) SHALL be used (CONF:3247-30777).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(testable)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30778-c" test="not(testable)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the product specified in the containing Blood Product Usage Summary Observation is Platelets/Apheresis/Riboflavin-Treated and In Platelet Additive Solution (3577-4, 3578-2, 3579-0), then valueSet NHSN Platelets/Apheresis/Riboflavin-Treated and In Platelet Additive Solution (urn:oid:2.16.840.1.114222.4.11.7507) SHALL be used (CONF:3247-30778).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M300"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M300"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M301">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.238-2016-08-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M301"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M301"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.240' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M302">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.240-2016-08-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.240' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.240'][@extension='2016-08-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30780"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.240'][@extension='2016-08-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3247-30780) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.240" (CONF:3247-30784). SHALL contain exactly one [1..1] @extension="2016-08-01" (CONF:3247-30785).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30781" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3247-30781).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30782" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3247-30782).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238' and @extension='2016-08-01']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30783"
                           test="not(cda:entryRelationship) or cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.238' and @extension='2016-08-01']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The entryRelationship, if present, SHALL contain exactly one [1..1] ISBT Product Code Summary Observation (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.238:2016-08-01) (CONF:3247-30783).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code]"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30786" test="cda:code[@code]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet NHSN Pathogen Reduced Apheresis Platelet Usage urn:oid:2.16.840.1.113883.10.20.5.9.5 DYNAMIC (CONF:3247-30786).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30787" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:3247-30787).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='INT'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30788" test="count(cda:value[@xsi:type='INT'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="INT" (CONF:3247-30788).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30789" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:3247-30789).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30790" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:3247-30790).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested_here_yet_todo)"/>
         <xsl:otherwise>
            <failed-assert id="a-3247-30791-c" test="not(tested_here_yet_todo)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the value = 0 there SHALL NOT be a contained observation. If the value is &gt; 0 then each specific subcategory product that is &gt; 0 SHALL be listed in a separate contained ISBT Product Code Summary Observation (CONF:3247-30791).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M302"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M302"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.240' and @extension='2016-08-01']]"
                 priority="3999"
                 mode="M303">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.240-2016-08-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.240' and @extension='2016-08-01']]"
                  role=""/>
      <xsl:apply-templates mode="M303"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M303"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.50' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M304">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.50-2017-04-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.50' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22431"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22431) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.28" (CONF:86-22432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22433" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22434" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22435" test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] id (CONF:86-22435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22436"
                           test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" not applicable (CONF:86-22436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22437"
                           test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22437) such that it SHALL contain exactly one [1..1] @typeCode="SBJ" Subject (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22438). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22439). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22440). This associatedEntity SHALL contain exactly one [1..1] @classCode="PRS" Person (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22441). This associatedEntity SHALL contain exactly one [1..1] code (CONF:86-22442). This code SHALL contain exactly one [1..1] @code="389109008" Group (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-22443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22444"
                           test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22444) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22445). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22446). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22447). This associatedEntity SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-22448). This associatedEntity SHALL contain exactly one [1..1] id (CONF:86-22449). This id SHALL contain exactly one [1..1] @root (CONF:86-22450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22451" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:86-22451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22452" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:86-22452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22453" test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] @classCode="CASE" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22454"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNPopulationSummaryReportTypeCode urn:oid:2.16.840.1.114222.4.11.3595 STATIC (CONF:86-22454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22456"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] effectiveTime (CONF:86-22456).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22457"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-22457).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22458"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:86-22458).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22459-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The author SHALL represent the software forming the message (CONF:86-22459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-1"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-1) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.3.2" (CONF:3311-10).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-2" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:3311-2).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-3" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:3311-3).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-4" test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code (CONF:3311-4).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-5" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3311-5).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-6" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3311-6).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.58' and @extension='2017-04-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-7"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.58' and @extension='2017-04-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3311-7) such that it SHALL contain exactly one [1..1] Summary Data Section (HP-FLU) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.58:2017-04-01) (CONF:3311-9).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.50'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-8"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.50'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-8) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.50" (CONF:3311-13). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-14).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@code='86558-4']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-11"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@code='86558-4']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="86558-4" Healthcare Personnel Influenza Vaccination Summary (CONF:3311-11).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-12"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3311-12).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-16"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] effectiveTime (CONF:3311-16).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28416"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:3311-28416).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28417"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:3311-28417).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime/cda:low[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28418"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime/cda:low[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @value (CONF:3311-28418).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime/cda:high[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28419"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime/cda:high[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This high SHALL contain exactly one [1..1] @value (CONF:3311-28419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="string-length( cda:documentationOf/cda:serviceEvent/cda:effectiveTime/cda:low/@value)=4"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28420-c"
                           test="string-length( cda:documentationOf/cda:serviceEvent/cda:effectiveTime/cda:low/@value)=4"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>DocumentationOf/serviceEvent/effectiveTime/low/@value SHALL contain a 4 digit year (CONF:3311-28420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="string-length( cda:documentationOf/cda:serviceEvent/cda:effectiveTime/cda:high/@value)=4"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28421-c"
                           test="string-length( cda:documentationOf/cda:serviceEvent/cda:effectiveTime/cda:high/@value)=4"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>DocumentationOf/serviceEvent/effectiveTime/high/@value SHALL contain a 4 digit year (CONF:3311-28421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28424"
                           test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:3311-28424) such that it SHALL contain exactly one [1..1] associatedEntity (CONF:3311-28425). This associatedEntity SHALL contain exactly one [1..1] id (CONF:3311-28426). This id MAY contain zero or one [0..1] @root (CONF:3311-28430). This associatedEntity SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110) (CONF:3311-28429). SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90) (CONF:3311-28427). SHALL contain zero or one [0..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057) (CONF:3311-28428).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M304"/>
   </xsl:template>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.50' and @extension='2017-04-01']]/cda:participant[cda:associatedEntity[cda:id[@root]][@classCode='SDLOC']][@typeCode='LOC'][@contextControlCode='OP']"
                 priority="3997"
                 mode="M304">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.50-2017-04-01-28424-branch-28424-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.50' and @extension='2017-04-01']]/cda:participant[cda:associatedEntity[cda:id[@root]][@classCode='SDLOC']][@typeCode='LOC'][@contextControlCode='OP']"
                  role=""/>
      <xsl:choose>
         <xsl:when test="cda:associatedEntity[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28431-branch-28424" test="cda:associatedEntity[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This associatedEntity SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNInfluenzaVaccinationSetting urn:oid:2.16.840.1.113883.10.20.5.9.7 DYNAMIC (CONF:3311-28431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M304"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M304"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.50' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M305">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.50-2017-04-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.50' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M305"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M305"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.58' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M306">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.58-2017-04-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.58' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.242' and @extension='2017-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-17"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.242' and @extension='2017-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3311-17) such that it SHALL contain exactly one [1..1] Vaccination Type Observation (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.242:2017-04-01) (CONF:3311-28415).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.58'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-18"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.58'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-18) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.58" (CONF:3311-21). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-24).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-19" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3311-19).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51900-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-22" test="cda:code[@code='51900-9']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51900-9" Summary Data Section (CONF:3311-22).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-23" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3311-23).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.241' and @extension='2017-04-01']])=1]) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-75"
                           test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.241' and @extension='2017-04-01']])=1]) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:3311-75) such that it SHALL contain exactly one [1..1] Summary Encounter (HP-FLU) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.241:2017-04-01) (CONF:3311-28413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M306"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M306"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.58' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M307">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.58-2017-04-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.58' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M307"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M307"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.241' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M308">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.241-2017-04-01-errors"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.241' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:entryRelationship) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-25" test="count(cda:entryRelationship) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entryRelationship (CONF:3311-25).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.241'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-26"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.241'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-26) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.241" (CONF:3311-34). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-44).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='SBJ'][count(cda:participantRole[@classCode='PART'][count(cda:code)=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-29"
                           test="count(cda:participant[@typeCode='SBJ'][count(cda:participantRole[@classCode='PART'][count(cda:code)=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:3311-29) such that it SHALL contain exactly one [1..1] participantRole (CONF:3311-30). This participantRole SHALL contain exactly one [1..1] @classCode="PART" (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110) (CONF:3311-41). This participantRole SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNHealthcarePersonnelType urn:oid:2.16.840.1.113883.10.20.5.9.6 STATIC 2016-12-01 (CONF:3311-42). SHALL contain exactly one [1..1] @typeCode="SBJ" (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90) (CONF:3311-40).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-31"
                           test="cda:entryRelationship[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.185']])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] Summary Data Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.185) (CONF:3311-31).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ENC'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-32" test="@classCode='ENC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ENC" Encounter (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3311-32).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-33" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3311-33).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:entryRelationship[@typeCode='COMP']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-43" test="cda:entryRelationship[@typeCode='COMP']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such entryRelationships SHALL contain exactly one [1..1] @typeCode="COMP" Has component (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:3311-43).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M308"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M308"/>
   <xsl:template match="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.241' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M309">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.241-2017-04-01-errors-CL"
                  context="cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.241' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M309"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M309"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.242' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M310">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.242-2017-04-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.242' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.242'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-46"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.242'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-46) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.242" (CONF:3311-59). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-60).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-47" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3311-47).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-49" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:3311-49).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][count(cda:qualifier[count(cda:name[@code='260837004'][@codeSystem='2.16.840.1.113883.6.96'])=1][count(cda:value)=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-50"
                           test="cda:value[@xsi:type='CD'][count(cda:qualifier[count(cda:name[@code='260837004'][@codeSystem='2.16.840.1.113883.6.96'])=1][count(cda:value)=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] qualifier (CONF:3311-50) such that it SHALL contain exactly one [1..1] name (CONF:3311-51). This name SHALL contain exactly one [1..1] @code="260837004" subtype (CONF:3311-66). This name SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:3311-67). SHALL contain exactly one [1..1] value (CONF:3311-68).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-61" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:3311-61).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='30956-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-64" test="cda:code[@code='30956-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="30956-7" Type [Identifier] Vaccine (CONF:3311-64).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-65" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3311-65).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-69" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:3311-69).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='6142004']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-70" test="cda:value[@xsi:type='CD'][@code='6142004']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="6142004" Influenza (CONF:3311-70).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-71"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:3311-71).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M310"/>
   </xsl:template>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.242' and @extension='2017-04-01']]/cda:value[@xsi:type='CD']/cda:qualifier[cda:name[@code='260837004'][@codeSystem='2.16.840.1.113883.6.96']][cda:value]"
                 priority="3997"
                 mode="M310">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.242-2017-04-01-50-branch-50-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.242' and @extension='2017-04-01']]/cda:value[@xsi:type='CD']/cda:qualifier[cda:name[@code='260837004'][@codeSystem='2.16.840.1.113883.6.96']][cda:value]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="cda:value[@code='21864008']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-72-branch-50" test="cda:value[@code='21864008']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="21864008" Seasonal (CONF:3311-72).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-73-branch-50" test="cda:value[@codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:3311-73).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M310"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M310"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.242' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M311">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.242-2017-04-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.242' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M311"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M311"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.243' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M312">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.243-2017-04-01-errors"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.243' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-80" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3311-80).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-81" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:3311-81).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ACT'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-87" test="@classCode='ACT'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ACT" Act (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3311-87).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-88" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3311-88).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='86467-8']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-90" test="cda:code[@code='86467-8']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="86467-8" Report comment Narrative (CONF:3311-90).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="string-length( cda:text) &lt; 2000"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-93-c" test="string-length( cda:text) &lt; 2000" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The length of the free text comment SHALL be less than 2000 characters (CONF:3311-93).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.243'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-79"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.243'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-79) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.243" (CONF:3311-89). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-92).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M312"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M312"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.243' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M313">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.243-2017-04-01-errors-CL"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.243' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M313"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M313"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.51' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M314">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.51-2017-04-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.51' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22415"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22415) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.27" (CONF:86-22416).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22417" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22417).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22418" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22418).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22419" test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain at least one [1..*] id (CONF:86-22419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22420" test="cda:recordTarget/cda:patientRole/cda:id[@root]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @root (CONF:86-22420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22421" test="cda:recordTarget/cda:patientRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @extension (CONF:86-22421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22422" test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] patient (CONF:86-22422).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22424"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] administrativeGenderCode (CONF:86-22424).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22425"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This administrativeGenderCode SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet Administrative Gender (HL7 V3) urn:oid:2.16.840.1.113883.1.11.1 STATIC (CONF:86-22425).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22426"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] birthTime (CONF:86-22426).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22427"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This birthTime SHALL contain exactly one [1..1] @value (CONF:86-22427).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-97"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-97) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.3.2" (CONF:3311-113).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:componentOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-98" test="count(cda:componentOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] componentOf (CONF:3311-98).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf[count(cda:encompassingEncounter)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-99" test="cda:componentOf[count(cda:encompassingEncounter)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This componentOf SHALL contain exactly one [1..1] encompassingEncounter (CONF:3311-99).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-100"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] effectiveTime (CONF:3311-100).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-101"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:3311-101).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-103"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] location (CONF:3311-103).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-104"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This location SHALL contain exactly one [1..1] healthCareFacility (CONF:3311-104).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-105"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] id (CONF:3311-105).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-106" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3311-106).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-107" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3311-107).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.59' and @extension='2017-04-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-108"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.59' and @extension='2017-04-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3311-108) such that it SHALL contain exactly one [1..1] Infection Details Section in a VAE Report (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.59:2017-04-01) (CONF:3311-136).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-109"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3311-109) such that it SHALL contain exactly one [1..1] Findings Section in an Infection-Type Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.45) (CONF:3311-137).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.60' and @extension='2017-04-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-110"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.60' and @extension='2017-04-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3311-110) such that it SHALL contain exactly one [1..1] Risk Factors Section in a VAE Report (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.60:2017-04-01) (CONF:3311-171).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.51'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-111"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.51'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-111) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.51" (CONF:3311-122). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-123).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-114"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @value (CONF:3311-114).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high) or cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-115"
                           test="not(cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high) or cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The high, if present, SHALL contain exactly one [1..1] @value (CONF:3311-115).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-116-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of the admission date SHALL NOT be earlier than January 1, 1986; SHALL NOT be earlier than the date of birth; and SHALL NOT be later than the event date (CONF:3311-116).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-117"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:3311-117).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-118"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @extension (CONF:3311-118).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-119"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNHealthcareServiceLocationCode urn:oid:2.16.840.1.113883.13.19 DYNAMIC (CONF:3311-119).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M314"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M314"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.51' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M315">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.51-2017-04-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.51' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M315"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M315"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.59' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M316">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.59-2017-04-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.59' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-124"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3311-124) such that it SHALL contain exactly one [1..1] Infection-Type Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.139) (CONF:3311-129).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.59'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-125"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.59'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-125) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.59" (CONF:3311-130). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-135).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-126" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3311-126).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.120']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-127"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.120']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3311-127) such that it SHALL contain exactly one [1..1] Death Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.120) (CONF:3311-133).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51899-3']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-131" test="cda:code[@code='51899-3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51899-3" Details Section (CONF:3311-131).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-132" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3311-132).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M316"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M316"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.59' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M317">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.59-2017-04-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.59' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M317"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M317"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.60' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M318">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.60-2017-04-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.60' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.244' and @extension='2017-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-138"
                           test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.244' and @extension='2017-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3311-138) such that it SHALL contain exactly one [1..1] Mechanical Ventilation Initiation Act (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.244:2017-04-01) (CONF:3311-28394).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-139" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3311-139).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.60'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-140"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.60'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-140) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.60" (CONF:3311-144). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-145).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51898-5']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-142" test="cda:code[@code='51898-5']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51898-5" Risk Factors Section (CONF:3311-142).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-143" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3311-143).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M318"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M318"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.60' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M319">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.60-2017-04-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.60' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M319"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M319"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.61' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M320">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.61-2017-04-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.61' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.61'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-172"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.61'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-172) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.61" (CONF:3311-180). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-181).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-173" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3311-173).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.243' and @extension='2017-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-179"
                           test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.243' and @extension='2017-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3311-179) such that it SHALL contain exactly one [1..1] NHSN Comment (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.243:2017-04-01) (CONF:3311-184).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='86468-6']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-182" test="cda:code[@code='86468-6']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="86468-6" Report Comment Section (CONF:3311-182).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-183" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3311-183).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M320"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M320"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.61' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M321">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.61-2017-04-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.61' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M321"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M321"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.245' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M322">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.245-2017-04-01-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.245' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-187" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3311-187).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-188" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3311-188).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.245'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-190"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.245'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-190) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.245" (CONF:3311-199). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-200).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-193" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:3311-193).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-196" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" Procedure (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3311-196).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-197" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3311-197).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-198" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:3311-198).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@nullFlavor='UNK']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28444" test="cda:code[@nullFlavor='UNK']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @nullFlavor="UNK" Unknown (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008) (CONF:3311-28444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28453" test="count(cda:participant)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:3311-28453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[count(cda:participantRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28454" test="cda:participant[count(cda:participantRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] participantRole (CONF:3311-28454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[@typeCode='DEV']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28458" test="cda:participant[@typeCode='DEV']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] @typeCode="DEV" Device (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90) (CONF:3311-28458).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[@classCode='MANU']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28459" test="cda:participant/cda:participantRole[@classCode='MANU']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="MANU" Manufactured product (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110) (CONF:3311-28459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[count(cda:playingDevice)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28460"
                           test="cda:participant/cda:participantRole[count(cda:playingDevice)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingDevice (CONF:3311-28460).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingDevice[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28461"
                           test="cda:participant/cda:participantRole/cda:playingDevice[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingDevice SHALL contain exactly one [1..1] code (CONF:3311-28461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingDevice/cda:code[@code='450866001']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28462"
                           test="cda:participant/cda:participantRole/cda:playingDevice/cda:code[@code='450866001']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="450866001" Hemodialysis catheter (CONF:3311-28462).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingDevice/cda:code[@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28463"
                           test="cda:participant/cda:participantRole/cda:playingDevice/cda:code[@codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:3311-28463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M322"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M322"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.245' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M323">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.245-2017-04-01-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.245' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M323"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M323"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.246' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M324">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.246-2017-04-01-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.246' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-201" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3311-201).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-202" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3311-202).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.246'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-204"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.246'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-204) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.246" (CONF:3311-210). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-211).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-207" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:3311-207).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-212" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" Procedure (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3311-212).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-213" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3311-213).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-214" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:3311-214).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28434" test="count(cda:participant)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:3311-28434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[count(cda:participantRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28435" test="cda:participant[count(cda:participantRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] participantRole (CONF:3311-28435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[count(cda:playingDevice)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28436"
                           test="cda:participant/cda:participantRole[count(cda:playingDevice)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingDevice (CONF:3311-28436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingDevice[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28437"
                           test="cda:participant/cda:participantRole/cda:playingDevice[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingDevice SHALL contain exactly one [1..1] code (CONF:3311-28437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@nullFlavor='UNK']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28438" test="cda:code[@nullFlavor='UNK']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @nullFlavor="UNK" (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008) (CONF:3311-28438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[@typeCode='DEV']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28439" test="cda:participant[@typeCode='DEV']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] @typeCode="DEV" Device (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90) (CONF:3311-28439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[@classCode='MANU']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28440" test="cda:participant/cda:participantRole[@classCode='MANU']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="MANU" manufactured product (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110) (CONF:3311-28440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingDevice/cda:code[@code='261258006']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28441"
                           test="cda:participant/cda:participantRole/cda:playingDevice/cda:code[@code='261258006']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="261258006" Extracorporeal membrane oxygenation circuit (CONF:3311-28441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingDevice/cda:code[@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28442"
                           test="cda:participant/cda:participantRole/cda:playingDevice/cda:code[@codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:3311-28442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M324"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M324"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.246' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M325">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.246-2017-04-01-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.246' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M325"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M325"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.247' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M326">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.247-2017-04-01-errors"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.247' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-215" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3311-215).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-216" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3311-216).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.247'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-218"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.247'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-218) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.247" (CONF:3311-224). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-225).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-221" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:3311-221).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='PROC'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-226" test="@classCode='PROC'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="PROC" Procedure (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3311-226).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-227" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3311-227).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-228" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:3311-228).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@nullFlavor='UNK']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28443" test="cda:code[@nullFlavor='UNK']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @nullFlavor="UNK" Unknown (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008) (CONF:3311-28443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant[count(cda:participantRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28446"
                           test="not(cda:participant) or cda:participant[count(cda:participantRole)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The participant, if present, SHALL contain exactly one [1..1] participantRole (CONF:3311-28446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant[@typeCode='DEV']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28447"
                           test="not(cda:participant) or cda:participant[@typeCode='DEV']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The participant, if present, SHALL contain exactly one [1..1] @typeCode="DEV" Device (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90) (CONF:3311-28447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[@classCode='MANU']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28448"
                           test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[@classCode='MANU']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="MANU" Manufactured product (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110) (CONF:3311-28448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[count(cda:playingDevice)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28449"
                           test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[count(cda:playingDevice)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingDevice (CONF:3311-28449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole/cda:playingDevice) or cda:participant/cda:participantRole/cda:playingDevice[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28450"
                           test="not(cda:participant/cda:participantRole/cda:playingDevice) or cda:participant/cda:participantRole/cda:playingDevice[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingDevice SHALL contain exactly one [1..1] code (CONF:3311-28450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole/cda:playingDevice/cda:code) or cda:participant/cda:participantRole/cda:playingDevice/cda:code[@code='360064003']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28451"
                           test="not(cda:participant/cda:participantRole/cda:playingDevice/cda:code) or cda:participant/cda:participantRole/cda:playingDevice/cda:code[@code='360064003']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="360064003" Ventricular assist device (CONF:3311-28451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole/cda:playingDevice/cda:code) or cda:participant/cda:participantRole/cda:playingDevice/cda:code[@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28452"
                           test="not(cda:participant/cda:participantRole/cda:playingDevice/cda:code) or cda:participant/cda:participantRole/cda:playingDevice/cda:code[@codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:3311-28452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M326"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M326"/>
   <xsl:template match="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.247' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M327">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.247-2017-04-01-errors-CL"
                  context="cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.247' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M327"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M327"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.244' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M328">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.244-2017-04-01-errors"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.244' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28367" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3311-28367).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28368" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3311-28368).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28369" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:3311-28369).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28370" test="count(cda:participant)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:3311-28370).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[count(cda:participantRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28371" test="cda:participant[count(cda:participantRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] participantRole (CONF:3311-28371).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28372" test="cda:participant/cda:participantRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] id (CONF:3311-28372).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28373" test="cda:participant/cda:participantRole/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:3311-28373).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[count(cda:playingEntity)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28374"
                           test="cda:participant/cda:participantRole[count(cda:playingEntity)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingEntity (CONF:3311-28374).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.12'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28375"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.12'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-28375) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.12" (CONF:3311-28390).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28376" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:3311-28376).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.244'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28377"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.244'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-28377) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.244" (CONF:3311-28392). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-28393).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ACT'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28378" test="@classCode='ACT'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ACT" (CONF:3311-28378).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28379" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" (CONF:3311-28379).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='2341-2']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28380" test="cda:code[@code='2341-2']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="2341-2" Mechanical ventilation initiation (CONF:3311-28380).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28381" test="cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3311-28381).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28382" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:3311-28382).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28383" test="cda:effectiveTime[count(cda:low)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:3311-28383).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant[@typeCode='LOC']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28384" test="cda:participant[@typeCode='LOC']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participant SHALL contain exactly one [1..1] @typeCode="LOC" (CONF:3311-28384).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole[@classCode='SDLOC']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28385"
                           test="cda:participant/cda:participantRole[@classCode='SDLOC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="SDLOC" (CONF:3311-28385).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28386-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id/@root SHALL contain the facility identifier (CONF:3311-28386).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28387" test="cda:participant/cda:participantRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @extension (CONF:3311-28387).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingEntity[@classCode='PLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28388"
                           test="cda:participant/cda:participantRole/cda:playingEntity[@classCode='PLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingEntity SHALL contain exactly one [1..1] @classCode="PLC" (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:3311-28388).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:participant/cda:participantRole/cda:playingEntity[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28389"
                           test="cda:participant/cda:participantRole/cda:playingEntity[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingEntity SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNHealthcareServiceLocationCode urn:oid:2.16.840.1.113883.13.19 DYNAMIC (CONF:3311-28389).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28391" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CodeSystem: HL7NullFlavor urn:oid:2.16.840.1.113883.5.1008) (CONF:3311-28391).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M328"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M328"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.244' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M329">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.244-2017-04-01-errors-CL"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.244' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M329"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M329"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.248' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M330">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.248-2017-04-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.248' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28396" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3311-28396).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28397" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3311-28397).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28398" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:3311-28398).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.248'][@extension='2017-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28399"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.248'][@extension='2017-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3311-28399) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.248" (CONF:3311-28408). SHALL contain exactly one [1..1] @extension="2017-04-01" (CONF:3311-28409).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[count(self::node()[@code='ASSERTION'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28400" test="cda:code[count(self::node()[@code='ASSERTION'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:3311-28400).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28401" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:3311-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28402" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:3311-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='2342-6']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28403" test="cda:value[@xsi:type='CD'][@code='2342-6']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="2342-6" Patient on Airway Pressure Release Ventilation (APRV) or a related mode of mechanical ventilation at the time of VAE (CONF:3311-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28404"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3311-28404).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28405" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3311-28405).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28406" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3311-28406).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-3311-28407" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:3311-28407).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M330"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M330"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.248' and @extension='2017-04-01']]"
                 priority="3999"
                 mode="M331">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.248-2017-04-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.248' and @extension='2017-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M331"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M331"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.249' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M332">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.249-2018-04-01-errors"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.249' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.249'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-28468"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.249'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-28468) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.249" (CONF:3357-28470). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-28471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-28469" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3357-28469).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='ACT'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30599" test="@classCode='ACT'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="ACT" Act (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:3357-30599).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30600" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:3357-30600).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30905-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If this is a Neonatal Intensive Care Unit (NICU) Summary Report then the code *SHALL* be selected from ValueSet NHSNReportNoEventsNICU urn:oid:2.16.840.1.113883.10.20.5.9.19 DYNAMIC (CONF:3357-30905).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30906-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If this is an Intensive Care Unit (ICU) Summary Report then the code *SHALL* be selected from ValueSet NHSNReportNoEventsICU urn:oid:2.16.840.1.113883.10.20.5.9.18 DYNAMIC (CONF:3357-30906).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30907-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If this is a Vascular Access Type Report (VAT) Summary Report then the code *SHALL* be selected from ValueSet NHSNReportNoEventsDialysis urn:oid:2.16.840.1.113883.10.20.5.9.22 DYNAMIC (CONF:3357-30907).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30908-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If this is a Prevention Process and Outcome Measures (POM) Summary Report then the code *SHALL* be selected from ValueSet NHSNReportNoEventsMDRO urn:oid:2.16.840.1.113883.10.20.5.9.21 DYNAMIC (CONF:3357-30908).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30909-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If this is a Specialty Care Area (SCA) Summary Report then the code *SHALL* be selected from ValueSet NHSNReportNoEventsSCA urn:oid:2.16.840.1.113883.10.20.5.9.20 DYNAMIC (CONF:3357-30909).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M332"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M332"/>
   <xsl:template match="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.249' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M333">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.249-2018-04-01-errors-CL"
                  context="cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.249' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M333"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M333"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.41' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M334">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.41-2018-04-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.41' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22431"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22431) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.28" (CONF:86-22432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22433" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22434" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22435" test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] id (CONF:86-22435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22436"
                           test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" not applicable (CONF:86-22436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22437"
                           test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22437) such that it SHALL contain exactly one [1..1] @typeCode="SBJ" Subject (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22438). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22439). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22440). This associatedEntity SHALL contain exactly one [1..1] @classCode="PRS" Person (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22441). This associatedEntity SHALL contain exactly one [1..1] code (CONF:86-22442). This code SHALL contain exactly one [1..1] @code="389109008" Group (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-22443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22444"
                           test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22444) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22445). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22446). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22447). This associatedEntity SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-22448). This associatedEntity SHALL contain exactly one [1..1] id (CONF:86-22449). This id SHALL contain exactly one [1..1] @root (CONF:86-22450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22451" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:86-22451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22452" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:86-22452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22453" test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] @classCode="CASE" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22454"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNPopulationSummaryReportTypeCode urn:oid:2.16.840.1.114222.4.11.3595 STATIC (CONF:86-22454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22456"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] effectiveTime (CONF:86-22456).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22457"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-22457).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22458"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:86-22458).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22459-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The author SHALL represent the software forming the message (CONF:86-22459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-28323"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-28323) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.3.3" (CONF:3357-28324).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22808" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:3357-22808).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22809" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:3357-22809).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22810"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code (CONF:3357-22810).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22813" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3357-22813).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22814" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3357-22814).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.48' and @extension='2018-04-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22815"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.48' and @extension='2018-04-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-22815) such that it SHALL contain exactly one [1..1] Summary Data Section (NICU) (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.48:2018-04-01) (CONF:3357-22816).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.41'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22805"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.41'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-22805) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.41" (CONF:3357-22806). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30595).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@code='1881-2']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22811"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@code='1881-2']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="1881-2" Summary data reporting catheter and ventilator use in a NICU (CONF:3357-22811).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22812"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3357-22812).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30867" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:3357-30867).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M334"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M334"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.41' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M335">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.41-2018-04-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.41' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M335"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M335"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.48' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M336">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.48-2018-04-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.48' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.48'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22837"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.48'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-22837) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.48" (CONF:3357-22838). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30598).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22839" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3357-22839).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.191']])=1]) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22841"
                           test="count(cda:entry[count(cda:encounter[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.191']])=1]) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:3357-22841) such that it SHALL contain exactly one [1..1] Summary Encounter (NICU) (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.191) (CONF:3357-22842).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51900-9']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22840" test="cda:code[@code='51900-9']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51900-9" Summary Data Section (CONF:3357-22840).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-28368" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3357-28368).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M336"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M336"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.48' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M337">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.48-2018-04-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.48' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M337"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M337"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.62' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M338">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.62-2018-04-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.62' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.62'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30604"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.62'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30604) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.62" (CONF:3357-30608). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30609).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30605" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3357-30605).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.249' and @extension='2018-04-01']])=1]) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30606"
                           test="count(cda:entry[count(cda:act[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.249' and @extension='2018-04-01']])=1]) &gt; 0"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:3357-30606) such that it SHALL contain exactly one [1..1] Report No Events (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.249:2018-04-01) (CONF:3357-30910).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='90252-8']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30610" test="cda:code[@code='90252-8']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="90252-8" Report No Events section (CONF:3357-30610).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30611" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3357-30611).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M338"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M338"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.62' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M339">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.62-2018-04-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.62' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M339"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M339"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.250' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M340">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.250-2018-04-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.250' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30614"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30614) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:3357-30623).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30615" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:3357-30615).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30616" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3357-30616).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30617" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3357-30617).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30618" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:3357-30618).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.250'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30619"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.250'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30619) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.250" (CONF:3357-30630). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30631).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30620" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3357-30620).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30621" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3357-30621).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30622" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:3357-30622).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30624" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:3357-30624).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30625" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:3357-30625).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30626" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:3357-30626).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30627" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:3357-30627).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][count(self::node()[@code='3055-1'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30628"
                           test="cda:value[@xsi:type='CD'][count(self::node()[@code='3055-1'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="3055-1" Known or suspected Munchausen Syndrome by Proxy during current admission (CONF:3357-30628).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30629"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3357-30629).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M340"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M340"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.250' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M341">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.250-2018-04-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.250' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M341"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M341"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.251' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M342">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.251-2018-04-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.251' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30632"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30632) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:3357-30638).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30633" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:3357-30633).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30634" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3357-30634).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30635" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3357-30635).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30636" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:3357-30636).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.251'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30637"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.251'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30637) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.251" (CONF:3357-30645). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30646).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30639" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:3357-30639).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30640" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:3357-30640).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30641" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:3357-30641).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30642" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:3357-30642).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][count(self::node()[@code='3056-9'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30643"
                           test="cda:value[@xsi:type='CD'][count(self::node()[@code='3056-9'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="3056-9" Observed or suspected patient injection into vascular line(s) within the BSI infection window (CONF:3357-30643).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30644"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3357-30644).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30647" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3357-30647).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30648" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3357-30648).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30649" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:3357-30649).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M342"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M342"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.251' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M343">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.251-2018-04-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.251' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M343"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M343"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.252' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M344">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.252-2018-04-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.252' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30650"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30650) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:3357-30656).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30651" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:3357-30651).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30652" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3357-30652).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30653" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3357-30653).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30654" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:3357-30654).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.252'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30655"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.252'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30655) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.252" (CONF:3357-30663). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30664).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30657" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:3357-30657).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30658" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:3357-30658).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30659" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:3357-30659).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30660" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:3357-30660).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][count(self::node()[@code='3057-7'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30661"
                           test="cda:value[@xsi:type='CD'][count(self::node()[@code='3057-7'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="3057-7" Epidermolysis bullosa during current admission (CONF:3357-30661).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30662"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3357-30662).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30665" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3357-30665).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30666" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3357-30666).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30667" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:3357-30667).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M344"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M344"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.252' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M345">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.252-2018-04-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.252' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M345"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M345"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.33' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M346">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.33-2018-04-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.33' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.138']])=1])[. &gt;= 1] &lt;= 2"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-23203"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.138']])=1])[. &gt;= 1] &lt;= 2"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one and not more than 2 entry (CONF:3357-23203) such that it SHALL contain exactly one [1..1] Infection Risk Factors Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.138) (CONF:3357-23204).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.33'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22266"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.33'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-22266) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.33" (CONF:3357-22267). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-28433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22268" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3357-22268).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.245' and @extension='2017-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-28361"
                           test="count(cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.245' and @extension='2017-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3357-28361) such that it SHALL contain exactly one [1..1] Hemodialysis Catheter Present (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.245:2017-04-01) (CONF:3357-28464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.247' and @extension='2017-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-28362"
                           test="count(cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.247' and @extension='2017-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3357-28362) such that it SHALL contain exactly one [1..1] Ventricular Assist Device (VAD) Present (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.247:2017-04-01) (CONF:3357-28465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.246' and @extension='2017-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-28363"
                           test="count(cda:entry[count(cda:procedure[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.246' and @extension='2017-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3357-28363) such that it SHALL contain exactly one [1..1] Extracorporeal Life Support Present (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.246:2017-04-01) (CONF:3357-28466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:code[document('hai_voc.xml')/voc:systems/voc:system/voc:code[@ICU-or-Other='X']/@value=@code]) or (count(cda:entry/cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.138'][cda:value/@code='1002-5' or cda:value/@code='1003-3' or cda:value/@code='1005-8'])=1)"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-23205-c"
                           test="not(/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:code[document('hai_voc.xml')/voc:systems/voc:system/voc:code[@ICU-or-Other='X']/@value=@code]) or (count(cda:entry/cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.138'][cda:value/@code='1002-5' or cda:value/@code='1003-3' or cda:value/@code='1005-8'])=1)"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the location type represents an ICU/Other location (ICU or any other location except for SCA or NICU), this entry element SHALL be present containing an Infection Risk Factors Observation representing whether a central line was present (CONF:3357-23205).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:code[document('hai_voc.xml')/voc:systems/voc:system/voc:code[@SCA='X']/@value=@code]) or (count(cda:entry/cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.138'][cda:value/@code='1003-3'])=1 and count(cda:entry/cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.138'][cda:value/@code='1005-8'])=1)"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-23206-c"
                           test="not(/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:code[document('hai_voc.xml')/voc:systems/voc:system/voc:code[@SCA='X']/@value=@code]) or (count(cda:entry/cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.138'][cda:value/@code='1003-3'])=1 and count(cda:entry/cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.138'][cda:value/@code='1005-8'])=1)"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the location type represents an SCA location, an entry element SHALL be present containing an Infection Risk Factors Observation representing whether a permanent central line was present, and an entry element containing an Infection Risk Factors Observation representing whether a Temporary Central Line was present (CONF:3357-23206).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:code[document('hai_voc.xml')/voc:systems/voc:system/voc:code[@NICU='X']/@value=@code]) or (count(cda:entry/cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.138'][cda:value/@code='1002-5' or cda:value/@code='1003-3' or cda:value/@code='1005-8'])=1)"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-23207-c"
                           test="not(/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:code[document('hai_voc.xml')/voc:systems/voc:system/voc:code[@NICU='X']/@value=@code]) or (count(cda:entry/cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.138'][cda:value/@code='1002-5' or cda:value/@code='1003-3' or cda:value/@code='1005-8'])=1)"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the location type represents an NICU location, an entry element SHALL be present containing an Infection Risk Factors Observation representing whether a central line was present (CONF:3357-23207).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51898-5']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22269" test="cda:code[@code='51898-5']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51898-5" Risk Factors Section (CONF:3357-22269).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-28360" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3357-28360).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:code[document('hai_voc.xml')/voc:systems/voc:system/voc:code[@NICU='X']/@value=@code]) or (count(cda:entry/cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.137'][cda:code/@code='364589006'])=1)"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-23210-c"
                           test="not(/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:code[document('hai_voc.xml')/voc:systems/voc:system/voc:code[@NICU='X']/@value=@code]) or (count(cda:entry/cda:observation[cda:templateId/@root='2.16.840.1.113883.10.20.5.6.137'][cda:code/@code='364589006'])=1)"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If the location type represents an NICU location, an entry element SHALL be present containing an Infection Risk Factors Measurement Observation representing the birth weight (CONF:3357-23210).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.250' and @extension='2018-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30668"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.250' and @extension='2018-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3357-30668) such that it SHALL contain exactly one [1..1] Known or Suspected Munchhausen's By Proxy Observation (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.250:2018-04-01) (CONF:3357-30669).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.252' and @extension='2018-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30670"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.252' and @extension='2018-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3357-30670) such that it SHALL contain exactly one [1..1] Epidermolysis Bullosa Observation (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.252:2018-04-01) (CONF:3357-30671).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.251' and @extension='2018-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30672"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.251' and @extension='2018-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3357-30672) such that it SHALL contain exactly one [1..1] Observed or Suspected Patient Injection into Vascular Line Observation (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.251:2018-04-01) (CONF:3357-30673).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.253' and @extension='2018-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30693"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.253' and @extension='2018-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3357-30693) such that it SHALL contain exactly one [1..1] Pus Present in Specimen Site and Matching Organism in Blood and Specimen Observation (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.253:2018-04-01) (CONF:3357-30694).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M346"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M346"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.33' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M347">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.33-2018-04-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.33' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M347"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M347"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.32' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M348">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.32-2018-04-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.32' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22415"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22415) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.27" (CONF:86-22416).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22417" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22417).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22418" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22418).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22419" test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain at least one [1..*] id (CONF:86-22419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22420" test="cda:recordTarget/cda:patientRole/cda:id[@root]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @root (CONF:86-22420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22421" test="cda:recordTarget/cda:patientRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @extension (CONF:86-22421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22422" test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] patient (CONF:86-22422).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22424"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] administrativeGenderCode (CONF:86-22424).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22425"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This administrativeGenderCode SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet Administrative Gender (HL7 V3) urn:oid:2.16.840.1.113883.1.11.1 STATIC (CONF:86-22425).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22426"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] birthTime (CONF:86-22426).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22427"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This birthTime SHALL contain exactly one [1..1] @value (CONF:86-22427).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-28307"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-28307) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.3.3" (CONF:3357-28308).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:componentOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22462" test="count(cda:componentOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] componentOf (CONF:3357-22462).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf[count(cda:encompassingEncounter)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22463" test="cda:componentOf[count(cda:encompassingEncounter)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This componentOf SHALL contain exactly one [1..1] encompassingEncounter (CONF:3357-22463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22464"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] effectiveTime (CONF:3357-22464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22465"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:3357-22465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22469"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] location (CONF:3357-22469).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22470"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This location SHALL contain exactly one [1..1] healthCareFacility (CONF:3357-22470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22471"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] id (CONF:3357-22471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22476" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3357-22476).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22477" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3357-22477).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.33' and @extension='2018-04-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22478"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.33' and @extension='2018-04-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-22478) such that it SHALL contain exactly one [1..1] Infection Risk Factors Section in a BSI Report (V3) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.33:2018-04-01) (CONF:3357-22479).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.38']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22480"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.38']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-22480) such that it SHALL contain exactly one [1..1] Infection Details Section in a BSI Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.38) (CONF:3357-22481).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22482"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.45']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-22482) such that it SHALL contain exactly one [1..1] Findings Section in an Infection-Type Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.45) (CONF:3357-22483).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.32'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.32'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-22460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.32" (CONF:3357-22461). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-28432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22466"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @value (CONF:3357-22466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high) or cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22468"
                           test="not(cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high) or cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:high[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The high, if present, SHALL contain exactly one [1..1] @value (CONF:3357-22468).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-23359-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of the admission date SHALL NOT be earlier than January 1, 1986; SHALL NOT be earlier than the date of birth; and SHALL NOT be later than the event date (CONF:3357-23359).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22472"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:3357-22472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22473"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @extension (CONF:3357-22473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22474"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNHealthcareServiceLocationCode urn:oid:2.16.840.1.113883.13.19 DYNAMIC (CONF:3357-22474).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30865" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:3357-30865).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M348"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M348"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.32' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M349">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.32-2018-04-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.32' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M349"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M349"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.253' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M350">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.253-2018-04-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.253' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30674"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.22.4.4'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30674) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.22.4.4" (CONF:3357-30680).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30675" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:3357-30675).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30676" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3357-30676).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30677" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3357-30677).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30678" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:3357-30678).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.253'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30679"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.253'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30679) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.253" (CONF:3357-30687). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30688).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30681" test="cda:id[@nullFlavor='NA']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" (CONF:3357-30681).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30682" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:3357-30682).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30683" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:3357-30683).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30684" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14 STATIC) (CONF:3357-30684).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][count(self::node()[@code='3059-3'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30685"
                           test="cda:value[@xsi:type='CD'][count(self::node()[@code='3059-3'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="3059-3" Pus present at vascular specimen collection site and matching organism identified in blood and from site specific specimen(s) (CONF:3357-30685).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30686"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3357-30686).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30689" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3357-30689).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30690" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3357-30690).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30691" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:3357-30691).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant[count(cda:participantRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30696"
                           test="not(cda:participant) or cda:participant[count(cda:participantRole)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The participant, if present, SHALL contain exactly one [1..1] participantRole (CONF:3357-30696).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[count(cda:playingDevice)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30697"
                           test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[count(cda:playingDevice)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] playingDevice (CONF:3357-30697).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant) or cda:participant[@typeCode='DEV']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30698"
                           test="not(cda:participant) or cda:participant[@typeCode='DEV']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The participant, if present, SHALL contain exactly one [1..1] @typeCode="DEV" Device (CONF:3357-30698).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole/cda:playingDevice) or cda:participant/cda:participantRole/cda:playingDevice[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30700"
                           test="not(cda:participant/cda:participantRole/cda:playingDevice) or cda:participant/cda:participantRole/cda:playingDevice[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This playingDevice SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNVascularSpecimenCollectionSite urn:oid:2.16.840.1.113883.10.20.5.9.24 DYNAMIC (CONF:3357-30700).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[@classCode='MANU']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30871"
                           test="not(cda:participant/cda:participantRole) or cda:participant/cda:participantRole[@classCode='MANU']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This participantRole SHALL contain exactly one [1..1] @classCode="MANU" Manufactured device (CONF:3357-30871).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M350"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M350"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.253' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M351">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.253-2018-04-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.253' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M351"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M351"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.53' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M352">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.53-2018-04-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.53' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22415"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22415) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.27" (CONF:86-22416).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22417" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22417).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22418" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22418).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22419" test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain at least one [1..*] id (CONF:86-22419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22420" test="cda:recordTarget/cda:patientRole/cda:id[@root]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @root (CONF:86-22420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22421" test="cda:recordTarget/cda:patientRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @extension (CONF:86-22421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22422" test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] patient (CONF:86-22422).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22424"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] administrativeGenderCode (CONF:86-22424).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22425"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This administrativeGenderCode SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet Administrative Gender (HL7 V3) urn:oid:2.16.840.1.113883.1.11.1 STATIC (CONF:86-22425).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22426"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] birthTime (CONF:86-22426).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22427"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This birthTime SHALL contain exactly one [1..1] @value (CONF:86-22427).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30728"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30728) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.3.3" (CONF:3357-30745).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30729" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:3357-30729).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:componentOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30730" test="count(cda:componentOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] componentOf (CONF:3357-30730).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf[count(cda:encompassingEncounter)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30731" test="cda:componentOf[count(cda:encompassingEncounter)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This componentOf SHALL contain exactly one [1..1] encompassingEncounter (CONF:3357-30731).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30732"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] effectiveTime (CONF:3357-30732).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30733"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:3357-30733).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30747" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3357-30747).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30748" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3357-30748).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.64' and @extension='2018-04-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30749"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.64' and @extension='2018-04-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-30749) such that it SHALL contain exactly one [1..1] Infection Details in Late Onset Sepsis Report (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.64:2018-04-01) (CONF:3357-30750).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.65' and @extension='2018-04-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30751"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.65' and @extension='2018-04-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-30751) such that it SHALL contain exactly one [1..1] Risk Factors Section (LOS/Men) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.65:2018-04-01) (CONF:3357-30752).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30822"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] location (CONF:3357-30822).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30823"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This location SHALL contain exactly one [1..1] healthCareFacility (CONF:3357-30823).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30824"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] id (CONF:3357-30824).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30825"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:3357-30825).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30826"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @extension (CONF:3357-30826).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30827"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.13.19']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNHealthcareServiceLocationCode urn:oid:2.16.840.1.113883.13.19 (CONF:3357-30827).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.53'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30873"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.53'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30873) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.53" (CONF:3357-30874). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30875).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30897" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:3357-30897).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30898" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:3357-30898).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M352"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M352"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.53' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M353">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.53-2018-04-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.53' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M353"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M353"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.64' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M354">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.64-2018-04-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.64' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.64'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30742"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.64'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30742) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.64" (CONF:3357-30743). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30744).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30784" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3357-30784).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51899-3']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30785" test="cda:code[@code='51899-3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51899-3" Details Section (CONF:3357-30785).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30786" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3357-30786).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.120']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30787"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.120']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3357-30787) such that it SHALL contain exactly one [1..1] Death Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.120) (CONF:3357-30788).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30816"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.139']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3357-30816) such that it SHALL contain exactly one [1..1] Infection-Type Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.139) (CONF:3357-30817).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.257' and @extension='2018-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30818"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.257' and @extension='2018-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3357-30818) such that it SHALL contain exactly one [1..1] Inborn/Outborn Observation (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.257:2018-04-01) (CONF:3357-30819).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M354"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M354"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.65' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M355">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.65-2018-04-01-errors"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.65' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21953" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-21953).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21954" test="cda:code[@code and @codeSystem='2.16.840.1.113883.6.1']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1 STATIC) (CONF:86-21954).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21955" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-21955).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:text)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21956" test="count(cda:text)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] text (CONF:86-21956).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21957" test="count(cda:entry) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] entry (CONF:86-21957).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-21958"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.26'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-21958) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.26" (CONF:86-21959).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.65'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30753"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.5.65'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30753) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.5.65" (CONF:3357-30756). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30757).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.137']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30754"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.137']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3357-30754) such that it SHALL contain exactly one [1..1] Infection Risk Factors Measurement Observation (identifier: urn:oid:2.16.840.1.113883.10.20.5.6.137) (CONF:3357-30755).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30758" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3357-30758).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51898-5']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30759" test="cda:code[@code='51898-5']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51898-5" Risk Factors Section (CONF:3357-30759).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30760" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3357-30760).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.255' and @extension='2018-04-01']])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30780"
                           test="count(cda:entry[count(cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.255' and @extension='2018-04-01']])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] entry (CONF:3357-30780) such that it SHALL contain exactly one [1..1] Gestational Age at Birth Observation (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.6.255:2018-04-01) (CONF:3357-30781).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M355"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M355"/>
   <xsl:template match="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.65' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M356">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.5.65-2018-04-01-errors-CL"
                  context="cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.65' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M356"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M356"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.255' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M357">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.255-2018-04-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.255' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.255'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30764"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.6.255'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30764) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.255" (CONF:3357-30773). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30774).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30765" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3357-30765).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='PQ'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30768" test="count(cda:value[@xsi:type='PQ'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="PQ" (CONF:3357-30768).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30769" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6) (CONF:3357-30769).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30770" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001) (CONF:3357-30770).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd='false'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30771" test="@negationInd='false'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd="false" (CONF:3357-30771).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='76516-4']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30775" test="cda:code[@code='76516-4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="76516-4" Gestational age at birth (CONF:3357-30775).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.6.1']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30776" test="cda:code[@codeSystem='2.16.840.1.113883.6.1']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.1" (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:3357-30776).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='PQ'][@unit='d']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30779" test="cda:value[@xsi:type='PQ'][@unit='d']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @unit="d" Days (CodeSystem: UCUM urn:oid:2.16.840.1.113883.6.8) (CONF:3357-30779).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M357"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M357"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.255' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M358">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.255-2018-04-01-errors-CL"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.255' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M358"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M358"/>
   <xsl:template match="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.257' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M359">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.6.257-2018-04-01-errors"
                  context="cda:observation[cda:templateId[@root='2.16.840.1.113883.10.20.5.6.257' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="@classCode='OBS'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30831" test="@classCode='OBS'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @classCode="OBS" Observation (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:3357-30831).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@moodCode='EVN'"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30832" test="@moodCode='EVN'" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @moodCode="EVN" Event (CodeSystem: HL7ActMood urn:oid:2.16.840.1.113883.5.1001 STATIC) (CONF:3357-30832).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30834" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:3357-30834).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:statusCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30835" test="count(cda:statusCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] statusCode (CONF:3357-30835).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:value[@xsi:type='CD'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30836" test="count(cda:value[@xsi:type='CD'])=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] value with @xsi:type="CD" (CONF:3357-30836).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30837" test="count(cda:templateId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30837).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:templateId[@root='2.16.840.1.113883.10.20.5.6.257']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30838"
                           test="cda:templateId[@root='2.16.840.1.113883.10.20.5.6.257']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This templateId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.6.257" (CONF:3357-30838).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:templateId[@extension='2018-04-01']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30839" test="cda:templateId[@extension='2018-04-01']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This templateId SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30839).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='ASSERTION']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30840" test="cda:code[@code='ASSERTION']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="ASSERTION" Assertion (CONF:3357-30840).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem='2.16.840.1.113883.5.4']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30841" test="cda:code[@codeSystem='2.16.840.1.113883.5.4']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.5.4" (CodeSystem: HL7ActCode urn:oid:2.16.840.1.113883.5.4) (CONF:3357-30841).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:statusCode[@code='completed']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30872" test="cda:statusCode[@code='completed']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This statusCode SHALL contain exactly one [1..1] @code="completed" Completed (CodeSystem: HL7ActStatus urn:oid:2.16.840.1.113883.5.14) (CONF:3357-30872).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="@negationInd"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30902" test="@negationInd" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] @negationInd (CONF:3357-30902).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@code='445087001']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30903" test="cda:value[@xsi:type='CD'][@code='445087001']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @code="445087001" Born before arrival to hospital (situation) (CONF:3357-30903).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.96']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30904"
                           test="cda:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.96']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This value SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.96" (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96) (CONF:3357-30904).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M359"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M359"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.40' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M360">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.40-2018-04-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.40' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22431"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22431) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.28" (CONF:86-22432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22433" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22434" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22435" test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] id (CONF:86-22435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22436"
                           test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" not applicable (CONF:86-22436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22437"
                           test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22437) such that it SHALL contain exactly one [1..1] @typeCode="SBJ" Subject (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22438). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22439). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22440). This associatedEntity SHALL contain exactly one [1..1] @classCode="PRS" Person (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22441). This associatedEntity SHALL contain exactly one [1..1] code (CONF:86-22442). This code SHALL contain exactly one [1..1] @code="389109008" Group (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-22443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22444"
                           test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22444) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22445). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22446). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22447). This associatedEntity SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-22448). This associatedEntity SHALL contain exactly one [1..1] id (CONF:86-22449). This id SHALL contain exactly one [1..1] @root (CONF:86-22450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22451" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:86-22451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22452" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:86-22452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22453" test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] @classCode="CASE" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22454"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNPopulationSummaryReportTypeCode urn:oid:2.16.840.1.114222.4.11.3595 STATIC (CONF:86-22454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22456"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] effectiveTime (CONF:86-22456).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22457"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-22457).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22458"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:86-22458).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22459-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The author SHALL represent the software forming the message (CONF:86-22459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-28321"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-28321) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.3.3" (CONF:3357-28322).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22795" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3357-22795).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22796" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3357-22796).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.47']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22797"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.47']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-22797) such that it SHALL contain exactly one [1..1] Summary Data Section (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.47) (CONF:3357-22798).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22800" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:3357-22800).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22801" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:3357-22801).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22802"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code (CONF:3357-22802).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.40'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22793"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.40'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-22793) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.40" (CONF:3357-22794). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30596).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@code='1879-6']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22803"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@code='1879-6']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="1879-6" Summary data reporting catheter and ventilator use in an ICU (CONF:3357-22803).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22804"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3357-22804).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30866" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:3357-30866).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M360"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M360"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.40' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M361">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.40-2018-04-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.40' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M361"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M361"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.42' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M362">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.42-2018-04-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.42' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22431"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22431) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.28" (CONF:86-22432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22433" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22434" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22435" test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] id (CONF:86-22435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22436"
                           test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" not applicable (CONF:86-22436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22437"
                           test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22437) such that it SHALL contain exactly one [1..1] @typeCode="SBJ" Subject (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22438). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22439). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22440). This associatedEntity SHALL contain exactly one [1..1] @classCode="PRS" Person (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22441). This associatedEntity SHALL contain exactly one [1..1] code (CONF:86-22442). This code SHALL contain exactly one [1..1] @code="389109008" Group (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-22443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22444"
                           test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22444) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22445). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22446). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22447). This associatedEntity SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-22448). This associatedEntity SHALL contain exactly one [1..1] id (CONF:86-22449). This id SHALL contain exactly one [1..1] @root (CONF:86-22450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22451" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:86-22451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22452" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:86-22452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22453" test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] @classCode="CASE" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22454"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNPopulationSummaryReportTypeCode urn:oid:2.16.840.1.114222.4.11.3595 STATIC (CONF:86-22454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22456"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] effectiveTime (CONF:86-22456).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22457"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-22457).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22458"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:86-22458).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22459-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The author SHALL represent the software forming the message (CONF:86-22459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-28327"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-28327) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.3.3" (CONF:3357-28328).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22846" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:3357-22846).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22847" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:3357-22847).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22848"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code (CONF:3357-22848).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22851" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3357-22851).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22852" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3357-22852).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.47']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22853"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.47']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-22853) such that it SHALL contain exactly one [1..1] Summary Data Section (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.47) (CONF:3357-22854).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.42'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22843"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.42'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-22843) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.42" (CONF:3357-22844). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30594).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@code='1880-4']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22849"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@code='1880-4']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="1880-4" Summary data reporting catheter and ventilator use in a SCA (CONF:3357-22849).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22850"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3357-22850).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30869" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:3357-30869).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M362"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M362"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.42' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M363">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.42-2018-04-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.42' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M363"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M363"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.43' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M364">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.43-2018-04-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.43' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22431"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22431) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.28" (CONF:86-22432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22433" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22434" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22435" test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] id (CONF:86-22435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22436"
                           test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" not applicable (CONF:86-22436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22437"
                           test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22437) such that it SHALL contain exactly one [1..1] @typeCode="SBJ" Subject (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22438). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22439). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22440). This associatedEntity SHALL contain exactly one [1..1] @classCode="PRS" Person (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22441). This associatedEntity SHALL contain exactly one [1..1] code (CONF:86-22442). This code SHALL contain exactly one [1..1] @code="389109008" Group (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-22443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22444"
                           test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22444) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22445). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22446). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22447). This associatedEntity SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-22448). This associatedEntity SHALL contain exactly one [1..1] id (CONF:86-22449). This id SHALL contain exactly one [1..1] @root (CONF:86-22450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22451" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:86-22451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22452" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:86-22452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22453" test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] @classCode="CASE" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22454"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNPopulationSummaryReportTypeCode urn:oid:2.16.840.1.114222.4.11.3595 STATIC (CONF:86-22454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22456"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] effectiveTime (CONF:86-22456).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22457"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-22457).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22458"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:86-22458).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22459-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The author SHALL represent the software forming the message (CONF:86-22459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30549"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-30549) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.3.3" (CONF:3357-30550).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22889" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:3357-22889).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22890" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:3357-22890).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22891"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code (CONF:3357-22891).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22894" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3357-22894).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22895" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3357-22895).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.49' and @extension='2014-12-01']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22896"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.49' and @extension='2014-12-01']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-22896) such that it SHALL contain exactly one [1..1] Summary Data Section (POM) (V2) (identifier: urn:hl7ii:2.16.840.1.113883.10.20.5.5.49:2014-12-01) (CONF:3357-30433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.43'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22886"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.43'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-22886) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.43" (CONF:3357-22887). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30476).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@code='1884-6']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22892"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@code='1884-6']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="1884-6" Summary data reporting Active Surveillance Testing (CONF:3357-22892).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22893"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3357-22893).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30868" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:3357-30868).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M364"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M364"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.43' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M365">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.43-2018-04-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.43' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M365"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M365"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.45' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M366">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.45-2018-04-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.45' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22431"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22431) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.28" (CONF:86-22432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22433" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22434" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22435" test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] id (CONF:86-22435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22436"
                           test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" not applicable (CONF:86-22436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22437"
                           test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22437) such that it SHALL contain exactly one [1..1] @typeCode="SBJ" Subject (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22438). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22439). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22440). This associatedEntity SHALL contain exactly one [1..1] @classCode="PRS" Person (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22441). This associatedEntity SHALL contain exactly one [1..1] code (CONF:86-22442). This code SHALL contain exactly one [1..1] @code="389109008" Group (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-22443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22444"
                           test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22444) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22445). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22446). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22447). This associatedEntity SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-22448). This associatedEntity SHALL contain exactly one [1..1] id (CONF:86-22449). This id SHALL contain exactly one [1..1] @root (CONF:86-22450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22451" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:86-22451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22452" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:86-22452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22453" test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] @classCode="CASE" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22454"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNPopulationSummaryReportTypeCode urn:oid:2.16.840.1.114222.4.11.3595 STATIC (CONF:86-22454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22456"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] effectiveTime (CONF:86-22456).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22457"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-22457).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22458"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:86-22458).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22459-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The author SHALL represent the software forming the message (CONF:86-22459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-28329"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.3.3'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-28329) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.3.3" (CONF:3357-28330).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22924" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:3357-22924).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22925" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:3357-22925).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22926"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code (CONF:3357-22926).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22929" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3357-22929).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22930" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3357-22930).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.50']])=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22931"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section[cda:templateId[@root='2.16.840.1.113883.10.20.5.5.50']])=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-22931) such that it SHALL contain exactly one [1..1] Summary Data Section (VAT) (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.50) (CONF:3357-22932).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.45'][@extension='2018-04-01'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22921"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.45'][@extension='2018-04-01'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-22921) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.45" (CONF:3357-22922). SHALL contain exactly one [1..1] @extension="2018-04-01" (CONF:3357-30860).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@code='2316-8']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22927"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@code='2316-8']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="2316-8" Summary dialysis data reporting vascular access types in maintenance (chronic) hemodialysis patients (CONF:3357-22927).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-22928"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3357-22928).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-30870" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:3357-30870).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M366"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M366"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.45' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M367">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.45-2018-04-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.45' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M367"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M367"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.47' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M368">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.47-2018-04-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.47' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22415"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.27'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22415) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.27" (CONF:86-22416).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22417" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22417).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22418" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22418).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22419" test="cda:recordTarget/cda:patientRole[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain at least one [1..*] id (CONF:86-22419).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22420" test="cda:recordTarget/cda:patientRole/cda:id[@root]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @root (CONF:86-22420).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@extension]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22421" test="cda:recordTarget/cda:patientRole/cda:id[@extension]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>Such ids SHALL contain exactly one [1..1] @extension (CONF:86-22421).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22422" test="cda:recordTarget/cda:patientRole[count(cda:patient)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] patient (CONF:86-22422).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22424"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:administrativeGenderCode)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] administrativeGenderCode (CONF:86-22424).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22425"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode[@code and @code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.113883.1.11.1']/voc:code/@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This administrativeGenderCode SHALL contain exactly one [1..1] @code, which SHALL be selected from ValueSet Administrative Gender (HL7 V3) urn:oid:2.16.840.1.113883.1.11.1 STATIC (CONF:86-22425).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22426"
                           test="cda:recordTarget/cda:patientRole/cda:patient[count(cda:birthTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patient SHALL contain exactly one [1..1] birthTime (CONF:86-22426).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22427"
                           test="cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This birthTime SHALL contain exactly one [1..1] @value (CONF:86-22427).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21968"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-21968) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.2.2" (CONF:3357-21969).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:componentOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21756" test="count(cda:componentOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] componentOf (CONF:3357-21756).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf[count(cda:encompassingEncounter)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21757" test="cda:componentOf[count(cda:encompassingEncounter)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This componentOf SHALL contain exactly one [1..1] encompassingEncounter (CONF:3357-21757).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21758"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] effectiveTime (CONF:3357-21758).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21759"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:3357-21759).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21760"
                           test="cda:componentOf/cda:encompassingEncounter[count(cda:location)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This encompassingEncounter SHALL contain exactly one [1..1] location (CONF:3357-21760).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21761"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location[count(cda:healthCareFacility)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This location SHALL contain exactly one [1..1] healthCareFacility (CONF:3357-21761).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21762"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This healthCareFacility SHALL contain exactly one [1..1] id (CONF:3357-21762).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21764" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3357-21764).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21765" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3357-21765).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section)=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21766"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section)=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-21766) such that it SHALL contain exactly one [1..1] Surgical Site Infection Details Section in an OPC Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.53) (CONF:3357-21769).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section)=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21767"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section)=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-21767) such that it SHALL contain exactly one [1..1] Findings Section in an OPC Report (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.55) (CONF:3357-21777).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component[count(cda:section)=1])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21768"
                           test="cda:component/cda:structuredBody[count(cda:component[count(cda:section)=1])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-21768) such that it SHALL contain exactly one [1..1] Other Event Details Section (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.54) (CONF:3357-21778).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.47'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21755"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.47'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-21755) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.47" (CONF:3357-21770).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@value]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21771"
                           test="cda:componentOf/cda:encompassingEncounter/cda:effectiveTime/cda:low[@value]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This low SHALL contain exactly one [1..1] @value (CONF:3357-21771).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21772"
                           test="cda:componentOf/cda:encompassingEncounter/cda:location/cda:healthCareFacility/cda:id[@root]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root (CONF:3357-21772).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M368"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M368"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.47' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M369">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.47-2018-04-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.47' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M369"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M369"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.48' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M370">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.48-2018-04-01-errors"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.48' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:choose>
         <xsl:when test="count(cda:realmCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18431" test="count(cda:realmCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] realmCode (CONF:86-18431).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:realmCode[count(self::node()[@code='US'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18432" test="cda:realmCode[count(self::node()[@code='US'])=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This realmCode SHALL contain exactly one [1..1] @code="US" (CONF:86-18432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:code)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18433" test="count(cda:code)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] code (CONF:86-18433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@code='51897-7']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18434" test="cda:code[@code='51897-7']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="51897-7" Healthcare Associated Infection Report (CONF:86-18434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18435" test="count(cda:title)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title (CONF:86-18435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:effectiveTime)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18436" test="count(cda:effectiveTime)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] effectiveTime (CONF:86-18436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:confidentialityCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18437-c" test="count(cda:confidentialityCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] confidentialityCode (CONF:86-18437).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18438"
                           test="cda:confidentialityCode[count(self::node()[@code='N'])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This confidentialityCode SHALL contain exactly one [1..1] @code="N" Normal (CodeSystem: HL7Confidentiality urn:oid:2.16.840.1.113883.5.25 STATIC) (CONF:86-18438).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:languageCode)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18439" test="count(cda:languageCode)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] languageCode (CONF:86-18439).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:languageCode[@code='en-US']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18440" test="cda:languageCode[@code='en-US']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This languageCode SHALL contain exactly one [1..1] @code="en-US" (CONF:86-18440).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:setId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18441" test="count(cda:setId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] setId (CONF:86-18441).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:versionNumber)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18442" test="count(cda:versionNumber)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] versionNumber (CONF:86-18442).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:custodian)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18443" test="count(cda:custodian)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] custodian (CONF:86-18443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian[count(cda:assignedCustodian)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18444" test="cda:custodian[count(cda:assignedCustodian)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This custodian SHALL contain exactly one [1..1] assignedCustodian (CONF:86-18444).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18445"
                           test="cda:custodian/cda:assignedCustodian[count(cda:representedCustodianOrganization)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This assignedCustodian SHALL contain exactly one [1..1] representedCustodianOrganization (CONF:86-18445).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18446"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This representedCustodianOrganization SHALL contain exactly one [1..1] id (CONF:86-18446).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18447"
                           test="cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id[@root='2.16.840.1.114222.4.3.2.11']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @root="2.16.840.1.114222.4.3.2.11" (CONF:86-18447).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18448" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:86-18448).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18449" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:86-18449).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18450-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The structuredBody element SHALL contain a component element for each section required by the particular report type. Additional sections may be present but their content will not be processed by NHSN (CONF:86-18450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18460"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.25'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-18460) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.25" (CONF:86-18461).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:typeId)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18463" test="count(cda:typeId)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] typeId (CONF:86-18463).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@root='2.16.840.1.113883.1.3']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18464" test="cda:typeId[@root='2.16.840.1.113883.1.3']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @root="2.16.840.1.113883.1.3" (CONF:86-18464).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:typeId[@extension='POCD_HD000040']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18465" test="cda:typeId[@extension='POCD_HD000040']" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This typeId SHALL contain exactly one [1..1] @extension="POCD_HD000040" (CONF:86-18465).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:id)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18466-c" test="count(cda:id)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] id (CONF:86-18466).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18470"
                           test="not(cda:relatedDocument) or cda:relatedDocument[@typeCode='RPLC']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] @typeCode="RPLC" replace (CodeSystem: HL7ActRelationshipType urn:oid:2.16.840.1.113883.5.1002 STATIC) (CONF:86-18470).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18471-c"
                           test="cda:versionNumber/@value=1 or (cda:versionNumber/@value &gt; 1 and cda:relatedDocument[@typeCode=&#34;RPLC&#34;])"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>If versionNumber/@value is greater than 1, a relatedDocument element SHALL be present (CONF:86-18471).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18472-c" test="count(cda:recordTarget) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] recordTarget (CONF:86-18472).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:author) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18473-c" test="count(cda:author) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain at least one [1..*] author (CONF:86-18473).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component) &gt; 0"/>
         <xsl:otherwise>
            <failed-assert id="a-86-18475-c" test="count(cda:component) &gt; 0" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain at least one [1..*] component (CONF:86-18475).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:code[@codeSystem]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-27413" test="cda:code[@codeSystem]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem (CodeSystem: LOINC urn:oid:2.16.840.1.113883.6.1) (CONF:86-27413).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28401"
                           test="not(cda:relatedDocument) or cda:relatedDocument[count(cda:parentDocument)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The relatedDocument, if present, SHALL contain exactly one [1..1] parentDocument (CONF:86-28401).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28402"
                           test="not(cda:relatedDocument/cda:parentDocument) or cda:relatedDocument/cda:parentDocument[count(cda:id) &gt; 0]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This parentDocument SHALL contain at least one [1..*] id (CONF:86-28402).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-28403-c" test="not(tested)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The value of id SHALL be populated with the ClinicalDocument/id of the document being replaced (CONF:86-28403).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22431"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.4.28'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:86-22431) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.4.28" (CONF:86-22432).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:recordTarget)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22433" test="count(cda:recordTarget)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] recordTarget (CONF:86-22433).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget[count(cda:patientRole)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22434" test="cda:recordTarget[count(cda:patientRole)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This recordTarget SHALL contain exactly one [1..1] patientRole (CONF:86-22434).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22435" test="cda:recordTarget/cda:patientRole[count(cda:id)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This patientRole SHALL contain exactly one [1..1] id (CONF:86-22435).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22436"
                           test="cda:recordTarget/cda:patientRole/cda:id[@nullFlavor='NA']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This id SHALL contain exactly one [1..1] @nullFlavor="NA" not applicable (CONF:86-22436).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22437"
                           test="count(cda:participant[@typeCode='SBJ'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='PRS'][count(cda:code[@code='389109008'])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22437) such that it SHALL contain exactly one [1..1] @typeCode="SBJ" Subject (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22438). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22439). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22440). This associatedEntity SHALL contain exactly one [1..1] @classCode="PRS" Person (CodeSystem: HL7EntityClass urn:oid:2.16.840.1.113883.5.41 STATIC) (CONF:86-22441). This associatedEntity SHALL contain exactly one [1..1] code (CONF:86-22442). This code SHALL contain exactly one [1..1] @code="389109008" Group (CodeSystem: SNOMED CT urn:oid:2.16.840.1.113883.6.96 STATIC) (CONF:86-22443).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22444"
                           test="count(cda:participant[@typeCode='LOC'][@contextControlCode='OP'][count(cda:associatedEntity[@classCode='SDLOC'][count(cda:id[@root])=1])=1])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] participant (CONF:86-22444) such that it SHALL contain exactly one [1..1] @typeCode="LOC" Location (CodeSystem: HL7ParticipationType urn:oid:2.16.840.1.113883.5.90 STATIC) (CONF:86-22445). SHALL contain exactly one [1..1] @contextControlCode="OP" (CodeSystem: HL7ContextControl urn:oid:2.16.840.1.113883.5.1057 STATIC) (CONF:86-22446). SHALL contain exactly one [1..1] associatedEntity (CONF:86-22447). This associatedEntity SHALL contain exactly one [1..1] @classCode="SDLOC" Service delivery location (CodeSystem: HL7RoleClass urn:oid:2.16.840.1.113883.5.110 STATIC) (CONF:86-22448). This associatedEntity SHALL contain exactly one [1..1] id (CONF:86-22449). This id SHALL contain exactly one [1..1] @root (CONF:86-22450).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22451" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:86-22451).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22452" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:86-22452).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22453" test="cda:documentationOf/cda:serviceEvent[@classCode='CASE']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] @classCode="CASE" (CodeSystem: HL7ActClass urn:oid:2.16.840.1.113883.5.6 STATIC) (CONF:86-22453).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22454"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code[@code=document('hai_voc.xml')/voc:systems/voc:system[@valueSetOid='2.16.840.1.114222.4.11.3595']/voc:code/@value or @nullFlavor])=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code, which SHALL be selected from ValueSet NHSNPopulationSummaryReportTypeCode urn:oid:2.16.840.1.114222.4.11.3595 STATIC (CONF:86-22454).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22456"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:effectiveTime)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] effectiveTime (CONF:86-22456).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22457"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:low)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] low (CONF:86-22457).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22458"
                           test="cda:documentationOf/cda:serviceEvent/cda:effectiveTime[count(cda:high)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This effectiveTime SHALL contain exactly one [1..1] high (CONF:86-22458).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="not(tested-here)"/>
         <xsl:otherwise>
            <failed-assert id="a-86-22459-c" test="not(tested-here)" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>The author SHALL represent the software forming the message (CONF:86-22459).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.2'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21970"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.7.2.2'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-21970) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.7.2.2" (CONF:3357-21971).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:documentationOf)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21790" test="count(cda:documentationOf)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] documentationOf (CONF:3357-21790).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf[count(cda:serviceEvent)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21791" test="cda:documentationOf[count(cda:serviceEvent)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This documentationOf SHALL contain exactly one [1..1] serviceEvent (CONF:3357-21791).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21792"
                           test="cda:documentationOf/cda:serviceEvent[count(cda:code)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This serviceEvent SHALL contain exactly one [1..1] code (CONF:3357-21792).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:component)=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21793" test="count(cda:component)=1" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] component (CONF:3357-21793).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component[count(cda:structuredBody)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21794" test="cda:component[count(cda:structuredBody)=1]" role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] structuredBody (CONF:3357-21794).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody[count(cda:component)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21795"
                           test="cda:component/cda:structuredBody[count(cda:component)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This structuredBody SHALL contain exactly one [1..1] component (CONF:3357-21795).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:component/cda:structuredBody/cda:component[count(cda:section)=1]"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21796"
                           test="cda:component/cda:structuredBody/cda:component[count(cda:section)=1]"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This component SHALL contain exactly one [1..1] Summary Data Section (OPC) (identifier: urn:oid:2.16.840.1.113883.10.20.5.5.56) (CONF:3357-21796).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.48'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21789"
                           test="count(cda:templateId[@root='2.16.840.1.113883.10.20.5.48'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] templateId (CONF:3357-21789) such that it SHALL contain exactly one [1..1] @root="2.16.840.1.113883.10.20.5.48" (CONF:3357-21797).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@code='1657-6']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21799"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@code='1657-6']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @code="1657-6" Summary data reporting outpatient procedure component events at a facility (CONF:3357-21799).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21800"
                           test="cda:documentationOf/cda:serviceEvent/cda:code[@codeSystem='2.16.840.1.113883.6.277']"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>This code SHALL contain exactly one [1..1] @codeSystem="2.16.840.1.113883.6.277" (CodeSystem: cdcNHSN urn:oid:2.16.840.1.113883.6.277) (CONF:3357-21800).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
         <xsl:when test="count(cda:title[text()='Denominator for Outpatient Procedure Component (OPC)'])=1"/>
         <xsl:otherwise>
            <failed-assert id="a-3357-21798"
                           test="count(cda:title[text()='Denominator for Outpatient Procedure Component (OPC)'])=1"
                           role="">
               <xsl:attribute name="location">
                  <xsl:apply-templates select="." mode="schematron-get-full-path"/>
               </xsl:attribute>
               <text>SHALL contain exactly one [1..1] title="Denominator for Outpatient Procedure Component (OPC)" (CONF:3357-21798).</text>
            </failed-assert>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates mode="M370"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M370"/>
   <xsl:template match="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.48' and @extension='2018-04-01']]"
                 priority="3999"
                 mode="M371">
      <fired-rule id="r-urn-hl7ii-2.16.840.1.113883.10.20.5.48-2018-04-01-errors-CL"
                  context="cda:ClinicalDocument[cda:templateId[@root='2.16.840.1.113883.10.20.5.48' and @extension='2018-04-01']]"
                  role=""/>
      <xsl:apply-templates mode="M371"/>
   </xsl:template>
   <xsl:template match="text()" priority="-1" mode="M371"/>
   <xsl:template match="text()" priority="-1"/>
</xsl:stylesheet>